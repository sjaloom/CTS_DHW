#1
char Aclass(3,24)
Adymosim
1.4
Modelica experiment file


#    Experiment parameters
double experiment(7,1)
       0                   # StartTime    Time at which integration starts
                           #              (and linearization and trimming time)
       2                   # StopTime     Time at which integration stops
       0                   # Increment    Communication step size, if > 0
     500                   # nInterval    Number of communication intervals, if > 0
  1.0000000000000000E-04   # Tolerance    Relative precision of signals for
                           #              simulation, linearization and trimming
       0                   # MaxFixedStep Maximum step size of fixed step size
                           #              integrators, if > 0.0
       8                   # Algorithm    Integration algorithm as integer (1...28)
                           #
                           #             | model|       |        | dense | state |
                           # Algorithm   | typ  | stiff | order  | output| event |
                           # ------------+------+-------+--------+-------+-------+
                           #  1 | deabm  |  ode |   no  |  1-12  |  yes  |   no  |
                           #  2 | lsode1 |  ode |   no  |  1-12  |  yes  |   no  |
                           #  3 | lsode2 |  ode |  yes  |  1-5   |  yes  |   no  |
                           #  4 | lsodar |  ode |  both |1-12,1-5|  yes  |  yes  |
                           #  5 | dopri5 |  ode |   no  |   5    |   no  |   no  |
                           #  6 | dopri8 |  ode |   no  |   8    |   no  |   no  |
                           #  7 | grk4t  |  ode |  yes  |   4    |   no  |   no  |
                           #  8 | dassl  |  dae |  yes  |  1-5   |  yes  |  yes  |
                           #  9 | odassl | hdae |  yes  |  1-5   |  yes  |  yes  |
                           # 10 | mexx   | hdae |   no  |  2-24  |   no  |   no  |
                           # 11 | euler  |  ode |   no  |   1    |   no  |  yes  |
                           # 12 | rkfix2 |  ode |   no  |   2    |   no  |  yes  |
                           # 13 | rkfix3 |  ode |   no  |   3    |   no  |  yes  |
                           # 14 | rkfix4 |  ode |   no  |   4    |   no  |  yes  |
                           #>=14| others |  ode |yes/no |  2-5   |   yes |  yes  |
                           # ---+--------+------+-------+--------+-------+-------+
                           # euler and rkfix have fixed stepsize.


#    Method tuning parameters
double method(27,1)
       1                   # grid     type of communication time grid, defined by
                           #          = 1: equidistant points ("Increment/nInterval")
                           #          = 2: vector of grid points ("tgrid")
                           #          = 3: variable step integrator (automatically)
                           #          = 4: model (call of "increment" in Dymola, e.g.
                           #                      incr=Time > 2 then 0 else 0.1
                           #                      dummy=increment(incr))
                           #          grid = 1,3 is stopped by "StopTime"
                           #          grid = 2   is stopped by "tgrid(last)"
                           #          grid = 4   runs forever (stopped by model)
       1                   # nt       Use every NT time instant, if grid = 3
       3                   # dense    1/2/3 restart/step/interpolate GRID points
       1                   # evgrid   0/1 do not/save event points in comm. time grid
       1                   # evu      0/1 U-discontinuity does not/trigger events
       0                   # evuord       U-discontinuity order to consider (0,1,...)
       0                   # error    0/1/2 One message/warning/error messages
       0                   # jac      0/1 Compute jacobian numerically/by BLOCKJ
       0                   # xd0c     0/1 Compute/set XD0
       0                   # f3       0/1 Ignore/use F3 of HDAE (= index 1)
       0                   # f4       0/1 Ignore/use F4 of HDAE (= index 2)
       0                   # f5       0/1 Ignore/use F5 of HDAE (= invar.)
       0                   # debug    flags for debug information (1<<0 uses pdebug) 
     100                   # pdebug       priority of debug information (1...100)
       0                   # fmax     Maximum number of evaluations of BLOCKF, if > 0
       0                   # ordmax   Maximum allowed integration order, if > 0
       0                   # hmax     Maximum absolute stepsize, if > 0
       0                   # hmin     Minimum absolute stepsize, if > 0 (use with care!)
       0                   # h0       Stepsize to be attempted on first step, if > 0
  2.0000000000000000E-14   # teps     Bound to check, if 2 equal time instants
  1.0000000000000000E-10   # eveps    Hysteresis epsilon at event points
      20                   # eviter   Maximum number of event iterations
  9.9999999999999995E-07   # delaym   Minimum time increment in delay buffers
       1                   # fexcep   0/1 floating exception crashes/stops dymosim
       1                   # tscale   clock-time = tscale*simulation-time, if grid = 5
                           #          > 1: simulation too slow
                           #          = 1: simulation-time = real-time
                           #          < 1: simulation too fast
       1                   # shared   (not used)
    2473                   # memkey   (not used)


#    Output parameters
int settings(13,1)
 0                         # lprec    0/1 do not/store result data in double
 1                         # lx       0/1 do not/store x  (state variables)
 1                         # lxd      0/1 do not/store xd (derivative of states)
 1                         # lu       0/1 do not/store u  (input     signals)
 1                         # ly       0/1 do not/store y  (output    signals)
 0                         # lz       0/1 do not/store z  (indicator signals)
 1                         # lw       0/1 do not/store w  (auxiliary signals)
 1                         # la       0/1 do not/store a  (alias     signals)
 0                         # lperf    0/1 do not/store performance indicators
 0                         # levent   0/1 do not/store event point
 1                         # lres     0/1 do not/store results on result file
 0                         # lshare   0/1 do not/store info data for shared memory on dsshare.txt
 1                         # lform    0/1 ASCII/Matlab-binary storage format of results
                           #              (for simulation/linearization; not for trimming)


#    Names of initial variables
char initialName(4264,50)
mLoad
rLoad[1]
rLoad[2]
rLoad[3]
g
refStartTime
refSwingTime
startAngle1
startAngle2
startAngle3
startAngle4
startAngle5
startAngle6
endAngle1
endAngle2
endAngle3
endAngle4
endAngle5
endAngle6
refSpeedMax[1]
refSpeedMax[2]
refSpeedMax[3]
refSpeedMax[4]
refSpeedMax[5]
refSpeedMax[6]
refAccMax[1]
refAccMax[2]
refAccMax[3]
refAccMax[4]
refAccMax[5]
refAccMax[6]
kp1
ks1
Ts1
kp2
ks2
Ts2
kp3
ks3
Ts3
kp4
ks4
Ts4
kp5
ks5
Ts5
kp6
ks6
Ts6
mechanics.world.frame_b.r_0[1]
mechanics.world.frame_b.r_0[2]
mechanics.world.frame_b.r_0[3]
mechanics.world.frame_b.R.T[1, 1]
mechanics.world.frame_b.R.T[1, 2]
mechanics.world.frame_b.R.T[1, 3]
mechanics.world.frame_b.R.T[2, 1]
mechanics.world.frame_b.R.T[2, 2]
mechanics.world.frame_b.R.T[2, 3]
mechanics.world.frame_b.R.T[3, 1]
mechanics.world.frame_b.R.T[3, 2]
mechanics.world.frame_b.R.T[3, 3]
mechanics.world.frame_b.R.w[1]
mechanics.world.frame_b.R.w[2]
mechanics.world.frame_b.R.w[3]
mechanics.world.frame_b.f[1]
mechanics.world.frame_b.f[2]
mechanics.world.frame_b.f[3]
mechanics.world.frame_b.t[1]
mechanics.world.frame_b.t[3]
mechanics.world.enableAnimation
mechanics.world.animateWorld
mechanics.world.animateGravity
mechanics.world.animateGround
mechanics.world.gravityType
mechanics.world.g
mechanics.world.n[1]
mechanics.world.n[2]
mechanics.world.n[3]
mechanics.world.mu
mechanics.world.driveTrainMechanics3D
mechanics.world.axisLength
mechanics.world.axisDiameter
mechanics.world.axisShowLabels
mechanics.world.axisColor_x[1]
mechanics.world.axisColor_x[2]
mechanics.world.axisColor_x[3]
mechanics.world.axisColor_y[1]
mechanics.world.axisColor_y[2]
mechanics.world.axisColor_y[3]
mechanics.world.axisColor_z[1]
mechanics.world.axisColor_z[2]
mechanics.world.axisColor_z[3]
mechanics.world.gravityArrowTail[1]
mechanics.world.gravityArrowTail[2]
mechanics.world.gravityArrowTail[3]
mechanics.world.gravityArrowLength
mechanics.world.gravityArrowDiameter
mechanics.world.gravityArrowColor[1]
mechanics.world.gravityArrowColor[2]
mechanics.world.gravityArrowColor[3]
mechanics.world.gravitySphereDiameter
mechanics.world.gravitySphereColor[1]
mechanics.world.gravitySphereColor[2]
mechanics.world.gravitySphereColor[3]
mechanics.world.groundAxis_u[1]
mechanics.world.groundAxis_u[2]
mechanics.world.groundAxis_u[3]
mechanics.world.groundLength_u
mechanics.world.groundLength_v
mechanics.world.groundColor[1]
mechanics.world.groundColor[2]
mechanics.world.groundColor[3]
mechanics.world.nominalLength
mechanics.world.defaultAxisLength
mechanics.world.defaultJointLength
mechanics.world.defaultJointWidth
mechanics.world.defaultForceLength
mechanics.world.defaultForceWidth
mechanics.world.defaultBodyDiameter
mechanics.world.defaultWidthFraction
mechanics.world.defaultArrowDiameter
mechanics.world.defaultFrameDiameterFraction
mechanics.world.defaultSpecularCoefficient
mechanics.world.defaultN_to_m
mechanics.world.defaultNm_to_m
mechanics.world.ndim
mechanics.world.ndim2
mechanics.world.headLength
mechanics.world.headWidth
mechanics.world.lineLength
mechanics.world.lineWidth
mechanics.world.scaledLabel
mechanics.world.labelStart
mechanics.world.gravityHeadLength
mechanics.world.gravityHeadWidth
mechanics.world.gravityLineLength
mechanics.world.ndim_pointGravity
mechanics.animation
mechanics.mLoad
mechanics.rLoad[1]
mechanics.rLoad[2]
mechanics.rLoad[3]
mechanics.g
mechanics.r1.frame_a.r_0[1]
mechanics.r1.frame_a.r_0[2]
mechanics.r1.frame_a.r_0[3]
mechanics.r1.frame_a.R.T[1, 1]
mechanics.r1.frame_a.R.T[1, 2]
mechanics.r1.frame_a.R.T[1, 3]
mechanics.r1.frame_a.R.T[2, 1]
mechanics.r1.frame_a.R.T[2, 2]
mechanics.r1.frame_a.R.T[2, 3]
mechanics.r1.frame_a.R.T[3, 1]
mechanics.r1.frame_a.R.T[3, 2]
mechanics.r1.frame_a.R.T[3, 3]
mechanics.r1.frame_a.R.w[1]
mechanics.r1.frame_a.R.w[2]
mechanics.r1.frame_a.R.w[3]
mechanics.r1.frame_a.t[1]
mechanics.r1.frame_a.t[3]
mechanics.r1.frame_b.r_0[1]
mechanics.r1.frame_b.r_0[2]
mechanics.r1.frame_b.r_0[3]
mechanics.r1.frame_b.R.T[1, 2]
mechanics.r1.frame_b.R.T[2, 1]
mechanics.r1.frame_b.R.T[2, 2]
mechanics.r1.frame_b.R.T[2, 3]
mechanics.r1.frame_b.R.T[3, 2]
mechanics.r1.frame_b.R.w[1]
mechanics.r1.frame_b.R.w[3]
mechanics.r1.frame_b.f[1]
mechanics.r1.frame_b.f[2]
mechanics.r1.frame_b.f[3]
mechanics.r1.frame_b.t[1]
mechanics.r1.frame_b.t[2]
mechanics.r1.frame_b.t[3]
mechanics.r1.useAxisFlange
mechanics.r1.animation
mechanics.r1.n[1]
mechanics.r1.n[2]
mechanics.r1.n[3]
mechanics.r1.cylinderLength
mechanics.r1.cylinderDiameter
mechanics.r1.cylinderColor[1]
mechanics.r1.cylinderColor[2]
mechanics.r1.cylinderColor[3]
mechanics.r1.stateSelect
mechanics.r1.phi
mechanics.r1.der(phi)
mechanics.r1.w
mechanics.r1.der(w)
mechanics.r1.e[1]
mechanics.r1.e[2]
mechanics.r1.e[3]
mechanics.r1.R_rel.T[1, 1]
mechanics.r1.R_rel.T[1, 2]
mechanics.r1.R_rel.T[1, 3]
mechanics.r1.R_rel.T[2, 1]
mechanics.r1.R_rel.T[2, 2]
mechanics.r1.R_rel.T[2, 3]
mechanics.r1.R_rel.T[3, 1]
mechanics.r1.R_rel.T[3, 2]
mechanics.r1.R_rel.T[3, 3]
mechanics.r1.R_rel.w[1]
mechanics.r1.R_rel.w[2]
mechanics.r1.R_rel.w[3]
mechanics.r1.cylinder.R.T[1, 1]
mechanics.r1.cylinder.R.T[1, 2]
mechanics.r1.cylinder.R.T[1, 3]
mechanics.r1.cylinder.R.T[2, 1]
mechanics.r1.cylinder.R.T[2, 2]
mechanics.r1.cylinder.R.T[2, 3]
mechanics.r1.cylinder.R.T[3, 1]
mechanics.r1.cylinder.R.T[3, 2]
mechanics.r1.cylinder.R.T[3, 3]
mechanics.r1.cylinder.R.w[1]
mechanics.r1.cylinder.R.w[2]
mechanics.r1.cylinder.R.w[3]
mechanics.r1.cylinder.r[1]
mechanics.r1.cylinder.r[2]
mechanics.r1.cylinder.r[3]
mechanics.r1.cylinder.r_shape[1]
mechanics.r1.cylinder.r_shape[2]
mechanics.r1.cylinder.r_shape[3]
mechanics.r1.cylinder.lengthDirection[1]
mechanics.r1.cylinder.lengthDirection[2]
mechanics.r1.cylinder.lengthDirection[3]
mechanics.r1.cylinder.widthDirection[1]
mechanics.r1.cylinder.widthDirection[2]
mechanics.r1.cylinder.widthDirection[3]
mechanics.r1.cylinder.length
mechanics.r1.cylinder.width
mechanics.r1.cylinder.height
mechanics.r1.cylinder.extra
mechanics.r1.cylinder.color[1]
mechanics.r1.cylinder.color[2]
mechanics.r1.cylinder.color[3]
mechanics.r1.cylinder.isURI
mechanics.r1.cylinder.abs_n_x
mechanics.r1.cylinder.n_z_aux[1]
mechanics.r1.cylinder.n_z_aux[2]
mechanics.r1.cylinder.n_z_aux[3]
mechanics.r1.cylinder.e_x[1]
mechanics.r1.cylinder.e_x[2]
mechanics.r1.cylinder.e_x[3]
mechanics.r1.cylinder.e_y[1]
mechanics.r1.cylinder.e_y[2]
mechanics.r1.cylinder.e_y[3]
mechanics.r1.cylinder.Form
mechanics.r1.cylinder.rxvisobj[1]
mechanics.r1.cylinder.rxvisobj[2]
mechanics.r1.cylinder.rxvisobj[3]
mechanics.r1.cylinder.ryvisobj[1]
mechanics.r1.cylinder.ryvisobj[2]
mechanics.r1.cylinder.ryvisobj[3]
mechanics.r1.cylinder.rvisobj[1]
mechanics.r1.cylinder.rvisobj[2]
mechanics.r1.cylinder.rvisobj[3]
mechanics.r1.cylinder.size[1]
mechanics.r1.cylinder.size[2]
mechanics.r1.cylinder.size[3]
mechanics.r1.cylinder.Material
mechanics.r1.cylinder.Extra
mechanics.r1.fixed.phi0
mechanics.r1.fixed.flange.tau
mechanics.r1.support.tau
mechanics.r2.frame_a.r_0[2]
mechanics.r2.frame_a.R.T[1, 2]
mechanics.r2.frame_a.R.T[2, 1]
mechanics.r2.frame_a.R.T[2, 2]
mechanics.r2.frame_a.R.T[2, 3]
mechanics.r2.frame_a.R.T[3, 2]
mechanics.r2.frame_a.R.w[1]
mechanics.r2.frame_a.R.w[3]
mechanics.r2.frame_a.f[2]
mechanics.r2.frame_a.f[3]
mechanics.r2.frame_a.t[2]
mechanics.r2.frame_a.t[3]
mechanics.r2.frame_b.r_0[2]
mechanics.r2.frame_b.R.T[1, 2]
mechanics.r2.frame_b.f[1]
mechanics.r2.frame_b.f[2]
mechanics.r2.frame_b.f[3]
mechanics.r2.frame_b.t[1]
mechanics.r2.frame_b.t[2]
mechanics.r2.frame_b.t[3]
mechanics.r2.useAxisFlange
mechanics.r2.animation
mechanics.r2.n[1]
mechanics.r2.n[2]
mechanics.r2.n[3]
mechanics.r2.cylinderLength
mechanics.r2.cylinderDiameter
mechanics.r2.cylinderColor[1]
mechanics.r2.cylinderColor[2]
mechanics.r2.cylinderColor[3]
mechanics.r2.stateSelect
mechanics.r2.phi
mechanics.r2.der(phi)
mechanics.r2.w
mechanics.r2.der(w)
mechanics.r2.e[1]
mechanics.r2.e[2]
mechanics.r2.e[3]
mechanics.r2.R_rel.T[1, 1]
mechanics.r2.R_rel.T[1, 2]
mechanics.r2.R_rel.T[1, 3]
mechanics.r2.R_rel.T[2, 1]
mechanics.r2.R_rel.T[2, 2]
mechanics.r2.R_rel.T[2, 3]
mechanics.r2.R_rel.T[3, 1]
mechanics.r2.R_rel.T[3, 2]
mechanics.r2.R_rel.T[3, 3]
mechanics.r2.R_rel.w[1]
mechanics.r2.R_rel.w[2]
mechanics.r2.R_rel.w[3]
mechanics.r2.cylinder.R.T[1, 2]
mechanics.r2.cylinder.R.T[2, 1]
mechanics.r2.cylinder.R.T[2, 2]
mechanics.r2.cylinder.R.T[2, 3]
mechanics.r2.cylinder.R.T[3, 2]
mechanics.r2.cylinder.R.w[1]
mechanics.r2.cylinder.R.w[3]
mechanics.r2.cylinder.r[2]
mechanics.r2.cylinder.r_shape[1]
mechanics.r2.cylinder.r_shape[2]
mechanics.r2.cylinder.r_shape[3]
mechanics.r2.cylinder.lengthDirection[1]
mechanics.r2.cylinder.lengthDirection[2]
mechanics.r2.cylinder.lengthDirection[3]
mechanics.r2.cylinder.widthDirection[1]
mechanics.r2.cylinder.widthDirection[2]
mechanics.r2.cylinder.widthDirection[3]
mechanics.r2.cylinder.length
mechanics.r2.cylinder.width
mechanics.r2.cylinder.height
mechanics.r2.cylinder.extra
mechanics.r2.cylinder.color[1]
mechanics.r2.cylinder.color[2]
mechanics.r2.cylinder.color[3]
mechanics.r2.cylinder.isURI
mechanics.r2.cylinder.abs_n_x
mechanics.r2.cylinder.n_z_aux[1]
mechanics.r2.cylinder.n_z_aux[2]
mechanics.r2.cylinder.n_z_aux[3]
mechanics.r2.cylinder.e_x[1]
mechanics.r2.cylinder.e_x[2]
mechanics.r2.cylinder.e_x[3]
mechanics.r2.cylinder.e_y[1]
mechanics.r2.cylinder.e_y[2]
mechanics.r2.cylinder.e_y[3]
mechanics.r2.cylinder.Form
mechanics.r2.cylinder.rxvisobj[2]
mechanics.r2.cylinder.ryvisobj[1]
mechanics.r2.cylinder.ryvisobj[2]
mechanics.r2.cylinder.ryvisobj[3]
mechanics.r2.cylinder.rvisobj[1]
mechanics.r2.cylinder.rvisobj[2]
mechanics.r2.cylinder.rvisobj[3]
mechanics.r2.cylinder.size[1]
mechanics.r2.cylinder.size[2]
mechanics.r2.cylinder.size[3]
mechanics.r2.cylinder.Material
mechanics.r2.cylinder.Extra
mechanics.r2.fixed.phi0
mechanics.r2.fixed.flange.tau
mechanics.r2.support.tau
mechanics.r3.frame_a.R.T[1, 2]
mechanics.r3.frame_a.f[2]
mechanics.r3.frame_a.f[3]
mechanics.r3.frame_a.t[2]
mechanics.r3.frame_a.t[3]
mechanics.r3.frame_b.R.T[1, 2]
mechanics.r3.frame_b.f[1]
mechanics.r3.frame_b.f[2]
mechanics.r3.frame_b.f[3]
mechanics.r3.frame_b.t[1]
mechanics.r3.frame_b.t[2]
mechanics.r3.frame_b.t[3]
mechanics.r3.useAxisFlange
mechanics.r3.animation
mechanics.r3.n[1]
mechanics.r3.n[2]
mechanics.r3.n[3]
mechanics.r3.cylinderLength
mechanics.r3.cylinderDiameter
mechanics.r3.cylinderColor[1]
mechanics.r3.cylinderColor[2]
mechanics.r3.cylinderColor[3]
mechanics.r3.stateSelect
mechanics.r3.phi
mechanics.r3.der(phi)
mechanics.r3.w
mechanics.r3.der(w)
mechanics.r3.e[1]
mechanics.r3.e[2]
mechanics.r3.e[3]
mechanics.r3.R_rel.T[1, 1]
mechanics.r3.R_rel.T[1, 2]
mechanics.r3.R_rel.T[1, 3]
mechanics.r3.R_rel.T[2, 1]
mechanics.r3.R_rel.T[2, 2]
mechanics.r3.R_rel.T[2, 3]
mechanics.r3.R_rel.T[3, 1]
mechanics.r3.R_rel.T[3, 2]
mechanics.r3.R_rel.T[3, 3]
mechanics.r3.R_rel.w[1]
mechanics.r3.R_rel.w[2]
mechanics.r3.R_rel.w[3]
mechanics.r3.cylinder.R.T[1, 2]
mechanics.r3.cylinder.r_shape[1]
mechanics.r3.cylinder.r_shape[2]
mechanics.r3.cylinder.r_shape[3]
mechanics.r3.cylinder.lengthDirection[1]
mechanics.r3.cylinder.lengthDirection[2]
mechanics.r3.cylinder.lengthDirection[3]
mechanics.r3.cylinder.widthDirection[1]
mechanics.r3.cylinder.widthDirection[2]
mechanics.r3.cylinder.widthDirection[3]
mechanics.r3.cylinder.length
mechanics.r3.cylinder.width
mechanics.r3.cylinder.height
mechanics.r3.cylinder.extra
mechanics.r3.cylinder.color[1]
mechanics.r3.cylinder.color[2]
mechanics.r3.cylinder.color[3]
mechanics.r3.cylinder.isURI
mechanics.r3.cylinder.abs_n_x
mechanics.r3.cylinder.n_z_aux[1]
mechanics.r3.cylinder.n_z_aux[2]
mechanics.r3.cylinder.n_z_aux[3]
mechanics.r3.cylinder.e_x[1]
mechanics.r3.cylinder.e_x[2]
mechanics.r3.cylinder.e_x[3]
mechanics.r3.cylinder.e_y[1]
mechanics.r3.cylinder.e_y[2]
mechanics.r3.cylinder.e_y[3]
mechanics.r3.cylinder.Form
mechanics.r3.cylinder.rxvisobj[2]
mechanics.r3.cylinder.rvisobj[1]
mechanics.r3.cylinder.rvisobj[3]
mechanics.r3.cylinder.size[1]
mechanics.r3.cylinder.size[2]
mechanics.r3.cylinder.size[3]
mechanics.r3.cylinder.Material
mechanics.r3.cylinder.Extra
mechanics.r3.fixed.phi0
mechanics.r3.fixed.flange.tau
mechanics.r3.support.tau
mechanics.r4.frame_a.R.T[1, 2]
mechanics.r4.frame_a.f[1]
mechanics.r4.frame_a.f[3]
mechanics.r4.frame_a.t[1]
mechanics.r4.frame_a.t[3]
mechanics.r4.frame_b.f[1]
mechanics.r4.frame_b.f[2]
mechanics.r4.frame_b.f[3]
mechanics.r4.frame_b.t[1]
mechanics.r4.frame_b.t[2]
mechanics.r4.frame_b.t[3]
mechanics.r4.useAxisFlange
mechanics.r4.animation
mechanics.r4.n[1]
mechanics.r4.n[2]
mechanics.r4.n[3]
mechanics.r4.cylinderLength
mechanics.r4.cylinderDiameter
mechanics.r4.cylinderColor[1]
mechanics.r4.cylinderColor[2]
mechanics.r4.cylinderColor[3]
mechanics.r4.stateSelect
mechanics.r4.phi
mechanics.r4.der(phi)
mechanics.r4.w
mechanics.r4.der(w)
mechanics.r4.e[1]
mechanics.r4.e[2]
mechanics.r4.e[3]
mechanics.r4.R_rel.T[1, 1]
mechanics.r4.R_rel.T[1, 2]
mechanics.r4.R_rel.T[1, 3]
mechanics.r4.R_rel.T[2, 1]
mechanics.r4.R_rel.T[2, 2]
mechanics.r4.R_rel.T[2, 3]
mechanics.r4.R_rel.T[3, 1]
mechanics.r4.R_rel.T[3, 2]
mechanics.r4.R_rel.T[3, 3]
mechanics.r4.R_rel.w[1]
mechanics.r4.R_rel.w[2]
mechanics.r4.R_rel.w[3]
mechanics.r4.cylinder.R.T[1, 2]
mechanics.r4.cylinder.r_shape[1]
mechanics.r4.cylinder.r_shape[2]
mechanics.r4.cylinder.r_shape[3]
mechanics.r4.cylinder.lengthDirection[1]
mechanics.r4.cylinder.lengthDirection[2]
mechanics.r4.cylinder.lengthDirection[3]
mechanics.r4.cylinder.widthDirection[1]
mechanics.r4.cylinder.widthDirection[2]
mechanics.r4.cylinder.widthDirection[3]
mechanics.r4.cylinder.length
mechanics.r4.cylinder.width
mechanics.r4.cylinder.height
mechanics.r4.cylinder.extra
mechanics.r4.cylinder.color[1]
mechanics.r4.cylinder.color[2]
mechanics.r4.cylinder.color[3]
mechanics.r4.cylinder.isURI
mechanics.r4.cylinder.abs_n_x
mechanics.r4.cylinder.n_z_aux[1]
mechanics.r4.cylinder.n_z_aux[2]
mechanics.r4.cylinder.n_z_aux[3]
mechanics.r4.cylinder.e_x[1]
mechanics.r4.cylinder.e_x[2]
mechanics.r4.cylinder.e_x[3]
mechanics.r4.cylinder.e_y[1]
mechanics.r4.cylinder.e_y[2]
mechanics.r4.cylinder.e_y[3]
mechanics.r4.cylinder.Form
mechanics.r4.cylinder.ryvisobj[2]
mechanics.r4.cylinder.rvisobj[1]
mechanics.r4.cylinder.rvisobj[2]
mechanics.r4.cylinder.rvisobj[3]
mechanics.r4.cylinder.size[1]
mechanics.r4.cylinder.size[2]
mechanics.r4.cylinder.size[3]
mechanics.r4.cylinder.Material
mechanics.r4.cylinder.Extra
mechanics.r4.fixed.phi0
mechanics.r4.fixed.flange.tau
mechanics.r4.support.tau
mechanics.r5.frame_a.f[2]
mechanics.r5.frame_a.f[3]
mechanics.r5.frame_a.t[2]
mechanics.r5.frame_a.t[3]
mechanics.r5.frame_b.f[1]
mechanics.r5.frame_b.f[2]
mechanics.r5.frame_b.f[3]
mechanics.r5.frame_b.t[1]
mechanics.r5.frame_b.t[2]
mechanics.r5.frame_b.t[3]
mechanics.r5.useAxisFlange
mechanics.r5.animation
mechanics.r5.n[1]
mechanics.r5.n[2]
mechanics.r5.n[3]
mechanics.r5.cylinderLength
mechanics.r5.cylinderDiameter
mechanics.r5.cylinderColor[1]
mechanics.r5.cylinderColor[2]
mechanics.r5.cylinderColor[3]
mechanics.r5.stateSelect
mechanics.r5.phi
mechanics.r5.der(phi)
mechanics.r5.w
mechanics.r5.der(w)
mechanics.r5.e[1]
mechanics.r5.e[2]
mechanics.r5.e[3]
mechanics.r5.R_rel.T[1, 1]
mechanics.r5.R_rel.T[1, 2]
mechanics.r5.R_rel.T[1, 3]
mechanics.r5.R_rel.T[2, 1]
mechanics.r5.R_rel.T[2, 2]
mechanics.r5.R_rel.T[2, 3]
mechanics.r5.R_rel.T[3, 1]
mechanics.r5.R_rel.T[3, 2]
mechanics.r5.R_rel.T[3, 3]
mechanics.r5.R_rel.w[1]
mechanics.r5.R_rel.w[2]
mechanics.r5.R_rel.w[3]
mechanics.r5.cylinder.r_shape[1]
mechanics.r5.cylinder.r_shape[2]
mechanics.r5.cylinder.r_shape[3]
mechanics.r5.cylinder.lengthDirection[1]
mechanics.r5.cylinder.lengthDirection[2]
mechanics.r5.cylinder.lengthDirection[3]
mechanics.r5.cylinder.widthDirection[1]
mechanics.r5.cylinder.widthDirection[2]
mechanics.r5.cylinder.widthDirection[3]
mechanics.r5.cylinder.length
mechanics.r5.cylinder.width
mechanics.r5.cylinder.height
mechanics.r5.cylinder.extra
mechanics.r5.cylinder.color[1]
mechanics.r5.cylinder.color[2]
mechanics.r5.cylinder.color[3]
mechanics.r5.cylinder.isURI
mechanics.r5.cylinder.abs_n_x
mechanics.r5.cylinder.n_z_aux[1]
mechanics.r5.cylinder.n_z_aux[2]
mechanics.r5.cylinder.n_z_aux[3]
mechanics.r5.cylinder.e_x[1]
mechanics.r5.cylinder.e_x[2]
mechanics.r5.cylinder.e_x[3]
mechanics.r5.cylinder.e_y[1]
mechanics.r5.cylinder.e_y[2]
mechanics.r5.cylinder.e_y[3]
mechanics.r5.cylinder.Form
mechanics.r5.cylinder.rvisobj[1]
mechanics.r5.cylinder.rvisobj[2]
mechanics.r5.cylinder.rvisobj[3]
mechanics.r5.cylinder.size[1]
mechanics.r5.cylinder.size[2]
mechanics.r5.cylinder.size[3]
mechanics.r5.cylinder.Material
mechanics.r5.cylinder.Extra
mechanics.r5.fixed.phi0
mechanics.r5.fixed.flange.tau
mechanics.r5.support.tau
mechanics.r6.frame_a.f[1]
mechanics.r6.frame_a.f[3]
mechanics.r6.frame_a.t[1]
mechanics.r6.frame_a.t[3]
mechanics.r6.frame_b.f[1]
mechanics.r6.frame_b.f[2]
mechanics.r6.frame_b.f[3]
mechanics.r6.frame_b.t[1]
mechanics.r6.frame_b.t[2]
mechanics.r6.frame_b.t[3]
mechanics.r6.useAxisFlange
mechanics.r6.animation
mechanics.r6.n[1]
mechanics.r6.n[2]
mechanics.r6.n[3]
mechanics.r6.cylinderLength
mechanics.r6.cylinderDiameter
mechanics.r6.cylinderColor[1]
mechanics.r6.cylinderColor[2]
mechanics.r6.cylinderColor[3]
mechanics.r6.stateSelect
mechanics.r6.phi
mechanics.r6.der(phi)
mechanics.r6.w
mechanics.r6.der(w)
mechanics.r6.e[1]
mechanics.r6.e[2]
mechanics.r6.e[3]
mechanics.r6.R_rel.T[1, 1]
mechanics.r6.R_rel.T[1, 2]
mechanics.r6.R_rel.T[1, 3]
mechanics.r6.R_rel.T[2, 1]
mechanics.r6.R_rel.T[2, 2]
mechanics.r6.R_rel.T[2, 3]
mechanics.r6.R_rel.T[3, 1]
mechanics.r6.R_rel.T[3, 2]
mechanics.r6.R_rel.T[3, 3]
mechanics.r6.R_rel.w[1]
mechanics.r6.R_rel.w[2]
mechanics.r6.R_rel.w[3]
mechanics.r6.cylinder.r_shape[1]
mechanics.r6.cylinder.r_shape[2]
mechanics.r6.cylinder.r_shape[3]
mechanics.r6.cylinder.lengthDirection[1]
mechanics.r6.cylinder.lengthDirection[2]
mechanics.r6.cylinder.lengthDirection[3]
mechanics.r6.cylinder.widthDirection[1]
mechanics.r6.cylinder.widthDirection[2]
mechanics.r6.cylinder.widthDirection[3]
mechanics.r6.cylinder.length
mechanics.r6.cylinder.width
mechanics.r6.cylinder.height
mechanics.r6.cylinder.extra
mechanics.r6.cylinder.color[1]
mechanics.r6.cylinder.color[2]
mechanics.r6.cylinder.color[3]
mechanics.r6.cylinder.isURI
mechanics.r6.cylinder.abs_n_x
mechanics.r6.cylinder.n_z_aux[1]
mechanics.r6.cylinder.n_z_aux[2]
mechanics.r6.cylinder.n_z_aux[3]
mechanics.r6.cylinder.e_x[1]
mechanics.r6.cylinder.e_x[2]
mechanics.r6.cylinder.e_x[3]
mechanics.r6.cylinder.e_y[1]
mechanics.r6.cylinder.e_y[2]
mechanics.r6.cylinder.e_y[3]
mechanics.r6.cylinder.Form
mechanics.r6.cylinder.rvisobj[1]
mechanics.r6.cylinder.rvisobj[2]
mechanics.r6.cylinder.rvisobj[3]
mechanics.r6.cylinder.size[1]
mechanics.r6.cylinder.size[2]
mechanics.r6.cylinder.size[3]
mechanics.r6.cylinder.Material
mechanics.r6.cylinder.Extra
mechanics.r6.fixed.phi0
mechanics.r6.fixed.flange.tau
mechanics.r6.support.tau
mechanics.b0.frame_a.r_0[1]
mechanics.b0.frame_a.r_0[2]
mechanics.b0.frame_a.r_0[3]
mechanics.b0.frame_a.R.T[1, 1]
mechanics.b0.frame_a.R.T[1, 2]
mechanics.b0.frame_a.R.T[1, 3]
mechanics.b0.frame_a.R.T[2, 1]
mechanics.b0.frame_a.R.T[2, 2]
mechanics.b0.frame_a.R.T[2, 3]
mechanics.b0.frame_a.R.T[3, 1]
mechanics.b0.frame_a.R.T[3, 2]
mechanics.b0.frame_a.R.T[3, 3]
mechanics.b0.frame_a.R.w[1]
mechanics.b0.frame_a.R.w[2]
mechanics.b0.frame_a.R.w[3]
mechanics.b0.frame_b.r_0[1]
mechanics.b0.frame_b.r_0[2]
mechanics.b0.frame_b.r_0[3]
mechanics.b0.frame_b.R.T[1, 1]
mechanics.b0.frame_b.R.T[1, 2]
mechanics.b0.frame_b.R.T[1, 3]
mechanics.b0.frame_b.R.T[2, 1]
mechanics.b0.frame_b.R.T[2, 2]
mechanics.b0.frame_b.R.T[2, 3]
mechanics.b0.frame_b.R.T[3, 1]
mechanics.b0.frame_b.R.T[3, 2]
mechanics.b0.frame_b.R.T[3, 3]
mechanics.b0.frame_b.R.w[1]
mechanics.b0.frame_b.R.w[2]
mechanics.b0.frame_b.R.w[3]
mechanics.b0.animation
mechanics.b0.animateSphere
mechanics.b0.r[1]
mechanics.b0.r[2]
mechanics.b0.r[3]
mechanics.b0.r_CM[1]
mechanics.b0.r_CM[2]
mechanics.b0.r_CM[3]
mechanics.b0.m
mechanics.b0.I_11
mechanics.b0.I_22
mechanics.b0.I_33
mechanics.b0.I_21
mechanics.b0.I_31
mechanics.b0.I_32
mechanics.b0.r_0[1]
mechanics.b0.r_0[2]
mechanics.b0.r_0[3]
mechanics.b0.der(r_0[1])
mechanics.b0.der(r_0[2])
mechanics.b0.der(r_0[3])
mechanics.b0.v_0[1]
mechanics.b0.v_0[2]
mechanics.b0.v_0[3]
mechanics.b0.der(v_0[1])
mechanics.b0.der(v_0[2])
mechanics.b0.der(v_0[3])
mechanics.b0.a_0[1]
mechanics.b0.a_0[2]
mechanics.b0.a_0[3]
mechanics.b0.angles_fixed
mechanics.b0.angles_start[1]
mechanics.b0.angles_start[2]
mechanics.b0.angles_start[3]
mechanics.b0.sequence_start[1]
mechanics.b0.sequence_start[2]
mechanics.b0.sequence_start[3]
mechanics.b0.w_0_fixed
mechanics.b0.w_0_start[1]
mechanics.b0.w_0_start[2]
mechanics.b0.w_0_start[3]
mechanics.b0.z_0_fixed
mechanics.b0.z_0_start[1]
mechanics.b0.z_0_start[2]
mechanics.b0.z_0_start[3]
mechanics.b0.r_shape[1]
mechanics.b0.r_shape[2]
mechanics.b0.r_shape[3]
mechanics.b0.lengthDirection[1]
mechanics.b0.lengthDirection[2]
mechanics.b0.lengthDirection[3]
mechanics.b0.widthDirection[1]
mechanics.b0.widthDirection[2]
mechanics.b0.widthDirection[3]
mechanics.b0.length
mechanics.b0.width
mechanics.b0.height
mechanics.b0.extra
mechanics.b0.color[1]
mechanics.b0.color[2]
mechanics.b0.color[3]
mechanics.b0.sphereDiameter
mechanics.b0.sphereColor[1]
mechanics.b0.sphereColor[2]
mechanics.b0.sphereColor[3]
mechanics.b0.enforceStates
mechanics.b0.useQuaternions
mechanics.b0.sequence_angleStates[1]
mechanics.b0.sequence_angleStates[2]
mechanics.b0.sequence_angleStates[3]
mechanics.b0.frameTranslation.frame_a.r_0[1]
mechanics.b0.frameTranslation.frame_a.r_0[2]
mechanics.b0.frameTranslation.frame_a.r_0[3]
mechanics.b0.frameTranslation.frame_a.R.T[1, 1]
mechanics.b0.frameTranslation.frame_a.R.T[1, 2]
mechanics.b0.frameTranslation.frame_a.R.T[1, 3]
mechanics.b0.frameTranslation.frame_a.R.T[2, 1]
mechanics.b0.frameTranslation.frame_a.R.T[2, 2]
mechanics.b0.frameTranslation.frame_a.R.T[2, 3]
mechanics.b0.frameTranslation.frame_a.R.T[3, 1]
mechanics.b0.frameTranslation.frame_a.R.T[3, 2]
mechanics.b0.frameTranslation.frame_a.R.T[3, 3]
mechanics.b0.frameTranslation.frame_a.R.w[1]
mechanics.b0.frameTranslation.frame_a.R.w[2]
mechanics.b0.frameTranslation.frame_a.R.w[3]
mechanics.b0.frameTranslation.frame_a.t[1]
mechanics.b0.frameTranslation.frame_a.t[3]
mechanics.b0.frameTranslation.frame_b.r_0[1]
mechanics.b0.frameTranslation.frame_b.r_0[2]
mechanics.b0.frameTranslation.frame_b.r_0[3]
mechanics.b0.frameTranslation.frame_b.R.T[1, 1]
mechanics.b0.frameTranslation.frame_b.R.T[1, 2]
mechanics.b0.frameTranslation.frame_b.R.T[1, 3]
mechanics.b0.frameTranslation.frame_b.R.T[2, 1]
mechanics.b0.frameTranslation.frame_b.R.T[2, 2]
mechanics.b0.frameTranslation.frame_b.R.T[2, 3]
mechanics.b0.frameTranslation.frame_b.R.T[3, 1]
mechanics.b0.frameTranslation.frame_b.R.T[3, 2]
mechanics.b0.frameTranslation.frame_b.R.T[3, 3]
mechanics.b0.frameTranslation.frame_b.R.w[1]
mechanics.b0.frameTranslation.frame_b.R.w[2]
mechanics.b0.frameTranslation.frame_b.R.w[3]
mechanics.b0.frameTranslation.animation
mechanics.b0.frameTranslation.r[1]
mechanics.b0.frameTranslation.r[2]
mechanics.b0.frameTranslation.r[3]
mechanics.b0.frameTranslation.r_shape[1]
mechanics.b0.frameTranslation.r_shape[2]
mechanics.b0.frameTranslation.r_shape[3]
mechanics.b0.frameTranslation.lengthDirection[1]
mechanics.b0.frameTranslation.lengthDirection[2]
mechanics.b0.frameTranslation.lengthDirection[3]
mechanics.b0.frameTranslation.widthDirection[1]
mechanics.b0.frameTranslation.widthDirection[2]
mechanics.b0.frameTranslation.widthDirection[3]
mechanics.b0.frameTranslation.length
mechanics.b0.frameTranslation.width
mechanics.b0.frameTranslation.height
mechanics.b0.frameTranslation.extra
mechanics.b0.frameTranslation.color[1]
mechanics.b0.frameTranslation.color[2]
mechanics.b0.frameTranslation.color[3]
mechanics.b0.body.frame_a.r_0[1]
mechanics.b0.body.frame_a.r_0[2]
mechanics.b0.body.frame_a.r_0[3]
mechanics.b0.body.frame_a.der(r_0[1])
mechanics.b0.body.frame_a.der(r_0[2])
mechanics.b0.body.frame_a.der(r_0[3])
mechanics.b0.body.frame_a.R.T[1, 1]
mechanics.b0.body.frame_a.R.T[1, 2]
mechanics.b0.body.frame_a.R.T[1, 3]
mechanics.b0.body.frame_a.R.T[2, 1]
mechanics.b0.body.frame_a.R.T[2, 2]
mechanics.b0.body.frame_a.R.T[2, 3]
mechanics.b0.body.frame_a.R.T[3, 1]
mechanics.b0.body.frame_a.R.T[3, 2]
mechanics.b0.body.frame_a.R.T[3, 3]
mechanics.b0.body.frame_a.R.w[1]
mechanics.b0.body.frame_a.R.w[2]
mechanics.b0.body.frame_a.R.w[3]
mechanics.b0.body.frame_a.f[1]
mechanics.b0.body.frame_a.f[2]
mechanics.b0.body.frame_a.f[3]
mechanics.b0.body.frame_a.t[1]
mechanics.b0.body.frame_a.t[2]
mechanics.b0.body.frame_a.t[3]
mechanics.b0.body.animation
mechanics.b0.body.r_CM[1]
mechanics.b0.body.r_CM[2]
mechanics.b0.body.r_CM[3]
mechanics.b0.body.m
mechanics.b0.body.I_11
mechanics.b0.body.I_22
mechanics.b0.body.I_33
mechanics.b0.body.I_21
mechanics.b0.body.I_31
mechanics.b0.body.I_32
mechanics.b0.body.r_0[1]
mechanics.b0.body.r_0[2]
mechanics.b0.body.r_0[3]
mechanics.b0.body.v_0[1]
mechanics.b0.body.v_0[2]
mechanics.b0.body.v_0[3]
mechanics.b0.body.der(v_0[1])
mechanics.b0.body.der(v_0[2])
mechanics.b0.body.der(v_0[3])
mechanics.b0.body.a_0[1]
mechanics.b0.body.a_0[2]
mechanics.b0.body.a_0[3]
mechanics.b0.body.angles_fixed
mechanics.b0.body.angles_start[1]
mechanics.b0.body.angles_start[2]
mechanics.b0.body.angles_start[3]
mechanics.b0.body.sequence_start[1]
mechanics.b0.body.sequence_start[2]
mechanics.b0.body.sequence_start[3]
mechanics.b0.body.w_0_fixed
mechanics.b0.body.w_0_start[1]
mechanics.b0.body.w_0_start[2]
mechanics.b0.body.w_0_start[3]
mechanics.b0.body.z_0_fixed
mechanics.b0.body.z_0_start[1]
mechanics.b0.body.z_0_start[2]
mechanics.b0.body.z_0_start[3]
mechanics.b0.body.sphereDiameter
mechanics.b0.body.sphereColor[1]
mechanics.b0.body.sphereColor[2]
mechanics.b0.body.sphereColor[3]
mechanics.b0.body.cylinderDiameter
mechanics.b0.body.cylinderColor[1]
mechanics.b0.body.cylinderColor[2]
mechanics.b0.body.cylinderColor[3]
mechanics.b0.body.enforceStates
mechanics.b0.body.useQuaternions
mechanics.b0.body.sequence_angleStates[1]
mechanics.b0.body.sequence_angleStates[2]
mechanics.b0.body.sequence_angleStates[3]
mechanics.b0.body.I[1, 1]
mechanics.b0.body.I[1, 2]
mechanics.b0.body.I[1, 3]
mechanics.b0.body.I[2, 1]
mechanics.b0.body.I[2, 2]
mechanics.b0.body.I[2, 3]
mechanics.b0.body.I[3, 1]
mechanics.b0.body.I[3, 2]
mechanics.b0.body.I[3, 3]
mechanics.b0.body.R_start.T[1, 1]
mechanics.b0.body.R_start.T[1, 2]
mechanics.b0.body.R_start.T[1, 3]
mechanics.b0.body.R_start.T[2, 1]
mechanics.b0.body.R_start.T[2, 2]
mechanics.b0.body.R_start.T[2, 3]
mechanics.b0.body.R_start.T[3, 1]
mechanics.b0.body.R_start.T[3, 2]
mechanics.b0.body.R_start.T[3, 3]
mechanics.b0.body.R_start.w[1]
mechanics.b0.body.R_start.w[2]
mechanics.b0.body.R_start.w[3]
mechanics.b0.body.w_a[1]
mechanics.b0.body.w_a[2]
mechanics.b0.body.w_a[3]
mechanics.b0.body.der(w_a[1])
mechanics.b0.body.der(w_a[2])
mechanics.b0.body.der(w_a[3])
mechanics.b0.body.z_a[1]
mechanics.b0.body.z_a[2]
mechanics.b0.body.z_a[3]
mechanics.b0.body.g_0[1]
mechanics.b0.body.g_0[2]
mechanics.b0.body.g_0[3]
mechanics.b0.body.Q_start[1]
mechanics.b0.body.Q_start[2]
mechanics.b0.body.Q_start[3]
mechanics.b0.body.Q_start[4]
mechanics.b0.body.Q[1]
mechanics.b0.body.Q[2]
mechanics.b0.body.Q[3]
mechanics.b0.body.Q[4]
mechanics.b0.body.phi_start[1]
mechanics.b0.body.phi_start[2]
mechanics.b0.body.phi_start[3]
mechanics.b0.body.phi[1]
mechanics.b0.body.phi[2]
mechanics.b0.body.phi[3]
mechanics.b0.body.phi_d[1]
mechanics.b0.body.phi_d[2]
mechanics.b0.body.phi_d[3]
mechanics.b0.body.phi_dd[1]
mechanics.b0.body.phi_dd[2]
mechanics.b0.body.phi_dd[3]
mechanics.b0.shape1.R.T[1, 1]
mechanics.b0.shape1.R.T[1, 2]
mechanics.b0.shape1.R.T[1, 3]
mechanics.b0.shape1.R.T[2, 1]
mechanics.b0.shape1.R.T[2, 2]
mechanics.b0.shape1.R.T[2, 3]
mechanics.b0.shape1.R.T[3, 1]
mechanics.b0.shape1.R.T[3, 2]
mechanics.b0.shape1.R.T[3, 3]
mechanics.b0.shape1.R.w[1]
mechanics.b0.shape1.R.w[2]
mechanics.b0.shape1.R.w[3]
mechanics.b0.shape1.r[1]
mechanics.b0.shape1.r[2]
mechanics.b0.shape1.r[3]
mechanics.b0.shape1.lengthDirection[1]
mechanics.b0.shape1.lengthDirection[2]
mechanics.b0.shape1.lengthDirection[3]
mechanics.b0.shape1.widthDirection[1]
mechanics.b0.shape1.widthDirection[2]
mechanics.b0.shape1.widthDirection[3]
mechanics.b0.shape1.color[1]
mechanics.b0.shape1.color[2]
mechanics.b0.shape1.color[3]
mechanics.b0.shape1.isURI
mechanics.b0.shape1.abs_n_x
mechanics.b0.shape1.n_z_aux[1]
mechanics.b0.shape1.n_z_aux[2]
mechanics.b0.shape1.n_z_aux[3]
mechanics.b0.shape1.e_x[1]
mechanics.b0.shape1.e_x[2]
mechanics.b0.shape1.e_x[3]
mechanics.b0.shape1.e_y[1]
mechanics.b0.shape1.e_y[2]
mechanics.b0.shape1.e_y[3]
mechanics.b0.shape1.Form
mechanics.b0.shape1.rxvisobj[1]
mechanics.b0.shape1.rxvisobj[2]
mechanics.b0.shape1.rxvisobj[3]
mechanics.b0.shape1.ryvisobj[1]
mechanics.b0.shape1.ryvisobj[2]
mechanics.b0.shape1.ryvisobj[3]
mechanics.b0.shape1.Material
mechanics.b1.frame_a.r_0[1]
mechanics.b1.frame_a.r_0[2]
mechanics.b1.frame_a.r_0[3]
mechanics.b1.frame_a.R.T[1, 2]
mechanics.b1.frame_a.R.T[2, 1]
mechanics.b1.frame_a.R.T[2, 2]
mechanics.b1.frame_a.R.T[2, 3]
mechanics.b1.frame_a.R.T[3, 2]
mechanics.b1.frame_a.R.w[1]
mechanics.b1.frame_a.R.w[3]
mechanics.b1.frame_b.r_0[2]
mechanics.b1.frame_b.R.T[1, 2]
mechanics.b1.frame_b.R.T[2, 1]
mechanics.b1.frame_b.R.T[2, 2]
mechanics.b1.frame_b.R.T[2, 3]
mechanics.b1.frame_b.R.T[3, 2]
mechanics.b1.frame_b.R.w[1]
mechanics.b1.frame_b.R.w[3]
mechanics.b1.animation
mechanics.b1.animateSphere
mechanics.b1.r[1]
mechanics.b1.r[2]
mechanics.b1.r[3]
mechanics.b1.r_CM[1]
mechanics.b1.r_CM[2]
mechanics.b1.r_CM[3]
mechanics.b1.m
mechanics.b1.I_11
mechanics.b1.I_22
mechanics.b1.I_33
mechanics.b1.I_21
mechanics.b1.I_31
mechanics.b1.I_32
mechanics.b1.r_0[1]
mechanics.b1.r_0[2]
mechanics.b1.r_0[3]
mechanics.b1.der(r_0[1])
mechanics.b1.der(r_0[2])
mechanics.b1.der(r_0[3])
mechanics.b1.v_0[1]
mechanics.b1.v_0[2]
mechanics.b1.v_0[3]
mechanics.b1.der(v_0[1])
mechanics.b1.der(v_0[2])
mechanics.b1.der(v_0[3])
mechanics.b1.a_0[1]
mechanics.b1.a_0[2]
mechanics.b1.a_0[3]
mechanics.b1.angles_fixed
mechanics.b1.angles_start[1]
mechanics.b1.angles_start[2]
mechanics.b1.angles_start[3]
mechanics.b1.sequence_start[1]
mechanics.b1.sequence_start[2]
mechanics.b1.sequence_start[3]
mechanics.b1.w_0_fixed
mechanics.b1.w_0_start[1]
mechanics.b1.w_0_start[2]
mechanics.b1.w_0_start[3]
mechanics.b1.z_0_fixed
mechanics.b1.z_0_start[1]
mechanics.b1.z_0_start[2]
mechanics.b1.z_0_start[3]
mechanics.b1.r_shape[1]
mechanics.b1.r_shape[2]
mechanics.b1.r_shape[3]
mechanics.b1.lengthDirection[1]
mechanics.b1.lengthDirection[2]
mechanics.b1.lengthDirection[3]
mechanics.b1.widthDirection[1]
mechanics.b1.widthDirection[2]
mechanics.b1.widthDirection[3]
mechanics.b1.length
mechanics.b1.width
mechanics.b1.height
mechanics.b1.extra
mechanics.b1.color[1]
mechanics.b1.color[2]
mechanics.b1.color[3]
mechanics.b1.sphereDiameter
mechanics.b1.sphereColor[1]
mechanics.b1.sphereColor[2]
mechanics.b1.sphereColor[3]
mechanics.b1.enforceStates
mechanics.b1.useQuaternions
mechanics.b1.sequence_angleStates[1]
mechanics.b1.sequence_angleStates[2]
mechanics.b1.sequence_angleStates[3]
mechanics.b1.frameTranslation.frame_a.r_0[1]
mechanics.b1.frameTranslation.frame_a.r_0[2]
mechanics.b1.frameTranslation.frame_a.r_0[3]
mechanics.b1.frameTranslation.frame_a.R.T[1, 1]
mechanics.b1.frameTranslation.frame_a.R.T[1, 2]
mechanics.b1.frameTranslation.frame_a.R.T[1, 3]
mechanics.b1.frameTranslation.frame_a.R.T[2, 1]
mechanics.b1.frameTranslation.frame_a.R.T[2, 2]
mechanics.b1.frameTranslation.frame_a.R.T[2, 3]
mechanics.b1.frameTranslation.frame_a.R.T[3, 1]
mechanics.b1.frameTranslation.frame_a.R.T[3, 2]
mechanics.b1.frameTranslation.frame_a.R.T[3, 3]
mechanics.b1.frameTranslation.frame_a.R.w[1]
mechanics.b1.frameTranslation.frame_a.R.w[2]
mechanics.b1.frameTranslation.frame_a.R.w[3]
mechanics.b1.frameTranslation.frame_a.t[1]
mechanics.b1.frameTranslation.frame_a.t[2]
mechanics.b1.frameTranslation.frame_a.t[3]
mechanics.b1.frameTranslation.frame_b.r_0[2]
mechanics.b1.frameTranslation.frame_b.R.T[1, 2]
mechanics.b1.frameTranslation.frame_b.R.T[2, 1]
mechanics.b1.frameTranslation.frame_b.R.T[2, 2]
mechanics.b1.frameTranslation.frame_b.R.T[2, 3]
mechanics.b1.frameTranslation.frame_b.R.T[3, 2]
mechanics.b1.frameTranslation.frame_b.R.w[1]
mechanics.b1.frameTranslation.frame_b.R.w[3]
mechanics.b1.frameTranslation.animation
mechanics.b1.frameTranslation.r[1]
mechanics.b1.frameTranslation.r[2]
mechanics.b1.frameTranslation.r[3]
mechanics.b1.frameTranslation.r_shape[1]
mechanics.b1.frameTranslation.r_shape[2]
mechanics.b1.frameTranslation.r_shape[3]
mechanics.b1.frameTranslation.lengthDirection[1]
mechanics.b1.frameTranslation.lengthDirection[2]
mechanics.b1.frameTranslation.lengthDirection[3]
mechanics.b1.frameTranslation.widthDirection[1]
mechanics.b1.frameTranslation.widthDirection[2]
mechanics.b1.frameTranslation.widthDirection[3]
mechanics.b1.frameTranslation.length
mechanics.b1.frameTranslation.width
mechanics.b1.frameTranslation.height
mechanics.b1.frameTranslation.extra
mechanics.b1.frameTranslation.color[1]
mechanics.b1.frameTranslation.color[2]
mechanics.b1.frameTranslation.color[3]
mechanics.b1.body.frame_a.r_0[1]
mechanics.b1.body.frame_a.r_0[2]
mechanics.b1.body.frame_a.r_0[3]
mechanics.b1.body.frame_a.der(r_0[1])
mechanics.b1.body.frame_a.der(r_0[2])
mechanics.b1.body.frame_a.der(r_0[3])
mechanics.b1.body.frame_a.R.T[1, 1]
mechanics.b1.body.frame_a.R.T[1, 2]
mechanics.b1.body.frame_a.R.T[1, 3]
mechanics.b1.body.frame_a.R.T[2, 1]
mechanics.b1.body.frame_a.R.T[2, 2]
mechanics.b1.body.frame_a.R.T[2, 3]
mechanics.b1.body.frame_a.R.T[3, 1]
mechanics.b1.body.frame_a.R.T[3, 2]
mechanics.b1.body.frame_a.R.T[3, 3]
mechanics.b1.body.frame_a.R.w[1]
mechanics.b1.body.frame_a.R.w[2]
mechanics.b1.body.frame_a.R.w[3]
mechanics.b1.body.frame_a.f[1]
mechanics.b1.body.frame_a.f[2]
mechanics.b1.body.frame_a.f[3]
mechanics.b1.body.frame_a.t[1]
mechanics.b1.body.frame_a.t[2]
mechanics.b1.body.frame_a.t[3]
mechanics.b1.body.animation
mechanics.b1.body.r_CM[1]
mechanics.b1.body.r_CM[2]
mechanics.b1.body.r_CM[3]
mechanics.b1.body.m
mechanics.b1.body.I_11
mechanics.b1.body.I_22
mechanics.b1.body.I_33
mechanics.b1.body.I_21
mechanics.b1.body.I_31
mechanics.b1.body.I_32
mechanics.b1.body.r_0[1]
mechanics.b1.body.r_0[2]
mechanics.b1.body.r_0[3]
mechanics.b1.body.v_0[1]
mechanics.b1.body.v_0[2]
mechanics.b1.body.v_0[3]
mechanics.b1.body.der(v_0[1])
mechanics.b1.body.der(v_0[2])
mechanics.b1.body.der(v_0[3])
mechanics.b1.body.a_0[1]
mechanics.b1.body.a_0[2]
mechanics.b1.body.a_0[3]
mechanics.b1.body.angles_fixed
mechanics.b1.body.angles_start[1]
mechanics.b1.body.angles_start[2]
mechanics.b1.body.angles_start[3]
mechanics.b1.body.sequence_start[1]
mechanics.b1.body.sequence_start[2]
mechanics.b1.body.sequence_start[3]
mechanics.b1.body.w_0_fixed
mechanics.b1.body.w_0_start[1]
mechanics.b1.body.w_0_start[2]
mechanics.b1.body.w_0_start[3]
mechanics.b1.body.z_0_fixed
mechanics.b1.body.z_0_start[1]
mechanics.b1.body.z_0_start[2]
mechanics.b1.body.z_0_start[3]
mechanics.b1.body.sphereDiameter
mechanics.b1.body.sphereColor[1]
mechanics.b1.body.sphereColor[2]
mechanics.b1.body.sphereColor[3]
mechanics.b1.body.cylinderDiameter
mechanics.b1.body.cylinderColor[1]
mechanics.b1.body.cylinderColor[2]
mechanics.b1.body.cylinderColor[3]
mechanics.b1.body.enforceStates
mechanics.b1.body.useQuaternions
mechanics.b1.body.sequence_angleStates[1]
mechanics.b1.body.sequence_angleStates[2]
mechanics.b1.body.sequence_angleStates[3]
mechanics.b1.body.I[1, 1]
mechanics.b1.body.I[1, 2]
mechanics.b1.body.I[1, 3]
mechanics.b1.body.I[2, 1]
mechanics.b1.body.I[2, 2]
mechanics.b1.body.I[2, 3]
mechanics.b1.body.I[3, 1]
mechanics.b1.body.I[3, 2]
mechanics.b1.body.I[3, 3]
mechanics.b1.body.R_start.T[1, 1]
mechanics.b1.body.R_start.T[1, 2]
mechanics.b1.body.R_start.T[1, 3]
mechanics.b1.body.R_start.T[2, 1]
mechanics.b1.body.R_start.T[2, 2]
mechanics.b1.body.R_start.T[2, 3]
mechanics.b1.body.R_start.T[3, 1]
mechanics.b1.body.R_start.T[3, 2]
mechanics.b1.body.R_start.T[3, 3]
mechanics.b1.body.R_start.w[1]
mechanics.b1.body.R_start.w[2]
mechanics.b1.body.R_start.w[3]
mechanics.b1.body.w_a[1]
mechanics.b1.body.w_a[3]
mechanics.b1.body.der(w_a[1])
mechanics.b1.body.der(w_a[3])
mechanics.b1.body.z_a[1]
mechanics.b1.body.z_a[3]
mechanics.b1.body.g_0[1]
mechanics.b1.body.g_0[2]
mechanics.b1.body.g_0[3]
mechanics.b1.body.Q_start[1]
mechanics.b1.body.Q_start[2]
mechanics.b1.body.Q_start[3]
mechanics.b1.body.Q_start[4]
mechanics.b1.body.Q[1]
mechanics.b1.body.Q[2]
mechanics.b1.body.Q[3]
mechanics.b1.body.Q[4]
mechanics.b1.body.phi_start[1]
mechanics.b1.body.phi_start[2]
mechanics.b1.body.phi_start[3]
mechanics.b1.body.phi[1]
mechanics.b1.body.phi[2]
mechanics.b1.body.phi[3]
mechanics.b1.body.phi_d[1]
mechanics.b1.body.phi_d[2]
mechanics.b1.body.phi_d[3]
mechanics.b1.body.phi_dd[1]
mechanics.b1.body.phi_dd[2]
mechanics.b1.body.phi_dd[3]
mechanics.b1.shape1.R.T[1, 2]
mechanics.b1.shape1.R.T[2, 1]
mechanics.b1.shape1.R.T[2, 2]
mechanics.b1.shape1.R.T[2, 3]
mechanics.b1.shape1.R.T[3, 2]
mechanics.b1.shape1.R.w[1]
mechanics.b1.shape1.R.w[3]
mechanics.b1.shape1.r[1]
mechanics.b1.shape1.r[2]
mechanics.b1.shape1.r[3]
mechanics.b1.shape1.lengthDirection[1]
mechanics.b1.shape1.lengthDirection[2]
mechanics.b1.shape1.lengthDirection[3]
mechanics.b1.shape1.widthDirection[1]
mechanics.b1.shape1.widthDirection[2]
mechanics.b1.shape1.widthDirection[3]
mechanics.b1.shape1.color[1]
mechanics.b1.shape1.color[2]
mechanics.b1.shape1.color[3]
mechanics.b1.shape1.isURI
mechanics.b1.shape1.abs_n_x
mechanics.b1.shape1.n_z_aux[1]
mechanics.b1.shape1.n_z_aux[2]
mechanics.b1.shape1.n_z_aux[3]
mechanics.b1.shape1.e_x[1]
mechanics.b1.shape1.e_x[2]
mechanics.b1.shape1.e_x[3]
mechanics.b1.shape1.e_y[1]
mechanics.b1.shape1.e_y[2]
mechanics.b1.shape1.e_y[3]
mechanics.b1.shape1.Form
mechanics.b1.shape1.rxvisobj[2]
mechanics.b1.shape1.ryvisobj[1]
mechanics.b1.shape1.ryvisobj[2]
mechanics.b1.shape1.ryvisobj[3]
mechanics.b1.shape1.rvisobj[1]
mechanics.b1.shape1.rvisobj[2]
mechanics.b1.shape1.rvisobj[3]
mechanics.b1.shape1.Material
mechanics.b2.frame_a.r_0[2]
mechanics.b2.frame_a.R.T[1, 2]
mechanics.b2.frame_b.R.T[1, 2]
mechanics.b2.animation
mechanics.b2.animateSphere
mechanics.b2.r[1]
mechanics.b2.r[2]
mechanics.b2.r[3]
mechanics.b2.r_CM[1]
mechanics.b2.r_CM[2]
mechanics.b2.r_CM[3]
mechanics.b2.m
mechanics.b2.I_11
mechanics.b2.I_22
mechanics.b2.I_33
mechanics.b2.I_21
mechanics.b2.I_31
mechanics.b2.I_32
mechanics.b2.r_0[1]
mechanics.b2.r_0[2]
mechanics.b2.r_0[3]
mechanics.b2.der(r_0[2])
mechanics.b2.v_0[1]
mechanics.b2.v_0[2]
mechanics.b2.v_0[3]
mechanics.b2.der(v_0[2])
mechanics.b2.a_0[2]
mechanics.b2.angles_fixed
mechanics.b2.angles_start[1]
mechanics.b2.angles_start[2]
mechanics.b2.angles_start[3]
mechanics.b2.sequence_start[1]
mechanics.b2.sequence_start[2]
mechanics.b2.sequence_start[3]
mechanics.b2.w_0_fixed
mechanics.b2.w_0_start[1]
mechanics.b2.w_0_start[2]
mechanics.b2.w_0_start[3]
mechanics.b2.z_0_fixed
mechanics.b2.z_0_start[1]
mechanics.b2.z_0_start[2]
mechanics.b2.z_0_start[3]
mechanics.b2.r_shape[1]
mechanics.b2.r_shape[2]
mechanics.b2.r_shape[3]
mechanics.b2.lengthDirection[1]
mechanics.b2.lengthDirection[2]
mechanics.b2.lengthDirection[3]
mechanics.b2.widthDirection[1]
mechanics.b2.widthDirection[2]
mechanics.b2.widthDirection[3]
mechanics.b2.length
mechanics.b2.width
mechanics.b2.height
mechanics.b2.extra
mechanics.b2.color[1]
mechanics.b2.color[2]
mechanics.b2.color[3]
mechanics.b2.sphereDiameter
mechanics.b2.sphereColor[1]
mechanics.b2.sphereColor[2]
mechanics.b2.sphereColor[3]
mechanics.b2.enforceStates
mechanics.b2.useQuaternions
mechanics.b2.sequence_angleStates[1]
mechanics.b2.sequence_angleStates[2]
mechanics.b2.sequence_angleStates[3]
mechanics.b2.frameTranslation.frame_a.r_0[2]
mechanics.b2.frameTranslation.frame_a.R.T[1, 1]
mechanics.b2.frameTranslation.frame_a.R.T[1, 2]
mechanics.b2.frameTranslation.frame_a.R.T[1, 3]
mechanics.b2.frameTranslation.frame_a.R.T[2, 1]
mechanics.b2.frameTranslation.frame_a.R.T[2, 2]
mechanics.b2.frameTranslation.frame_a.R.T[2, 3]
mechanics.b2.frameTranslation.frame_a.R.T[3, 1]
mechanics.b2.frameTranslation.frame_a.R.T[3, 2]
mechanics.b2.frameTranslation.frame_a.R.T[3, 3]
mechanics.b2.frameTranslation.frame_a.R.w[1]
mechanics.b2.frameTranslation.frame_a.R.w[2]
mechanics.b2.frameTranslation.frame_a.R.w[3]
mechanics.b2.frameTranslation.frame_a.t[1]
mechanics.b2.frameTranslation.frame_a.t[3]
mechanics.b2.frameTranslation.frame_b.R.T[1, 2]
mechanics.b2.frameTranslation.animation
mechanics.b2.frameTranslation.r[1]
mechanics.b2.frameTranslation.r[2]
mechanics.b2.frameTranslation.r[3]
mechanics.b2.frameTranslation.r_shape[1]
mechanics.b2.frameTranslation.r_shape[2]
mechanics.b2.frameTranslation.r_shape[3]
mechanics.b2.frameTranslation.lengthDirection[1]
mechanics.b2.frameTranslation.lengthDirection[2]
mechanics.b2.frameTranslation.lengthDirection[3]
mechanics.b2.frameTranslation.widthDirection[1]
mechanics.b2.frameTranslation.widthDirection[2]
mechanics.b2.frameTranslation.widthDirection[3]
mechanics.b2.frameTranslation.length
mechanics.b2.frameTranslation.width
mechanics.b2.frameTranslation.height
mechanics.b2.frameTranslation.extra
mechanics.b2.frameTranslation.color[1]
mechanics.b2.frameTranslation.color[2]
mechanics.b2.frameTranslation.color[3]
mechanics.b2.body.frame_a.r_0[2]
mechanics.b2.body.frame_a.der(r_0[2])
mechanics.b2.body.frame_a.R.T[1, 1]
mechanics.b2.body.frame_a.R.T[1, 2]
mechanics.b2.body.frame_a.R.T[1, 3]
mechanics.b2.body.frame_a.R.T[2, 1]
mechanics.b2.body.frame_a.R.T[2, 2]
mechanics.b2.body.frame_a.R.T[2, 3]
mechanics.b2.body.frame_a.R.T[3, 1]
mechanics.b2.body.frame_a.R.T[3, 2]
mechanics.b2.body.frame_a.R.T[3, 3]
mechanics.b2.body.frame_a.R.w[1]
mechanics.b2.body.frame_a.R.w[2]
mechanics.b2.body.frame_a.R.w[3]
mechanics.b2.body.frame_a.f[1]
mechanics.b2.body.frame_a.f[2]
mechanics.b2.body.frame_a.f[3]
mechanics.b2.body.frame_a.t[1]
mechanics.b2.body.frame_a.t[2]
mechanics.b2.body.frame_a.t[3]
mechanics.b2.body.animation
mechanics.b2.body.r_CM[1]
mechanics.b2.body.r_CM[2]
mechanics.b2.body.r_CM[3]
mechanics.b2.body.m
mechanics.b2.body.I_11
mechanics.b2.body.I_22
mechanics.b2.body.I_33
mechanics.b2.body.I_21
mechanics.b2.body.I_31
mechanics.b2.body.I_32
mechanics.b2.body.r_0[2]
mechanics.b2.body.v_0[2]
mechanics.b2.body.der(v_0[2])
mechanics.b2.body.a_0[1]
mechanics.b2.body.a_0[2]
mechanics.b2.body.a_0[3]
mechanics.b2.body.angles_fixed
mechanics.b2.body.angles_start[1]
mechanics.b2.body.angles_start[2]
mechanics.b2.body.angles_start[3]
mechanics.b2.body.sequence_start[1]
mechanics.b2.body.sequence_start[2]
mechanics.b2.body.sequence_start[3]
mechanics.b2.body.w_0_fixed
mechanics.b2.body.w_0_start[1]
mechanics.b2.body.w_0_start[2]
mechanics.b2.body.w_0_start[3]
mechanics.b2.body.z_0_fixed
mechanics.b2.body.z_0_start[1]
mechanics.b2.body.z_0_start[2]
mechanics.b2.body.z_0_start[3]
mechanics.b2.body.sphereDiameter
mechanics.b2.body.sphereColor[1]
mechanics.b2.body.sphereColor[2]
mechanics.b2.body.sphereColor[3]
mechanics.b2.body.cylinderDiameter
mechanics.b2.body.cylinderColor[1]
mechanics.b2.body.cylinderColor[2]
mechanics.b2.body.cylinderColor[3]
mechanics.b2.body.enforceStates
mechanics.b2.body.useQuaternions
mechanics.b2.body.sequence_angleStates[1]
mechanics.b2.body.sequence_angleStates[2]
mechanics.b2.body.sequence_angleStates[3]
mechanics.b2.body.I[1, 1]
mechanics.b2.body.I[1, 2]
mechanics.b2.body.I[1, 3]
mechanics.b2.body.I[2, 1]
mechanics.b2.body.I[2, 2]
mechanics.b2.body.I[2, 3]
mechanics.b2.body.I[3, 1]
mechanics.b2.body.I[3, 2]
mechanics.b2.body.I[3, 3]
mechanics.b2.body.R_start.T[1, 1]
mechanics.b2.body.R_start.T[1, 2]
mechanics.b2.body.R_start.T[1, 3]
mechanics.b2.body.R_start.T[2, 1]
mechanics.b2.body.R_start.T[2, 2]
mechanics.b2.body.R_start.T[2, 3]
mechanics.b2.body.R_start.T[3, 1]
mechanics.b2.body.R_start.T[3, 2]
mechanics.b2.body.R_start.T[3, 3]
mechanics.b2.body.R_start.w[1]
mechanics.b2.body.R_start.w[2]
mechanics.b2.body.R_start.w[3]
mechanics.b2.body.der(w_a[2])
mechanics.b2.body.der(w_a[3])
mechanics.b2.body.g_0[1]
mechanics.b2.body.g_0[2]
mechanics.b2.body.g_0[3]
mechanics.b2.body.Q_start[1]
mechanics.b2.body.Q_start[2]
mechanics.b2.body.Q_start[3]
mechanics.b2.body.Q_start[4]
mechanics.b2.body.Q[1]
mechanics.b2.body.Q[2]
mechanics.b2.body.Q[3]
mechanics.b2.body.Q[4]
mechanics.b2.body.phi_start[1]
mechanics.b2.body.phi_start[2]
mechanics.b2.body.phi_start[3]
mechanics.b2.body.phi[1]
mechanics.b2.body.phi[2]
mechanics.b2.body.phi[3]
mechanics.b2.body.phi_d[1]
mechanics.b2.body.phi_d[2]
mechanics.b2.body.phi_d[3]
mechanics.b2.body.phi_dd[1]
mechanics.b2.body.phi_dd[2]
mechanics.b2.body.phi_dd[3]
mechanics.b2.shape1.R.T[1, 2]
mechanics.b2.shape1.r[2]
mechanics.b2.shape1.lengthDirection[1]
mechanics.b2.shape1.lengthDirection[2]
mechanics.b2.shape1.lengthDirection[3]
mechanics.b2.shape1.widthDirection[1]
mechanics.b2.shape1.widthDirection[2]
mechanics.b2.shape1.widthDirection[3]
mechanics.b2.shape1.color[1]
mechanics.b2.shape1.color[2]
mechanics.b2.shape1.color[3]
mechanics.b2.shape1.isURI
mechanics.b2.shape1.abs_n_x
mechanics.b2.shape1.n_z_aux[1]
mechanics.b2.shape1.n_z_aux[2]
mechanics.b2.shape1.n_z_aux[3]
mechanics.b2.shape1.e_x[1]
mechanics.b2.shape1.e_x[2]
mechanics.b2.shape1.e_x[3]
mechanics.b2.shape1.e_y[1]
mechanics.b2.shape1.e_y[2]
mechanics.b2.shape1.e_y[3]
mechanics.b2.shape1.Form
mechanics.b2.shape1.rxvisobj[2]
mechanics.b2.shape1.rvisobj[1]
mechanics.b2.shape1.rvisobj[2]
mechanics.b2.shape1.rvisobj[3]
mechanics.b2.shape1.Material
mechanics.b3.frame_a.R.T[1, 2]
mechanics.b3.frame_b.R.T[1, 2]
mechanics.b3.animation
mechanics.b3.animateSphere
mechanics.b3.r[1]
mechanics.b3.r[2]
mechanics.b3.r[3]
mechanics.b3.r_CM[1]
mechanics.b3.r_CM[2]
mechanics.b3.r_CM[3]
mechanics.b3.m
mechanics.b3.I_11
mechanics.b3.I_22
mechanics.b3.I_33
mechanics.b3.I_21
mechanics.b3.I_31
mechanics.b3.I_32
mechanics.b3.r_0[1]
mechanics.b3.r_0[2]
mechanics.b3.r_0[3]
mechanics.b3.v_0[1]
mechanics.b3.v_0[2]
mechanics.b3.v_0[3]
mechanics.b3.angles_fixed
mechanics.b3.angles_start[1]
mechanics.b3.angles_start[2]
mechanics.b3.angles_start[3]
mechanics.b3.sequence_start[1]
mechanics.b3.sequence_start[2]
mechanics.b3.sequence_start[3]
mechanics.b3.w_0_fixed
mechanics.b3.w_0_start[1]
mechanics.b3.w_0_start[2]
mechanics.b3.w_0_start[3]
mechanics.b3.z_0_fixed
mechanics.b3.z_0_start[1]
mechanics.b3.z_0_start[2]
mechanics.b3.z_0_start[3]
mechanics.b3.r_shape[1]
mechanics.b3.r_shape[2]
mechanics.b3.r_shape[3]
mechanics.b3.lengthDirection[1]
mechanics.b3.lengthDirection[2]
mechanics.b3.lengthDirection[3]
mechanics.b3.widthDirection[1]
mechanics.b3.widthDirection[2]
mechanics.b3.widthDirection[3]
mechanics.b3.length
mechanics.b3.width
mechanics.b3.height
mechanics.b3.extra
mechanics.b3.color[1]
mechanics.b3.color[2]
mechanics.b3.color[3]
mechanics.b3.sphereDiameter
mechanics.b3.sphereColor[1]
mechanics.b3.sphereColor[2]
mechanics.b3.sphereColor[3]
mechanics.b3.enforceStates
mechanics.b3.useQuaternions
mechanics.b3.sequence_angleStates[1]
mechanics.b3.sequence_angleStates[2]
mechanics.b3.sequence_angleStates[3]
mechanics.b3.frameTranslation.frame_a.R.T[1, 1]
mechanics.b3.frameTranslation.frame_a.R.T[1, 2]
mechanics.b3.frameTranslation.frame_a.R.T[1, 3]
mechanics.b3.frameTranslation.frame_a.R.T[2, 1]
mechanics.b3.frameTranslation.frame_a.R.T[2, 2]
mechanics.b3.frameTranslation.frame_a.R.T[2, 3]
mechanics.b3.frameTranslation.frame_a.R.T[3, 1]
mechanics.b3.frameTranslation.frame_a.R.T[3, 2]
mechanics.b3.frameTranslation.frame_a.R.T[3, 3]
mechanics.b3.frameTranslation.frame_a.R.w[1]
mechanics.b3.frameTranslation.frame_a.R.w[2]
mechanics.b3.frameTranslation.frame_a.R.w[3]
mechanics.b3.frameTranslation.frame_a.t[1]
mechanics.b3.frameTranslation.frame_a.t[2]
mechanics.b3.frameTranslation.frame_a.t[3]
mechanics.b3.frameTranslation.frame_b.R.T[1, 2]
mechanics.b3.frameTranslation.animation
mechanics.b3.frameTranslation.r[1]
mechanics.b3.frameTranslation.r[2]
mechanics.b3.frameTranslation.r[3]
mechanics.b3.frameTranslation.r_shape[1]
mechanics.b3.frameTranslation.r_shape[2]
mechanics.b3.frameTranslation.r_shape[3]
mechanics.b3.frameTranslation.lengthDirection[1]
mechanics.b3.frameTranslation.lengthDirection[2]
mechanics.b3.frameTranslation.lengthDirection[3]
mechanics.b3.frameTranslation.widthDirection[1]
mechanics.b3.frameTranslation.widthDirection[2]
mechanics.b3.frameTranslation.widthDirection[3]
mechanics.b3.frameTranslation.length
mechanics.b3.frameTranslation.width
mechanics.b3.frameTranslation.height
mechanics.b3.frameTranslation.extra
mechanics.b3.frameTranslation.color[1]
mechanics.b3.frameTranslation.color[2]
mechanics.b3.frameTranslation.color[3]
mechanics.b3.body.frame_a.R.T[1, 1]
mechanics.b3.body.frame_a.R.T[1, 2]
mechanics.b3.body.frame_a.R.T[1, 3]
mechanics.b3.body.frame_a.R.T[2, 1]
mechanics.b3.body.frame_a.R.T[2, 2]
mechanics.b3.body.frame_a.R.T[2, 3]
mechanics.b3.body.frame_a.R.T[3, 1]
mechanics.b3.body.frame_a.R.T[3, 2]
mechanics.b3.body.frame_a.R.T[3, 3]
mechanics.b3.body.frame_a.R.w[1]
mechanics.b3.body.frame_a.R.w[2]
mechanics.b3.body.frame_a.R.w[3]
mechanics.b3.body.frame_a.f[1]
mechanics.b3.body.frame_a.f[2]
mechanics.b3.body.frame_a.f[3]
mechanics.b3.body.frame_a.t[1]
mechanics.b3.body.frame_a.t[2]
mechanics.b3.body.frame_a.t[3]
mechanics.b3.body.animation
mechanics.b3.body.r_CM[1]
mechanics.b3.body.r_CM[2]
mechanics.b3.body.r_CM[3]
mechanics.b3.body.m
mechanics.b3.body.I_11
mechanics.b3.body.I_22
mechanics.b3.body.I_33
mechanics.b3.body.I_21
mechanics.b3.body.I_31
mechanics.b3.body.I_32
mechanics.b3.body.a_0[1]
mechanics.b3.body.a_0[2]
mechanics.b3.body.a_0[3]
mechanics.b3.body.angles_fixed
mechanics.b3.body.angles_start[1]
mechanics.b3.body.angles_start[2]
mechanics.b3.body.angles_start[3]
mechanics.b3.body.sequence_start[1]
mechanics.b3.body.sequence_start[2]
mechanics.b3.body.sequence_start[3]
mechanics.b3.body.w_0_fixed
mechanics.b3.body.w_0_start[1]
mechanics.b3.body.w_0_start[2]
mechanics.b3.body.w_0_start[3]
mechanics.b3.body.z_0_fixed
mechanics.b3.body.z_0_start[1]
mechanics.b3.body.z_0_start[2]
mechanics.b3.body.z_0_start[3]
mechanics.b3.body.sphereDiameter
mechanics.b3.body.sphereColor[1]
mechanics.b3.body.sphereColor[2]
mechanics.b3.body.sphereColor[3]
mechanics.b3.body.cylinderDiameter
mechanics.b3.body.cylinderColor[1]
mechanics.b3.body.cylinderColor[2]
mechanics.b3.body.cylinderColor[3]
mechanics.b3.body.enforceStates
mechanics.b3.body.useQuaternions
mechanics.b3.body.sequence_angleStates[1]
mechanics.b3.body.sequence_angleStates[2]
mechanics.b3.body.sequence_angleStates[3]
mechanics.b3.body.I[1, 1]
mechanics.b3.body.I[1, 2]
mechanics.b3.body.I[1, 3]
mechanics.b3.body.I[2, 1]
mechanics.b3.body.I[2, 2]
mechanics.b3.body.I[2, 3]
mechanics.b3.body.I[3, 1]
mechanics.b3.body.I[3, 2]
mechanics.b3.body.I[3, 3]
mechanics.b3.body.R_start.T[1, 1]
mechanics.b3.body.R_start.T[1, 2]
mechanics.b3.body.R_start.T[1, 3]
mechanics.b3.body.R_start.T[2, 1]
mechanics.b3.body.R_start.T[2, 2]
mechanics.b3.body.R_start.T[2, 3]
mechanics.b3.body.R_start.T[3, 1]
mechanics.b3.body.R_start.T[3, 2]
mechanics.b3.body.R_start.T[3, 3]
mechanics.b3.body.R_start.w[1]
mechanics.b3.body.R_start.w[2]
mechanics.b3.body.R_start.w[3]
mechanics.b3.body.der(w_a[1])
mechanics.b3.body.der(w_a[2])
mechanics.b3.body.der(w_a[3])
mechanics.b3.body.g_0[1]
mechanics.b3.body.g_0[2]
mechanics.b3.body.g_0[3]
mechanics.b3.body.Q_start[1]
mechanics.b3.body.Q_start[2]
mechanics.b3.body.Q_start[3]
mechanics.b3.body.Q_start[4]
mechanics.b3.body.Q[1]
mechanics.b3.body.Q[2]
mechanics.b3.body.Q[3]
mechanics.b3.body.Q[4]
mechanics.b3.body.phi_start[1]
mechanics.b3.body.phi_start[2]
mechanics.b3.body.phi_start[3]
mechanics.b3.body.phi[1]
mechanics.b3.body.phi[2]
mechanics.b3.body.phi[3]
mechanics.b3.body.phi_d[1]
mechanics.b3.body.phi_d[2]
mechanics.b3.body.phi_d[3]
mechanics.b3.body.phi_dd[1]
mechanics.b3.body.phi_dd[2]
mechanics.b3.body.phi_dd[3]
mechanics.b3.shape1.R.T[1, 2]
mechanics.b3.shape1.lengthDirection[1]
mechanics.b3.shape1.lengthDirection[2]
mechanics.b3.shape1.lengthDirection[3]
mechanics.b3.shape1.widthDirection[1]
mechanics.b3.shape1.widthDirection[2]
mechanics.b3.shape1.widthDirection[3]
mechanics.b3.shape1.color[1]
mechanics.b3.shape1.color[2]
mechanics.b3.shape1.color[3]
mechanics.b3.shape1.isURI
mechanics.b3.shape1.abs_n_x
mechanics.b3.shape1.n_z_aux[1]
mechanics.b3.shape1.n_z_aux[2]
mechanics.b3.shape1.n_z_aux[3]
mechanics.b3.shape1.e_x[1]
mechanics.b3.shape1.e_x[2]
mechanics.b3.shape1.e_x[3]
mechanics.b3.shape1.e_y[1]
mechanics.b3.shape1.e_y[2]
mechanics.b3.shape1.e_y[3]
mechanics.b3.shape1.Form
mechanics.b3.shape1.rxvisobj[2]
mechanics.b3.shape1.rvisobj[1]
mechanics.b3.shape1.rvisobj[2]
mechanics.b3.shape1.rvisobj[3]
mechanics.b3.shape1.Material
mechanics.b4.animation
mechanics.b4.animateSphere
mechanics.b4.r[1]
mechanics.b4.r[2]
mechanics.b4.r[3]
mechanics.b4.r_CM[1]
mechanics.b4.r_CM[2]
mechanics.b4.r_CM[3]
mechanics.b4.m
mechanics.b4.I_11
mechanics.b4.I_22
mechanics.b4.I_33
mechanics.b4.I_21
mechanics.b4.I_31
mechanics.b4.I_32
mechanics.b4.r_0[1]
mechanics.b4.r_0[2]
mechanics.b4.r_0[3]
mechanics.b4.v_0[1]
mechanics.b4.v_0[2]
mechanics.b4.v_0[3]
mechanics.b4.angles_fixed
mechanics.b4.angles_start[1]
mechanics.b4.angles_start[2]
mechanics.b4.angles_start[3]
mechanics.b4.sequence_start[1]
mechanics.b4.sequence_start[2]
mechanics.b4.sequence_start[3]
mechanics.b4.w_0_fixed
mechanics.b4.w_0_start[1]
mechanics.b4.w_0_start[2]
mechanics.b4.w_0_start[3]
mechanics.b4.z_0_fixed
mechanics.b4.z_0_start[1]
mechanics.b4.z_0_start[2]
mechanics.b4.z_0_start[3]
mechanics.b4.r_shape[1]
mechanics.b4.r_shape[2]
mechanics.b4.r_shape[3]
mechanics.b4.lengthDirection[1]
mechanics.b4.lengthDirection[2]
mechanics.b4.lengthDirection[3]
mechanics.b4.widthDirection[1]
mechanics.b4.widthDirection[2]
mechanics.b4.widthDirection[3]
mechanics.b4.length
mechanics.b4.width
mechanics.b4.height
mechanics.b4.extra
mechanics.b4.color[1]
mechanics.b4.color[2]
mechanics.b4.color[3]
mechanics.b4.sphereDiameter
mechanics.b4.sphereColor[1]
mechanics.b4.sphereColor[2]
mechanics.b4.sphereColor[3]
mechanics.b4.enforceStates
mechanics.b4.useQuaternions
mechanics.b4.sequence_angleStates[1]
mechanics.b4.sequence_angleStates[2]
mechanics.b4.sequence_angleStates[3]
mechanics.b4.frameTranslation.frame_a.R.T[1, 1]
mechanics.b4.frameTranslation.frame_a.R.T[1, 2]
mechanics.b4.frameTranslation.frame_a.R.T[1, 3]
mechanics.b4.frameTranslation.frame_a.R.T[2, 1]
mechanics.b4.frameTranslation.frame_a.R.T[2, 2]
mechanics.b4.frameTranslation.frame_a.R.T[2, 3]
mechanics.b4.frameTranslation.frame_a.R.T[3, 1]
mechanics.b4.frameTranslation.frame_a.R.T[3, 2]
mechanics.b4.frameTranslation.frame_a.R.T[3, 3]
mechanics.b4.frameTranslation.frame_a.R.w[1]
mechanics.b4.frameTranslation.frame_a.R.w[2]
mechanics.b4.frameTranslation.frame_a.R.w[3]
mechanics.b4.frameTranslation.frame_a.t[1]
mechanics.b4.frameTranslation.frame_a.t[3]
mechanics.b4.frameTranslation.animation
mechanics.b4.frameTranslation.r[1]
mechanics.b4.frameTranslation.r[2]
mechanics.b4.frameTranslation.r[3]
mechanics.b4.frameTranslation.r_shape[1]
mechanics.b4.frameTranslation.r_shape[2]
mechanics.b4.frameTranslation.r_shape[3]
mechanics.b4.frameTranslation.lengthDirection[1]
mechanics.b4.frameTranslation.lengthDirection[2]
mechanics.b4.frameTranslation.lengthDirection[3]
mechanics.b4.frameTranslation.widthDirection[1]
mechanics.b4.frameTranslation.widthDirection[2]
mechanics.b4.frameTranslation.widthDirection[3]
mechanics.b4.frameTranslation.length
mechanics.b4.frameTranslation.width
mechanics.b4.frameTranslation.height
mechanics.b4.frameTranslation.extra
mechanics.b4.frameTranslation.color[1]
mechanics.b4.frameTranslation.color[2]
mechanics.b4.frameTranslation.color[3]
mechanics.b4.body.frame_a.R.T[1, 1]
mechanics.b4.body.frame_a.R.T[1, 2]
mechanics.b4.body.frame_a.R.T[1, 3]
mechanics.b4.body.frame_a.R.T[2, 1]
mechanics.b4.body.frame_a.R.T[2, 2]
mechanics.b4.body.frame_a.R.T[2, 3]
mechanics.b4.body.frame_a.R.T[3, 1]
mechanics.b4.body.frame_a.R.T[3, 2]
mechanics.b4.body.frame_a.R.T[3, 3]
mechanics.b4.body.frame_a.R.w[1]
mechanics.b4.body.frame_a.R.w[2]
mechanics.b4.body.frame_a.R.w[3]
mechanics.b4.body.frame_a.f[1]
mechanics.b4.body.frame_a.f[2]
mechanics.b4.body.frame_a.f[3]
mechanics.b4.body.frame_a.t[1]
mechanics.b4.body.frame_a.t[2]
mechanics.b4.body.frame_a.t[3]
mechanics.b4.body.animation
mechanics.b4.body.r_CM[1]
mechanics.b4.body.r_CM[2]
mechanics.b4.body.r_CM[3]
mechanics.b4.body.m
mechanics.b4.body.I_11
mechanics.b4.body.I_22
mechanics.b4.body.I_33
mechanics.b4.body.I_21
mechanics.b4.body.I_31
mechanics.b4.body.I_32
mechanics.b4.body.a_0[1]
mechanics.b4.body.a_0[2]
mechanics.b4.body.a_0[3]
mechanics.b4.body.angles_fixed
mechanics.b4.body.angles_start[1]
mechanics.b4.body.angles_start[2]
mechanics.b4.body.angles_start[3]
mechanics.b4.body.sequence_start[1]
mechanics.b4.body.sequence_start[2]
mechanics.b4.body.sequence_start[3]
mechanics.b4.body.w_0_fixed
mechanics.b4.body.w_0_start[1]
mechanics.b4.body.w_0_start[2]
mechanics.b4.body.w_0_start[3]
mechanics.b4.body.z_0_fixed
mechanics.b4.body.z_0_start[1]
mechanics.b4.body.z_0_start[2]
mechanics.b4.body.z_0_start[3]
mechanics.b4.body.sphereDiameter
mechanics.b4.body.sphereColor[1]
mechanics.b4.body.sphereColor[2]
mechanics.b4.body.sphereColor[3]
mechanics.b4.body.cylinderDiameter
mechanics.b4.body.cylinderColor[1]
mechanics.b4.body.cylinderColor[2]
mechanics.b4.body.cylinderColor[3]
mechanics.b4.body.enforceStates
mechanics.b4.body.useQuaternions
mechanics.b4.body.sequence_angleStates[1]
mechanics.b4.body.sequence_angleStates[2]
mechanics.b4.body.sequence_angleStates[3]
mechanics.b4.body.I[1, 1]
mechanics.b4.body.I[1, 2]
mechanics.b4.body.I[1, 3]
mechanics.b4.body.I[2, 1]
mechanics.b4.body.I[2, 2]
mechanics.b4.body.I[2, 3]
mechanics.b4.body.I[3, 1]
mechanics.b4.body.I[3, 2]
mechanics.b4.body.I[3, 3]
mechanics.b4.body.R_start.T[1, 1]
mechanics.b4.body.R_start.T[1, 2]
mechanics.b4.body.R_start.T[1, 3]
mechanics.b4.body.R_start.T[2, 1]
mechanics.b4.body.R_start.T[2, 2]
mechanics.b4.body.R_start.T[2, 3]
mechanics.b4.body.R_start.T[3, 1]
mechanics.b4.body.R_start.T[3, 2]
mechanics.b4.body.R_start.T[3, 3]
mechanics.b4.body.R_start.w[1]
mechanics.b4.body.R_start.w[2]
mechanics.b4.body.R_start.w[3]
mechanics.b4.body.der(w_a[1])
mechanics.b4.body.der(w_a[2])
mechanics.b4.body.der(w_a[3])
mechanics.b4.body.g_0[1]
mechanics.b4.body.g_0[2]
mechanics.b4.body.g_0[3]
mechanics.b4.body.Q_start[1]
mechanics.b4.body.Q_start[2]
mechanics.b4.body.Q_start[3]
mechanics.b4.body.Q_start[4]
mechanics.b4.body.Q[1]
mechanics.b4.body.Q[2]
mechanics.b4.body.Q[3]
mechanics.b4.body.Q[4]
mechanics.b4.body.phi_start[1]
mechanics.b4.body.phi_start[2]
mechanics.b4.body.phi_start[3]
mechanics.b4.body.phi[1]
mechanics.b4.body.phi[2]
mechanics.b4.body.phi[3]
mechanics.b4.body.phi_d[1]
mechanics.b4.body.phi_d[2]
mechanics.b4.body.phi_d[3]
mechanics.b4.body.phi_dd[1]
mechanics.b4.body.phi_dd[2]
mechanics.b4.body.phi_dd[3]
mechanics.b4.shape1.lengthDirection[1]
mechanics.b4.shape1.lengthDirection[2]
mechanics.b4.shape1.lengthDirection[3]
mechanics.b4.shape1.widthDirection[1]
mechanics.b4.shape1.widthDirection[2]
mechanics.b4.shape1.widthDirection[3]
mechanics.b4.shape1.color[1]
mechanics.b4.shape1.color[2]
mechanics.b4.shape1.color[3]
mechanics.b4.shape1.isURI
mechanics.b4.shape1.abs_n_x
mechanics.b4.shape1.n_z_aux[1]
mechanics.b4.shape1.n_z_aux[2]
mechanics.b4.shape1.n_z_aux[3]
mechanics.b4.shape1.e_x[1]
mechanics.b4.shape1.e_x[2]
mechanics.b4.shape1.e_x[3]
mechanics.b4.shape1.e_y[1]
mechanics.b4.shape1.e_y[2]
mechanics.b4.shape1.e_y[3]
mechanics.b4.shape1.Form
mechanics.b4.shape1.rvisobj[1]
mechanics.b4.shape1.rvisobj[2]
mechanics.b4.shape1.rvisobj[3]
mechanics.b4.shape1.Material
mechanics.b5.animation
mechanics.b5.animateSphere
mechanics.b5.r[1]
mechanics.b5.r[2]
mechanics.b5.r[3]
mechanics.b5.r_CM[1]
mechanics.b5.r_CM[2]
mechanics.b5.r_CM[3]
mechanics.b5.m
mechanics.b5.I_11
mechanics.b5.I_22
mechanics.b5.I_33
mechanics.b5.I_21
mechanics.b5.I_31
mechanics.b5.I_32
mechanics.b5.r_0[1]
mechanics.b5.r_0[2]
mechanics.b5.r_0[3]
mechanics.b5.v_0[1]
mechanics.b5.v_0[2]
mechanics.b5.v_0[3]
mechanics.b5.angles_fixed
mechanics.b5.angles_start[1]
mechanics.b5.angles_start[2]
mechanics.b5.angles_start[3]
mechanics.b5.sequence_start[1]
mechanics.b5.sequence_start[2]
mechanics.b5.sequence_start[3]
mechanics.b5.w_0_fixed
mechanics.b5.w_0_start[1]
mechanics.b5.w_0_start[2]
mechanics.b5.w_0_start[3]
mechanics.b5.z_0_fixed
mechanics.b5.z_0_start[1]
mechanics.b5.z_0_start[2]
mechanics.b5.z_0_start[3]
mechanics.b5.r_shape[1]
mechanics.b5.r_shape[2]
mechanics.b5.r_shape[3]
mechanics.b5.lengthDirection[1]
mechanics.b5.lengthDirection[2]
mechanics.b5.lengthDirection[3]
mechanics.b5.widthDirection[1]
mechanics.b5.widthDirection[2]
mechanics.b5.widthDirection[3]
mechanics.b5.length
mechanics.b5.width
mechanics.b5.height
mechanics.b5.extra
mechanics.b5.color[1]
mechanics.b5.color[2]
mechanics.b5.color[3]
mechanics.b5.sphereDiameter
mechanics.b5.sphereColor[1]
mechanics.b5.sphereColor[2]
mechanics.b5.sphereColor[3]
mechanics.b5.enforceStates
mechanics.b5.useQuaternions
mechanics.b5.sequence_angleStates[1]
mechanics.b5.sequence_angleStates[2]
mechanics.b5.sequence_angleStates[3]
mechanics.b5.frameTranslation.frame_a.R.T[1, 1]
mechanics.b5.frameTranslation.frame_a.R.T[1, 2]
mechanics.b5.frameTranslation.frame_a.R.T[1, 3]
mechanics.b5.frameTranslation.frame_a.R.T[2, 1]
mechanics.b5.frameTranslation.frame_a.R.T[2, 2]
mechanics.b5.frameTranslation.frame_a.R.T[2, 3]
mechanics.b5.frameTranslation.frame_a.R.T[3, 1]
mechanics.b5.frameTranslation.frame_a.R.T[3, 2]
mechanics.b5.frameTranslation.frame_a.R.T[3, 3]
mechanics.b5.frameTranslation.frame_a.R.w[1]
mechanics.b5.frameTranslation.frame_a.R.w[2]
mechanics.b5.frameTranslation.frame_a.R.w[3]
mechanics.b5.frameTranslation.frame_a.t[1]
mechanics.b5.frameTranslation.frame_a.t[3]
mechanics.b5.frameTranslation.animation
mechanics.b5.frameTranslation.r[1]
mechanics.b5.frameTranslation.r[2]
mechanics.b5.frameTranslation.r[3]
mechanics.b5.frameTranslation.r_shape[1]
mechanics.b5.frameTranslation.r_shape[2]
mechanics.b5.frameTranslation.r_shape[3]
mechanics.b5.frameTranslation.lengthDirection[1]
mechanics.b5.frameTranslation.lengthDirection[2]
mechanics.b5.frameTranslation.lengthDirection[3]
mechanics.b5.frameTranslation.widthDirection[1]
mechanics.b5.frameTranslation.widthDirection[2]
mechanics.b5.frameTranslation.widthDirection[3]
mechanics.b5.frameTranslation.length
mechanics.b5.frameTranslation.width
mechanics.b5.frameTranslation.height
mechanics.b5.frameTranslation.extra
mechanics.b5.frameTranslation.color[1]
mechanics.b5.frameTranslation.color[2]
mechanics.b5.frameTranslation.color[3]
mechanics.b5.body.frame_a.R.T[1, 1]
mechanics.b5.body.frame_a.R.T[1, 2]
mechanics.b5.body.frame_a.R.T[1, 3]
mechanics.b5.body.frame_a.R.T[2, 1]
mechanics.b5.body.frame_a.R.T[2, 2]
mechanics.b5.body.frame_a.R.T[2, 3]
mechanics.b5.body.frame_a.R.T[3, 1]
mechanics.b5.body.frame_a.R.T[3, 2]
mechanics.b5.body.frame_a.R.T[3, 3]
mechanics.b5.body.frame_a.R.w[1]
mechanics.b5.body.frame_a.R.w[2]
mechanics.b5.body.frame_a.R.w[3]
mechanics.b5.body.frame_a.f[1]
mechanics.b5.body.frame_a.f[2]
mechanics.b5.body.frame_a.f[3]
mechanics.b5.body.frame_a.t[1]
mechanics.b5.body.frame_a.t[2]
mechanics.b5.body.frame_a.t[3]
mechanics.b5.body.animation
mechanics.b5.body.r_CM[1]
mechanics.b5.body.r_CM[2]
mechanics.b5.body.r_CM[3]
mechanics.b5.body.m
mechanics.b5.body.I_11
mechanics.b5.body.I_22
mechanics.b5.body.I_33
mechanics.b5.body.I_21
mechanics.b5.body.I_31
mechanics.b5.body.I_32
mechanics.b5.body.a_0[1]
mechanics.b5.body.a_0[2]
mechanics.b5.body.a_0[3]
mechanics.b5.body.angles_fixed
mechanics.b5.body.angles_start[1]
mechanics.b5.body.angles_start[2]
mechanics.b5.body.angles_start[3]
mechanics.b5.body.sequence_start[1]
mechanics.b5.body.sequence_start[2]
mechanics.b5.body.sequence_start[3]
mechanics.b5.body.w_0_fixed
mechanics.b5.body.w_0_start[1]
mechanics.b5.body.w_0_start[2]
mechanics.b5.body.w_0_start[3]
mechanics.b5.body.z_0_fixed
mechanics.b5.body.z_0_start[1]
mechanics.b5.body.z_0_start[2]
mechanics.b5.body.z_0_start[3]
mechanics.b5.body.sphereDiameter
mechanics.b5.body.sphereColor[1]
mechanics.b5.body.sphereColor[2]
mechanics.b5.body.sphereColor[3]
mechanics.b5.body.cylinderDiameter
mechanics.b5.body.cylinderColor[1]
mechanics.b5.body.cylinderColor[2]
mechanics.b5.body.cylinderColor[3]
mechanics.b5.body.enforceStates
mechanics.b5.body.useQuaternions
mechanics.b5.body.sequence_angleStates[1]
mechanics.b5.body.sequence_angleStates[2]
mechanics.b5.body.sequence_angleStates[3]
mechanics.b5.body.I[1, 1]
mechanics.b5.body.I[1, 2]
mechanics.b5.body.I[1, 3]
mechanics.b5.body.I[2, 1]
mechanics.b5.body.I[2, 2]
mechanics.b5.body.I[2, 3]
mechanics.b5.body.I[3, 1]
mechanics.b5.body.I[3, 2]
mechanics.b5.body.I[3, 3]
mechanics.b5.body.R_start.T[1, 1]
mechanics.b5.body.R_start.T[1, 2]
mechanics.b5.body.R_start.T[1, 3]
mechanics.b5.body.R_start.T[2, 1]
mechanics.b5.body.R_start.T[2, 2]
mechanics.b5.body.R_start.T[2, 3]
mechanics.b5.body.R_start.T[3, 1]
mechanics.b5.body.R_start.T[3, 2]
mechanics.b5.body.R_start.T[3, 3]
mechanics.b5.body.R_start.w[1]
mechanics.b5.body.R_start.w[2]
mechanics.b5.body.R_start.w[3]
mechanics.b5.body.der(w_a[1])
mechanics.b5.body.der(w_a[2])
mechanics.b5.body.der(w_a[3])
mechanics.b5.body.g_0[1]
mechanics.b5.body.g_0[2]
mechanics.b5.body.g_0[3]
mechanics.b5.body.Q_start[1]
mechanics.b5.body.Q_start[2]
mechanics.b5.body.Q_start[3]
mechanics.b5.body.Q_start[4]
mechanics.b5.body.Q[1]
mechanics.b5.body.Q[2]
mechanics.b5.body.Q[3]
mechanics.b5.body.Q[4]
mechanics.b5.body.phi_start[1]
mechanics.b5.body.phi_start[2]
mechanics.b5.body.phi_start[3]
mechanics.b5.body.phi[1]
mechanics.b5.body.phi[2]
mechanics.b5.body.phi[3]
mechanics.b5.body.phi_d[1]
mechanics.b5.body.phi_d[2]
mechanics.b5.body.phi_d[3]
mechanics.b5.body.phi_dd[1]
mechanics.b5.body.phi_dd[2]
mechanics.b5.body.phi_dd[3]
mechanics.b5.shape1.lengthDirection[1]
mechanics.b5.shape1.lengthDirection[2]
mechanics.b5.shape1.lengthDirection[3]
mechanics.b5.shape1.widthDirection[1]
mechanics.b5.shape1.widthDirection[2]
mechanics.b5.shape1.widthDirection[3]
mechanics.b5.shape1.color[1]
mechanics.b5.shape1.color[2]
mechanics.b5.shape1.color[3]
mechanics.b5.shape1.isURI
mechanics.b5.shape1.abs_n_x
mechanics.b5.shape1.n_z_aux[1]
mechanics.b5.shape1.n_z_aux[2]
mechanics.b5.shape1.n_z_aux[3]
mechanics.b5.shape1.e_x[1]
mechanics.b5.shape1.e_x[2]
mechanics.b5.shape1.e_x[3]
mechanics.b5.shape1.e_y[1]
mechanics.b5.shape1.e_y[2]
mechanics.b5.shape1.e_y[3]
mechanics.b5.shape1.Form
mechanics.b5.shape1.rvisobj[1]
mechanics.b5.shape1.rvisobj[2]
mechanics.b5.shape1.rvisobj[3]
mechanics.b5.shape1.Material
mechanics.b6.frame_b.f[1]
mechanics.b6.frame_b.f[2]
mechanics.b6.frame_b.f[3]
mechanics.b6.frame_b.t[1]
mechanics.b6.frame_b.t[2]
mechanics.b6.frame_b.t[3]
mechanics.b6.animation
mechanics.b6.animateSphere
mechanics.b6.r[1]
mechanics.b6.r[2]
mechanics.b6.r[3]
mechanics.b6.r_CM[1]
mechanics.b6.r_CM[2]
mechanics.b6.r_CM[3]
mechanics.b6.m
mechanics.b6.I_11
mechanics.b6.I_22
mechanics.b6.I_33
mechanics.b6.I_21
mechanics.b6.I_31
mechanics.b6.I_32
mechanics.b6.r_0[1]
mechanics.b6.r_0[2]
mechanics.b6.r_0[3]
mechanics.b6.v_0[1]
mechanics.b6.v_0[2]
mechanics.b6.v_0[3]
mechanics.b6.angles_fixed
mechanics.b6.angles_start[1]
mechanics.b6.angles_start[2]
mechanics.b6.angles_start[3]
mechanics.b6.sequence_start[1]
mechanics.b6.sequence_start[2]
mechanics.b6.sequence_start[3]
mechanics.b6.w_0_fixed
mechanics.b6.w_0_start[1]
mechanics.b6.w_0_start[2]
mechanics.b6.w_0_start[3]
mechanics.b6.z_0_fixed
mechanics.b6.z_0_start[1]
mechanics.b6.z_0_start[2]
mechanics.b6.z_0_start[3]
mechanics.b6.r_shape[1]
mechanics.b6.r_shape[2]
mechanics.b6.r_shape[3]
mechanics.b6.lengthDirection[1]
mechanics.b6.lengthDirection[2]
mechanics.b6.lengthDirection[3]
mechanics.b6.widthDirection[1]
mechanics.b6.widthDirection[2]
mechanics.b6.widthDirection[3]
mechanics.b6.length
mechanics.b6.width
mechanics.b6.height
mechanics.b6.extra
mechanics.b6.color[1]
mechanics.b6.color[2]
mechanics.b6.color[3]
mechanics.b6.sphereDiameter
mechanics.b6.sphereColor[1]
mechanics.b6.sphereColor[2]
mechanics.b6.sphereColor[3]
mechanics.b6.enforceStates
mechanics.b6.useQuaternions
mechanics.b6.sequence_angleStates[1]
mechanics.b6.sequence_angleStates[2]
mechanics.b6.sequence_angleStates[3]
mechanics.b6.frameTranslation.frame_a.R.T[1, 1]
mechanics.b6.frameTranslation.frame_a.R.T[1, 2]
mechanics.b6.frameTranslation.frame_a.R.T[1, 3]
mechanics.b6.frameTranslation.frame_a.R.T[2, 1]
mechanics.b6.frameTranslation.frame_a.R.T[2, 2]
mechanics.b6.frameTranslation.frame_a.R.T[2, 3]
mechanics.b6.frameTranslation.frame_a.R.T[3, 1]
mechanics.b6.frameTranslation.frame_a.R.T[3, 2]
mechanics.b6.frameTranslation.frame_a.R.T[3, 3]
mechanics.b6.frameTranslation.frame_a.R.w[1]
mechanics.b6.frameTranslation.frame_a.R.w[2]
mechanics.b6.frameTranslation.frame_a.R.w[3]
mechanics.b6.frameTranslation.animation
mechanics.b6.frameTranslation.r[1]
mechanics.b6.frameTranslation.r[2]
mechanics.b6.frameTranslation.r[3]
mechanics.b6.frameTranslation.r_shape[1]
mechanics.b6.frameTranslation.r_shape[2]
mechanics.b6.frameTranslation.r_shape[3]
mechanics.b6.frameTranslation.lengthDirection[1]
mechanics.b6.frameTranslation.lengthDirection[2]
mechanics.b6.frameTranslation.lengthDirection[3]
mechanics.b6.frameTranslation.widthDirection[1]
mechanics.b6.frameTranslation.widthDirection[2]
mechanics.b6.frameTranslation.widthDirection[3]
mechanics.b6.frameTranslation.length
mechanics.b6.frameTranslation.width
mechanics.b6.frameTranslation.height
mechanics.b6.frameTranslation.extra
mechanics.b6.frameTranslation.color[1]
mechanics.b6.frameTranslation.color[2]
mechanics.b6.frameTranslation.color[3]
mechanics.b6.body.frame_a.R.T[1, 1]
mechanics.b6.body.frame_a.R.T[1, 2]
mechanics.b6.body.frame_a.R.T[1, 3]
mechanics.b6.body.frame_a.R.T[2, 1]
mechanics.b6.body.frame_a.R.T[2, 2]
mechanics.b6.body.frame_a.R.T[2, 3]
mechanics.b6.body.frame_a.R.T[3, 1]
mechanics.b6.body.frame_a.R.T[3, 2]
mechanics.b6.body.frame_a.R.T[3, 3]
mechanics.b6.body.frame_a.R.w[1]
mechanics.b6.body.frame_a.R.w[2]
mechanics.b6.body.frame_a.R.w[3]
mechanics.b6.body.frame_a.f[1]
mechanics.b6.body.frame_a.f[2]
mechanics.b6.body.frame_a.f[3]
mechanics.b6.body.frame_a.t[1]
mechanics.b6.body.frame_a.t[2]
mechanics.b6.body.frame_a.t[3]
mechanics.b6.body.animation
mechanics.b6.body.r_CM[1]
mechanics.b6.body.r_CM[2]
mechanics.b6.body.r_CM[3]
mechanics.b6.body.m
mechanics.b6.body.I_11
mechanics.b6.body.I_22
mechanics.b6.body.I_33
mechanics.b6.body.I_21
mechanics.b6.body.I_31
mechanics.b6.body.I_32
mechanics.b6.body.a_0[1]
mechanics.b6.body.a_0[2]
mechanics.b6.body.a_0[3]
mechanics.b6.body.angles_fixed
mechanics.b6.body.angles_start[1]
mechanics.b6.body.angles_start[2]
mechanics.b6.body.angles_start[3]
mechanics.b6.body.sequence_start[1]
mechanics.b6.body.sequence_start[2]
mechanics.b6.body.sequence_start[3]
mechanics.b6.body.w_0_fixed
mechanics.b6.body.w_0_start[1]
mechanics.b6.body.w_0_start[2]
mechanics.b6.body.w_0_start[3]
mechanics.b6.body.z_0_fixed
mechanics.b6.body.z_0_start[1]
mechanics.b6.body.z_0_start[2]
mechanics.b6.body.z_0_start[3]
mechanics.b6.body.sphereDiameter
mechanics.b6.body.sphereColor[1]
mechanics.b6.body.sphereColor[2]
mechanics.b6.body.sphereColor[3]
mechanics.b6.body.cylinderDiameter
mechanics.b6.body.cylinderColor[1]
mechanics.b6.body.cylinderColor[2]
mechanics.b6.body.cylinderColor[3]
mechanics.b6.body.enforceStates
mechanics.b6.body.useQuaternions
mechanics.b6.body.sequence_angleStates[1]
mechanics.b6.body.sequence_angleStates[2]
mechanics.b6.body.sequence_angleStates[3]
mechanics.b6.body.I[1, 1]
mechanics.b6.body.I[1, 2]
mechanics.b6.body.I[1, 3]
mechanics.b6.body.I[2, 1]
mechanics.b6.body.I[2, 2]
mechanics.b6.body.I[2, 3]
mechanics.b6.body.I[3, 1]
mechanics.b6.body.I[3, 2]
mechanics.b6.body.I[3, 3]
mechanics.b6.body.R_start.T[1, 1]
mechanics.b6.body.R_start.T[1, 2]
mechanics.b6.body.R_start.T[1, 3]
mechanics.b6.body.R_start.T[2, 1]
mechanics.b6.body.R_start.T[2, 2]
mechanics.b6.body.R_start.T[2, 3]
mechanics.b6.body.R_start.T[3, 1]
mechanics.b6.body.R_start.T[3, 2]
mechanics.b6.body.R_start.T[3, 3]
mechanics.b6.body.R_start.w[1]
mechanics.b6.body.R_start.w[2]
mechanics.b6.body.R_start.w[3]
mechanics.b6.body.der(w_a[1])
mechanics.b6.body.der(w_a[2])
mechanics.b6.body.der(w_a[3])
mechanics.b6.body.g_0[1]
mechanics.b6.body.g_0[2]
mechanics.b6.body.g_0[3]
mechanics.b6.body.Q_start[1]
mechanics.b6.body.Q_start[2]
mechanics.b6.body.Q_start[3]
mechanics.b6.body.Q_start[4]
mechanics.b6.body.Q[1]
mechanics.b6.body.Q[2]
mechanics.b6.body.Q[3]
mechanics.b6.body.Q[4]
mechanics.b6.body.phi_start[1]
mechanics.b6.body.phi_start[2]
mechanics.b6.body.phi_start[3]
mechanics.b6.body.phi[1]
mechanics.b6.body.phi[2]
mechanics.b6.body.phi[3]
mechanics.b6.body.phi_d[1]
mechanics.b6.body.phi_d[2]
mechanics.b6.body.phi_d[3]
mechanics.b6.body.phi_dd[1]
mechanics.b6.body.phi_dd[2]
mechanics.b6.body.phi_dd[3]
mechanics.b6.shape1.lengthDirection[1]
mechanics.b6.shape1.lengthDirection[2]
mechanics.b6.shape1.lengthDirection[3]
mechanics.b6.shape1.widthDirection[1]
mechanics.b6.shape1.widthDirection[2]
mechanics.b6.shape1.widthDirection[3]
mechanics.b6.shape1.color[1]
mechanics.b6.shape1.color[2]
mechanics.b6.shape1.color[3]
mechanics.b6.shape1.isURI
mechanics.b6.shape1.abs_n_x
mechanics.b6.shape1.n_z_aux[1]
mechanics.b6.shape1.n_z_aux[2]
mechanics.b6.shape1.n_z_aux[3]
mechanics.b6.shape1.e_x[1]
mechanics.b6.shape1.e_x[2]
mechanics.b6.shape1.e_x[3]
mechanics.b6.shape1.e_y[1]
mechanics.b6.shape1.e_y[2]
mechanics.b6.shape1.e_y[3]
mechanics.b6.shape1.Form
mechanics.b6.shape1.rvisobj[1]
mechanics.b6.shape1.rvisobj[2]
mechanics.b6.shape1.rvisobj[3]
mechanics.b6.shape1.Material
mechanics.load.frame_b.f[1]
mechanics.load.frame_b.f[2]
mechanics.load.frame_b.f[3]
mechanics.load.frame_b.t[1]
mechanics.load.frame_b.t[2]
mechanics.load.frame_b.t[3]
mechanics.load.animation
mechanics.load.animateSphere
mechanics.load.r[1]
mechanics.load.r[2]
mechanics.load.r[3]
mechanics.load.r_CM[1]
mechanics.load.r_CM[2]
mechanics.load.r_CM[3]
mechanics.load.m
mechanics.load.I_11
mechanics.load.I_22
mechanics.load.I_33
mechanics.load.I_21
mechanics.load.I_31
mechanics.load.I_32
mechanics.load.angles_fixed
mechanics.load.angles_start[1]
mechanics.load.angles_start[2]
mechanics.load.angles_start[3]
mechanics.load.sequence_start[1]
mechanics.load.sequence_start[2]
mechanics.load.sequence_start[3]
mechanics.load.w_0_fixed
mechanics.load.w_0_start[1]
mechanics.load.w_0_start[2]
mechanics.load.w_0_start[3]
mechanics.load.z_0_fixed
mechanics.load.z_0_start[1]
mechanics.load.z_0_start[2]
mechanics.load.z_0_start[3]
mechanics.load.r_shape[1]
mechanics.load.r_shape[2]
mechanics.load.r_shape[3]
mechanics.load.lengthDirection[1]
mechanics.load.lengthDirection[2]
mechanics.load.lengthDirection[3]
mechanics.load.widthDirection[1]
mechanics.load.widthDirection[2]
mechanics.load.widthDirection[3]
mechanics.load.length
mechanics.load.width
mechanics.load.height
mechanics.load.extra
mechanics.load.color[1]
mechanics.load.color[2]
mechanics.load.color[3]
mechanics.load.sphereDiameter
mechanics.load.sphereColor[1]
mechanics.load.sphereColor[2]
mechanics.load.sphereColor[3]
mechanics.load.enforceStates
mechanics.load.useQuaternions
mechanics.load.sequence_angleStates[1]
mechanics.load.sequence_angleStates[2]
mechanics.load.sequence_angleStates[3]
mechanics.load.frameTranslation.frame_a.R.T[1, 1]
mechanics.load.frameTranslation.frame_a.R.T[1, 2]
mechanics.load.frameTranslation.frame_a.R.T[1, 3]
mechanics.load.frameTranslation.frame_a.R.T[2, 1]
mechanics.load.frameTranslation.frame_a.R.T[2, 2]
mechanics.load.frameTranslation.frame_a.R.T[2, 3]
mechanics.load.frameTranslation.frame_a.R.T[3, 1]
mechanics.load.frameTranslation.frame_a.R.T[3, 2]
mechanics.load.frameTranslation.frame_a.R.T[3, 3]
mechanics.load.frameTranslation.frame_a.R.w[1]
mechanics.load.frameTranslation.frame_a.R.w[2]
mechanics.load.frameTranslation.frame_a.R.w[3]
mechanics.load.frameTranslation.frame_a.f[1]
mechanics.load.frameTranslation.frame_a.f[2]
mechanics.load.frameTranslation.frame_a.f[3]
mechanics.load.frameTranslation.frame_a.t[1]
mechanics.load.frameTranslation.frame_a.t[2]
mechanics.load.frameTranslation.frame_a.t[3]
mechanics.load.frameTranslation.frame_b.f[1]
mechanics.load.frameTranslation.frame_b.f[2]
mechanics.load.frameTranslation.frame_b.f[3]
mechanics.load.frameTranslation.frame_b.t[1]
mechanics.load.frameTranslation.frame_b.t[2]
mechanics.load.frameTranslation.frame_b.t[3]
mechanics.load.frameTranslation.animation
mechanics.load.frameTranslation.r[1]
mechanics.load.frameTranslation.r[2]
mechanics.load.frameTranslation.r[3]
mechanics.load.frameTranslation.r_shape[1]
mechanics.load.frameTranslation.r_shape[2]
mechanics.load.frameTranslation.r_shape[3]
mechanics.load.frameTranslation.lengthDirection[1]
mechanics.load.frameTranslation.lengthDirection[2]
mechanics.load.frameTranslation.lengthDirection[3]
mechanics.load.frameTranslation.widthDirection[1]
mechanics.load.frameTranslation.widthDirection[2]
mechanics.load.frameTranslation.widthDirection[3]
mechanics.load.frameTranslation.length
mechanics.load.frameTranslation.width
mechanics.load.frameTranslation.height
mechanics.load.frameTranslation.extra
mechanics.load.frameTranslation.color[1]
mechanics.load.frameTranslation.color[2]
mechanics.load.frameTranslation.color[3]
mechanics.load.body.frame_a.R.T[1, 1]
mechanics.load.body.frame_a.R.T[1, 2]
mechanics.load.body.frame_a.R.T[1, 3]
mechanics.load.body.frame_a.R.T[2, 1]
mechanics.load.body.frame_a.R.T[2, 2]
mechanics.load.body.frame_a.R.T[2, 3]
mechanics.load.body.frame_a.R.T[3, 1]
mechanics.load.body.frame_a.R.T[3, 2]
mechanics.load.body.frame_a.R.T[3, 3]
mechanics.load.body.frame_a.R.w[1]
mechanics.load.body.frame_a.R.w[2]
mechanics.load.body.frame_a.R.w[3]
mechanics.load.body.animation
mechanics.load.body.r_CM[1]
mechanics.load.body.r_CM[2]
mechanics.load.body.r_CM[3]
mechanics.load.body.m
mechanics.load.body.I_11
mechanics.load.body.I_22
mechanics.load.body.I_33
mechanics.load.body.I_21
mechanics.load.body.I_31
mechanics.load.body.I_32
mechanics.load.body.a_0[1]
mechanics.load.body.a_0[2]
mechanics.load.body.a_0[3]
mechanics.load.body.angles_fixed
mechanics.load.body.angles_start[1]
mechanics.load.body.angles_start[2]
mechanics.load.body.angles_start[3]
mechanics.load.body.sequence_start[1]
mechanics.load.body.sequence_start[2]
mechanics.load.body.sequence_start[3]
mechanics.load.body.w_0_fixed
mechanics.load.body.w_0_start[1]
mechanics.load.body.w_0_start[2]
mechanics.load.body.w_0_start[3]
mechanics.load.body.z_0_fixed
mechanics.load.body.z_0_start[1]
mechanics.load.body.z_0_start[2]
mechanics.load.body.z_0_start[3]
mechanics.load.body.sphereDiameter
mechanics.load.body.sphereColor[1]
mechanics.load.body.sphereColor[2]
mechanics.load.body.sphereColor[3]
mechanics.load.body.cylinderDiameter
mechanics.load.body.cylinderColor[1]
mechanics.load.body.cylinderColor[2]
mechanics.load.body.cylinderColor[3]
mechanics.load.body.enforceStates
mechanics.load.body.useQuaternions
mechanics.load.body.sequence_angleStates[1]
mechanics.load.body.sequence_angleStates[2]
mechanics.load.body.sequence_angleStates[3]
mechanics.load.body.I[1, 1]
mechanics.load.body.I[1, 2]
mechanics.load.body.I[1, 3]
mechanics.load.body.I[2, 1]
mechanics.load.body.I[2, 2]
mechanics.load.body.I[2, 3]
mechanics.load.body.I[3, 1]
mechanics.load.body.I[3, 2]
mechanics.load.body.I[3, 3]
mechanics.load.body.R_start.T[1, 1]
mechanics.load.body.R_start.T[1, 2]
mechanics.load.body.R_start.T[1, 3]
mechanics.load.body.R_start.T[2, 1]
mechanics.load.body.R_start.T[2, 2]
mechanics.load.body.R_start.T[2, 3]
mechanics.load.body.R_start.T[3, 1]
mechanics.load.body.R_start.T[3, 2]
mechanics.load.body.R_start.T[3, 3]
mechanics.load.body.R_start.w[1]
mechanics.load.body.R_start.w[2]
mechanics.load.body.R_start.w[3]
mechanics.load.body.g_0[1]
mechanics.load.body.g_0[2]
mechanics.load.body.g_0[3]
mechanics.load.body.Q_start[1]
mechanics.load.body.Q_start[2]
mechanics.load.body.Q_start[3]
mechanics.load.body.Q_start[4]
mechanics.load.body.Q[1]
mechanics.load.body.Q[2]
mechanics.load.body.Q[3]
mechanics.load.body.Q[4]
mechanics.load.body.phi_start[1]
mechanics.load.body.phi_start[2]
mechanics.load.body.phi_start[3]
mechanics.load.body.phi[1]
mechanics.load.body.phi[2]
mechanics.load.body.phi[3]
mechanics.load.body.phi_d[1]
mechanics.load.body.phi_d[2]
mechanics.load.body.phi_d[3]
mechanics.load.body.phi_dd[1]
mechanics.load.body.phi_dd[2]
mechanics.load.body.phi_dd[3]
mechanics.load.shape1.lengthDirection[1]
mechanics.load.shape1.lengthDirection[2]
mechanics.load.shape1.lengthDirection[3]
mechanics.load.shape1.widthDirection[1]
mechanics.load.shape1.widthDirection[2]
mechanics.load.shape1.widthDirection[3]
mechanics.load.shape1.length
mechanics.load.shape1.color[1]
mechanics.load.shape1.color[2]
mechanics.load.shape1.color[3]
mechanics.load.shape1.isURI
mechanics.load.shape1.abs_n_x
mechanics.load.shape1.n_z_aux[1]
mechanics.load.shape1.n_z_aux[2]
mechanics.load.shape1.n_z_aux[3]
mechanics.load.shape1.e_x[1]
mechanics.load.shape1.e_x[2]
mechanics.load.shape1.e_x[3]
mechanics.load.shape1.e_y[1]
mechanics.load.shape1.e_y[2]
mechanics.load.shape1.e_y[3]
mechanics.load.shape1.Form
mechanics.load.shape1.rxvisobj[1]
mechanics.load.shape1.rxvisobj[2]
mechanics.load.shape1.rxvisobj[3]
mechanics.load.shape1.ryvisobj[1]
mechanics.load.shape1.ryvisobj[2]
mechanics.load.shape1.ryvisobj[3]
mechanics.load.shape1.rvisobj[1]
mechanics.load.shape1.rvisobj[2]
mechanics.load.shape1.rvisobj[3]
mechanics.load.shape1.size[1]
mechanics.load.shape1.Material
mechanics.load.shape2.r_shape[1]
mechanics.load.shape2.r_shape[2]
mechanics.load.shape2.r_shape[3]
mechanics.load.shape2.lengthDirection[1]
mechanics.load.shape2.lengthDirection[2]
mechanics.load.shape2.lengthDirection[3]
mechanics.load.shape2.widthDirection[1]
mechanics.load.shape2.widthDirection[2]
mechanics.load.shape2.widthDirection[3]
mechanics.load.shape2.extra
mechanics.load.shape2.color[1]
mechanics.load.shape2.color[2]
mechanics.load.shape2.color[3]
mechanics.load.shape2.isURI
mechanics.load.shape2.abs_n_x
mechanics.load.shape2.n_z_aux[1]
mechanics.load.shape2.n_z_aux[2]
mechanics.load.shape2.n_z_aux[3]
mechanics.load.shape2.e_x[1]
mechanics.load.shape2.e_x[2]
mechanics.load.shape2.e_x[3]
mechanics.load.shape2.e_y[1]
mechanics.load.shape2.e_y[2]
mechanics.load.shape2.e_y[3]
mechanics.load.shape2.Form
mechanics.load.shape2.rvisobj[1]
mechanics.load.shape2.rvisobj[2]
mechanics.load.shape2.rvisobj[3]
mechanics.load.shape2.Material
mechanics.load.shape2.Extra
pathPlanning.naxis
pathPlanning.angleBegDeg[1]
pathPlanning.angleBegDeg[2]
pathPlanning.angleBegDeg[3]
pathPlanning.angleBegDeg[4]
pathPlanning.angleBegDeg[5]
pathPlanning.angleBegDeg[6]
pathPlanning.angleEndDeg[1]
pathPlanning.angleEndDeg[2]
pathPlanning.angleEndDeg[3]
pathPlanning.angleEndDeg[4]
pathPlanning.angleEndDeg[5]
pathPlanning.angleEndDeg[6]
pathPlanning.speedMax[1]
pathPlanning.speedMax[2]
pathPlanning.speedMax[3]
pathPlanning.speedMax[4]
pathPlanning.speedMax[5]
pathPlanning.speedMax[6]
pathPlanning.accMax[1]
pathPlanning.accMax[2]
pathPlanning.accMax[3]
pathPlanning.accMax[4]
pathPlanning.accMax[5]
pathPlanning.accMax[6]
pathPlanning.startTime
pathPlanning.swingTime
pathPlanning.angleBeg[1]
pathPlanning.angleBeg[2]
pathPlanning.angleBeg[3]
pathPlanning.angleBeg[4]
pathPlanning.angleBeg[5]
pathPlanning.angleBeg[6]
pathPlanning.angleEnd[1]
pathPlanning.angleEnd[2]
pathPlanning.angleEnd[3]
pathPlanning.angleEnd[4]
pathPlanning.angleEnd[5]
pathPlanning.angleEnd[6]
pathPlanning.path.q_begin[1]
pathPlanning.path.q_begin[2]
pathPlanning.path.q_begin[3]
pathPlanning.path.q_begin[4]
pathPlanning.path.q_begin[5]
pathPlanning.path.q_begin[6]
pathPlanning.path.q_end[1]
pathPlanning.path.q_end[2]
pathPlanning.path.q_end[3]
pathPlanning.path.q_end[4]
pathPlanning.path.q_end[5]
pathPlanning.path.q_end[6]
pathPlanning.path.qd_max[1]
pathPlanning.path.qd_max[2]
pathPlanning.path.qd_max[3]
pathPlanning.path.qd_max[4]
pathPlanning.path.qd_max[5]
pathPlanning.path.qd_max[6]
pathPlanning.path.qdd_max[1]
pathPlanning.path.qdd_max[2]
pathPlanning.path.qdd_max[3]
pathPlanning.path.qdd_max[4]
pathPlanning.path.qdd_max[5]
pathPlanning.path.qdd_max[6]
pathPlanning.path.startTime
pathPlanning.path.nout
pathPlanning.path.endTime
pathPlanning.path.p_q_begin[1]
pathPlanning.path.p_q_begin[2]
pathPlanning.path.p_q_begin[3]
pathPlanning.path.p_q_begin[4]
pathPlanning.path.p_q_begin[5]
pathPlanning.path.p_q_begin[6]
pathPlanning.path.p_q_end[1]
pathPlanning.path.p_q_end[2]
pathPlanning.path.p_q_end[3]
pathPlanning.path.p_q_end[4]
pathPlanning.path.p_q_end[5]
pathPlanning.path.p_q_end[6]
pathPlanning.path.p_qd_max[1]
pathPlanning.path.p_qd_max[2]
pathPlanning.path.p_qd_max[3]
pathPlanning.path.p_qd_max[4]
pathPlanning.path.p_qd_max[5]
pathPlanning.path.p_qd_max[6]
pathPlanning.path.p_qdd_max[1]
pathPlanning.path.p_qdd_max[2]
pathPlanning.path.p_qdd_max[3]
pathPlanning.path.p_qdd_max[4]
pathPlanning.path.p_qdd_max[5]
pathPlanning.path.p_qdd_max[6]
pathPlanning.path.p_deltaq[1]
pathPlanning.path.p_deltaq[2]
pathPlanning.path.p_deltaq[3]
pathPlanning.path.p_deltaq[4]
pathPlanning.path.p_deltaq[5]
pathPlanning.path.p_deltaq[6]
pathPlanning.path.eps
pathPlanning.path.motion_ref
pathPlanning.path.sd_max_inv
pathPlanning.path.sdd_max_inv
pathPlanning.path.sd_max
pathPlanning.path.sdd_max
pathPlanning.path.aux1[1]
pathPlanning.path.aux1[2]
pathPlanning.path.aux1[3]
pathPlanning.path.aux1[4]
pathPlanning.path.aux1[5]
pathPlanning.path.aux1[6]
pathPlanning.path.aux2[1]
pathPlanning.path.aux2[2]
pathPlanning.path.aux2[3]
pathPlanning.path.aux2[4]
pathPlanning.path.aux2[5]
pathPlanning.path.aux2[6]
pathPlanning.path.Ta1
pathPlanning.path.Ta2
pathPlanning.path.Tv
pathPlanning.path.Te
pathPlanning.path.noWphase
pathPlanning.path.Ta1s
pathPlanning.path.Ta2s
pathPlanning.path.Tvs
pathPlanning.path.sd_max2
pathPlanning.path.s1
pathPlanning.path.s2
pathPlanning.path.s3
pathPlanning.path.s
pathPlanning.path.sd
pathPlanning.path.der(sd)
pathPlanning.pathToAxis1.nAxis
pathPlanning.pathToAxis1.axisUsed
pathPlanning.pathToAxis2.nAxis
pathPlanning.pathToAxis2.axisUsed
pathPlanning.pathToAxis3.nAxis
pathPlanning.pathToAxis3.axisUsed
pathPlanning.pathToAxis4.nAxis
pathPlanning.pathToAxis4.axisUsed
pathPlanning.pathToAxis5.nAxis
pathPlanning.pathToAxis5.axisUsed
pathPlanning.pathToAxis6.nAxis
pathPlanning.pathToAxis6.axisUsed
pathPlanning.terminateSimulation.condition
axis1.kp
axis1.ks
axis1.Ts
axis1.k
axis1.w
axis1.D
axis1.J
axis1.ratio
axis1.Rv0
axis1.Rv1
axis1.peak
axis1.gear.flange_a.tau
axis1.gear.i
axis1.gear.c
axis1.gear.d
axis1.gear.Rv0
axis1.gear.Rv1
axis1.gear.peak
axis1.gear.unitAngularVelocity
axis1.gear.unitTorque
axis1.gear.gear.useSupport
axis1.gear.gear.flange_a.phi
axis1.gear.gear.flange_a.der(phi)
axis1.gear.gear.flange_a.der(phi, 2)
axis1.gear.gear.flange_a.tau
axis1.gear.gear.phi_support
axis1.gear.gear.ratio
axis1.gear.spring.c
axis1.gear.spring.d
axis1.gear.spring.phi_rel0
axis1.gear.spring.phi_rel
axis1.gear.spring.der(phi_rel)
axis1.gear.spring.w_rel
axis1.gear.spring.der(w_rel)
axis1.gear.spring.phi_nominal
axis1.gear.spring.stateSelect
axis1.gear.spring.useHeatPort
axis1.gear.spring.lossPower
axis1.gear.spring.tau_c
axis1.gear.spring.tau_d
axis1.gear.bearingFriction.useSupport
axis1.gear.bearingFriction.phi_support
axis1.gear.bearingFriction.tau_pos[1, 1]
axis1.gear.bearingFriction.tau_pos[1, 2]
axis1.gear.bearingFriction.tau_pos[2, 1]
axis1.gear.bearingFriction.tau_pos[2, 2]
axis1.gear.bearingFriction.peak
axis1.gear.bearingFriction.w_small
axis1.gear.bearingFriction.tau0
axis1.gear.bearingFriction.tau0_max
axis1.gear.bearingFriction.free
axis1.gear.bearingFriction.sa
axis1.gear.bearingFriction.startForward
axis1.gear.bearingFriction.startBackward
axis1.gear.bearingFriction.locked
axis1.gear.bearingFriction.Unknown
axis1.gear.bearingFriction.Free
axis1.gear.bearingFriction.Forward
axis1.gear.bearingFriction.Stuck
axis1.gear.bearingFriction.Backward
axis1.gear.bearingFriction.mode
axis1.gear.bearingFriction.unitAngularAcceleration
axis1.gear.bearingFriction.unitTorque
axis1.gear.bearingFriction.useHeatPort
axis1.gear.bearingFriction.lossPower
axis1.gear.bearingFriction.phi
axis1.gear.bearingFriction.tau
axis1.gear.bearingFriction.w
axis1.gear.bearingFriction.der(w)
axis1.motor.J
axis1.motor.k
axis1.motor.w
axis1.motor.D
axis1.motor.w_max
axis1.motor.i_max
axis1.motor.Vs.p.v
axis1.motor.Vs.p.i
axis1.motor.Vs.n.v
axis1.motor.power.v1
axis1.motor.power.v2
axis1.motor.power.i1
axis1.motor.power.i2
axis1.motor.power.p1.i
axis1.motor.power.n1.i
axis1.motor.power.n2.v
axis1.motor.diff.v1
axis1.motor.diff.v2
axis1.motor.diff.i1
axis1.motor.diff.i2
axis1.motor.diff.p1.v
axis1.motor.diff.p1.i
axis1.motor.diff.n1.i
axis1.motor.diff.n2.v
axis1.motor.emf.useSupport
axis1.motor.emf.k
axis1.motor.emf.v
axis1.motor.emf.phi
axis1.motor.emf.tau
axis1.motor.emf.n.v
axis1.motor.emf.fixed.phi0
axis1.motor.La.v
axis1.motor.La.p.v
axis1.motor.La.i
axis1.motor.La.der(i)
axis1.motor.La.L
axis1.motor.Ra.R
axis1.motor.Ra.T_ref
axis1.motor.Ra.alpha
axis1.motor.Ra.v
axis1.motor.Ra.useHeatPort
axis1.motor.Ra.T
axis1.motor.Ra.LossPower
axis1.motor.Ra.R_actual
axis1.motor.Rd2.R
axis1.motor.Rd2.T_ref
axis1.motor.Rd2.alpha
axis1.motor.Rd2.v
axis1.motor.Rd2.useHeatPort
axis1.motor.Rd2.T
axis1.motor.Rd2.LossPower
axis1.motor.Rd2.R_actual
axis1.motor.C.v
axis1.motor.C.der(v)
axis1.motor.C.p.v
axis1.motor.C.p.i
axis1.motor.C.C
axis1.motor.OpI.v1
axis1.motor.OpI.i1
axis1.motor.OpI.p1.v
axis1.motor.OpI.p1.i
axis1.motor.OpI.n1.v
axis1.motor.OpI.n1.i
axis1.motor.OpI.n2.v
axis1.motor.Ri.R
axis1.motor.Ri.T_ref
axis1.motor.Ri.alpha
axis1.motor.Ri.n.v
axis1.motor.Ri.useHeatPort
axis1.motor.Ri.T
axis1.motor.Ri.LossPower
axis1.motor.Ri.R_actual
axis1.motor.Rd1.R
axis1.motor.Rd1.T_ref
axis1.motor.Rd1.alpha
axis1.motor.Rd1.v
axis1.motor.Rd1.useHeatPort
axis1.motor.Rd1.T
axis1.motor.Rd1.LossPower
axis1.motor.Rd1.R_actual
axis1.motor.Rp1.R
axis1.motor.Rp1.T_ref
axis1.motor.Rp1.alpha
axis1.motor.Rp1.v
axis1.motor.Rp1.p.i
axis1.motor.Rp1.useHeatPort
axis1.motor.Rp1.T
axis1.motor.Rp1.LossPower
axis1.motor.Rp1.R_actual
axis1.motor.Rp2.R
axis1.motor.Rp2.T_ref
axis1.motor.Rp2.alpha
axis1.motor.Rp2.n.v
axis1.motor.Rp2.useHeatPort
axis1.motor.Rp2.T
axis1.motor.Rp2.LossPower
axis1.motor.Rp2.R_actual
axis1.motor.Rd4.R
axis1.motor.Rd4.T_ref
axis1.motor.Rd4.alpha
axis1.motor.Rd4.p.i
axis1.motor.Rd4.n.v
axis1.motor.Rd4.useHeatPort
axis1.motor.Rd4.T
axis1.motor.Rd4.LossPower
axis1.motor.Rd4.R_actual
axis1.motor.hall2.p.v
axis1.motor.hall2.n.v
axis1.motor.Rd3.R
axis1.motor.Rd3.T_ref
axis1.motor.Rd3.alpha
axis1.motor.Rd3.v
axis1.motor.Rd3.useHeatPort
axis1.motor.Rd3.T
axis1.motor.Rd3.LossPower
axis1.motor.Rd3.R_actual
axis1.motor.g1.p.v
axis1.motor.g2.p.v
axis1.motor.g3.p.v
axis1.motor.g3.p.i
axis1.motor.hall1.p.v
axis1.motor.hall1.n.v
axis1.motor.g4.p.v
axis1.motor.g5.p.v
axis1.motor.phi.flange.tau
axis1.motor.speed.flange.tau
axis1.motor.Jmotor.J
axis1.motor.Jmotor.stateSelect
axis1.motor.convert1.k
axis1.motor.convert2.k
axis1.controller.kp
axis1.controller.ks
axis1.controller.Ts
axis1.controller.ratio
axis1.controller.gain1.k
axis1.controller.gain1.y
axis1.controller.PI.k
axis1.controller.PI.T
axis1.controller.PI.initType
axis1.controller.PI.x_start
axis1.controller.PI.y_start
axis1.controller.PI.u
axis1.controller.PI.x
axis1.controller.PI.der(x)
axis1.controller.feedback1.y
axis1.controller.P.k
axis1.controller.P.y
axis1.controller.add3.k1
axis1.controller.add3.k2
axis1.controller.add3.k3
axis1.controller.add3.u1
axis1.controller.gain2.k
axis1.angleSensor.flange.tau
axis1.speedSensor.flange.tau
axis1.accSensor.flange.tau
axis1.initializeFlange.use_phi_start
axis1.initializeFlange.use_w_start
axis1.initializeFlange.use_a_start
axis1.initializeFlange.stateSelect
axis1.initializeFlange.flange.tau
axis1.initializeFlange.set_phi_start.flange.tau
axis1.initializeFlange.set_w_start.flange.tau
axis1.initializeFlange.set_a_start.flange.tau
axis1.initializeFlange.set_flange_tau.flange.tau
axis1.const.k
axis1.c
axis1.cd
axis2.kp
axis2.ks
axis2.Ts
axis2.k
axis2.w
axis2.D
axis2.J
axis2.ratio
axis2.Rv0
axis2.Rv1
axis2.peak
axis2.gear.flange_a.tau
axis2.gear.i
axis2.gear.c
axis2.gear.d
axis2.gear.Rv0
axis2.gear.Rv1
axis2.gear.peak
axis2.gear.unitAngularVelocity
axis2.gear.unitTorque
axis2.gear.gear.useSupport
axis2.gear.gear.flange_a.phi
axis2.gear.gear.flange_a.der(phi)
axis2.gear.gear.flange_a.der(phi, 2)
axis2.gear.gear.flange_a.tau
axis2.gear.gear.phi_support
axis2.gear.gear.ratio
axis2.gear.spring.c
axis2.gear.spring.d
axis2.gear.spring.phi_rel0
axis2.gear.spring.phi_rel
axis2.gear.spring.der(phi_rel)
axis2.gear.spring.w_rel
axis2.gear.spring.der(w_rel)
axis2.gear.spring.phi_nominal
axis2.gear.spring.stateSelect
axis2.gear.spring.useHeatPort
axis2.gear.spring.lossPower
axis2.gear.spring.tau_c
axis2.gear.spring.tau_d
axis2.gear.bearingFriction.useSupport
axis2.gear.bearingFriction.phi_support
axis2.gear.bearingFriction.tau_pos[1, 1]
axis2.gear.bearingFriction.tau_pos[1, 2]
axis2.gear.bearingFriction.tau_pos[2, 1]
axis2.gear.bearingFriction.tau_pos[2, 2]
axis2.gear.bearingFriction.peak
axis2.gear.bearingFriction.w_small
axis2.gear.bearingFriction.tau0
axis2.gear.bearingFriction.tau0_max
axis2.gear.bearingFriction.free
axis2.gear.bearingFriction.sa
axis2.gear.bearingFriction.startForward
axis2.gear.bearingFriction.startBackward
axis2.gear.bearingFriction.locked
axis2.gear.bearingFriction.Unknown
axis2.gear.bearingFriction.Free
axis2.gear.bearingFriction.Forward
axis2.gear.bearingFriction.Stuck
axis2.gear.bearingFriction.Backward
axis2.gear.bearingFriction.mode
axis2.gear.bearingFriction.unitAngularAcceleration
axis2.gear.bearingFriction.unitTorque
axis2.gear.bearingFriction.useHeatPort
axis2.gear.bearingFriction.lossPower
axis2.gear.bearingFriction.phi
axis2.gear.bearingFriction.tau
axis2.gear.bearingFriction.w
axis2.gear.bearingFriction.der(w)
axis2.motor.J
axis2.motor.k
axis2.motor.w
axis2.motor.D
axis2.motor.w_max
axis2.motor.i_max
axis2.motor.Vs.p.v
axis2.motor.Vs.p.i
axis2.motor.Vs.n.v
axis2.motor.power.v1
axis2.motor.power.v2
axis2.motor.power.i1
axis2.motor.power.i2
axis2.motor.power.p1.i
axis2.motor.power.n1.i
axis2.motor.power.n2.v
axis2.motor.diff.v1
axis2.motor.diff.v2
axis2.motor.diff.i1
axis2.motor.diff.i2
axis2.motor.diff.p1.v
axis2.motor.diff.p1.i
axis2.motor.diff.n1.i
axis2.motor.diff.n2.v
axis2.motor.emf.useSupport
axis2.motor.emf.k
axis2.motor.emf.v
axis2.motor.emf.phi
axis2.motor.emf.tau
axis2.motor.emf.n.v
axis2.motor.emf.fixed.phi0
axis2.motor.La.v
axis2.motor.La.p.v
axis2.motor.La.i
axis2.motor.La.der(i)
axis2.motor.La.L
axis2.motor.Ra.R
axis2.motor.Ra.T_ref
axis2.motor.Ra.alpha
axis2.motor.Ra.v
axis2.motor.Ra.useHeatPort
axis2.motor.Ra.T
axis2.motor.Ra.LossPower
axis2.motor.Ra.R_actual
axis2.motor.Rd2.R
axis2.motor.Rd2.T_ref
axis2.motor.Rd2.alpha
axis2.motor.Rd2.v
axis2.motor.Rd2.useHeatPort
axis2.motor.Rd2.T
axis2.motor.Rd2.LossPower
axis2.motor.Rd2.R_actual
axis2.motor.C.v
axis2.motor.C.der(v)
axis2.motor.C.p.v
axis2.motor.C.p.i
axis2.motor.C.C
axis2.motor.OpI.v1
axis2.motor.OpI.i1
axis2.motor.OpI.p1.v
axis2.motor.OpI.p1.i
axis2.motor.OpI.n1.v
axis2.motor.OpI.n1.i
axis2.motor.OpI.n2.v
axis2.motor.Ri.R
axis2.motor.Ri.T_ref
axis2.motor.Ri.alpha
axis2.motor.Ri.n.v
axis2.motor.Ri.useHeatPort
axis2.motor.Ri.T
axis2.motor.Ri.LossPower
axis2.motor.Ri.R_actual
axis2.motor.Rd1.R
axis2.motor.Rd1.T_ref
axis2.motor.Rd1.alpha
axis2.motor.Rd1.v
axis2.motor.Rd1.useHeatPort
axis2.motor.Rd1.T
axis2.motor.Rd1.LossPower
axis2.motor.Rd1.R_actual
axis2.motor.Rp1.R
axis2.motor.Rp1.T_ref
axis2.motor.Rp1.alpha
axis2.motor.Rp1.v
axis2.motor.Rp1.p.i
axis2.motor.Rp1.useHeatPort
axis2.motor.Rp1.T
axis2.motor.Rp1.LossPower
axis2.motor.Rp1.R_actual
axis2.motor.Rp2.R
axis2.motor.Rp2.T_ref
axis2.motor.Rp2.alpha
axis2.motor.Rp2.n.v
axis2.motor.Rp2.useHeatPort
axis2.motor.Rp2.T
axis2.motor.Rp2.LossPower
axis2.motor.Rp2.R_actual
axis2.motor.Rd4.R
axis2.motor.Rd4.T_ref
axis2.motor.Rd4.alpha
axis2.motor.Rd4.p.i
axis2.motor.Rd4.n.v
axis2.motor.Rd4.useHeatPort
axis2.motor.Rd4.T
axis2.motor.Rd4.LossPower
axis2.motor.Rd4.R_actual
axis2.motor.hall2.p.v
axis2.motor.hall2.n.v
axis2.motor.Rd3.R
axis2.motor.Rd3.T_ref
axis2.motor.Rd3.alpha
axis2.motor.Rd3.v
axis2.motor.Rd3.useHeatPort
axis2.motor.Rd3.T
axis2.motor.Rd3.LossPower
axis2.motor.Rd3.R_actual
axis2.motor.g1.p.v
axis2.motor.g2.p.v
axis2.motor.g3.p.v
axis2.motor.g3.p.i
axis2.motor.hall1.p.v
axis2.motor.hall1.n.v
axis2.motor.g4.p.v
axis2.motor.g5.p.v
axis2.motor.phi.flange.tau
axis2.motor.speed.flange.tau
axis2.motor.Jmotor.J
axis2.motor.Jmotor.stateSelect
axis2.motor.convert1.k
axis2.motor.convert2.k
axis2.controller.kp
axis2.controller.ks
axis2.controller.Ts
axis2.controller.ratio
axis2.controller.gain1.k
axis2.controller.gain1.y
axis2.controller.PI.k
axis2.controller.PI.T
axis2.controller.PI.initType
axis2.controller.PI.x_start
axis2.controller.PI.y_start
axis2.controller.PI.u
axis2.controller.PI.x
axis2.controller.PI.der(x)
axis2.controller.feedback1.y
axis2.controller.P.k
axis2.controller.P.y
axis2.controller.add3.k1
axis2.controller.add3.k2
axis2.controller.add3.k3
axis2.controller.add3.u1
axis2.controller.gain2.k
axis2.angleSensor.flange.tau
axis2.speedSensor.flange.tau
axis2.accSensor.flange.tau
axis2.initializeFlange.use_phi_start
axis2.initializeFlange.use_w_start
axis2.initializeFlange.use_a_start
axis2.initializeFlange.stateSelect
axis2.initializeFlange.flange.tau
axis2.initializeFlange.set_phi_start.flange.tau
axis2.initializeFlange.set_w_start.flange.tau
axis2.initializeFlange.set_a_start.flange.tau
axis2.initializeFlange.set_flange_tau.flange.tau
axis2.const.k
axis2.c
axis2.cd
axis3.kp
axis3.ks
axis3.Ts
axis3.k
axis3.w
axis3.D
axis3.J
axis3.ratio
axis3.Rv0
axis3.Rv1
axis3.peak
axis3.gear.flange_a.tau
axis3.gear.i
axis3.gear.c
axis3.gear.d
axis3.gear.Rv0
axis3.gear.Rv1
axis3.gear.peak
axis3.gear.unitAngularVelocity
axis3.gear.unitTorque
axis3.gear.gear.useSupport
axis3.gear.gear.flange_a.phi
axis3.gear.gear.flange_a.der(phi)
axis3.gear.gear.flange_a.der(phi, 2)
axis3.gear.gear.flange_a.tau
axis3.gear.gear.phi_support
axis3.gear.gear.ratio
axis3.gear.spring.c
axis3.gear.spring.d
axis3.gear.spring.phi_rel0
axis3.gear.spring.phi_rel
axis3.gear.spring.der(phi_rel)
axis3.gear.spring.w_rel
axis3.gear.spring.der(w_rel)
axis3.gear.spring.phi_nominal
axis3.gear.spring.stateSelect
axis3.gear.spring.useHeatPort
axis3.gear.spring.lossPower
axis3.gear.spring.tau_c
axis3.gear.spring.tau_d
axis3.gear.bearingFriction.useSupport
axis3.gear.bearingFriction.phi_support
axis3.gear.bearingFriction.tau_pos[1, 1]
axis3.gear.bearingFriction.tau_pos[1, 2]
axis3.gear.bearingFriction.tau_pos[2, 1]
axis3.gear.bearingFriction.tau_pos[2, 2]
axis3.gear.bearingFriction.peak
axis3.gear.bearingFriction.w_small
axis3.gear.bearingFriction.tau0
axis3.gear.bearingFriction.tau0_max
axis3.gear.bearingFriction.free
axis3.gear.bearingFriction.sa
axis3.gear.bearingFriction.startForward
axis3.gear.bearingFriction.startBackward
axis3.gear.bearingFriction.locked
axis3.gear.bearingFriction.Unknown
axis3.gear.bearingFriction.Free
axis3.gear.bearingFriction.Forward
axis3.gear.bearingFriction.Stuck
axis3.gear.bearingFriction.Backward
axis3.gear.bearingFriction.mode
axis3.gear.bearingFriction.unitAngularAcceleration
axis3.gear.bearingFriction.unitTorque
axis3.gear.bearingFriction.useHeatPort
axis3.gear.bearingFriction.lossPower
axis3.gear.bearingFriction.phi
axis3.gear.bearingFriction.tau
axis3.gear.bearingFriction.w
axis3.gear.bearingFriction.der(w)
axis3.motor.J
axis3.motor.k
axis3.motor.w
axis3.motor.D
axis3.motor.w_max
axis3.motor.i_max
axis3.motor.Vs.p.v
axis3.motor.Vs.p.i
axis3.motor.Vs.n.v
axis3.motor.power.v1
axis3.motor.power.v2
axis3.motor.power.i1
axis3.motor.power.i2
axis3.motor.power.p1.i
axis3.motor.power.n1.i
axis3.motor.power.n2.v
axis3.motor.diff.v1
axis3.motor.diff.v2
axis3.motor.diff.i1
axis3.motor.diff.i2
axis3.motor.diff.p1.v
axis3.motor.diff.p1.i
axis3.motor.diff.n1.i
axis3.motor.diff.n2.v
axis3.motor.emf.useSupport
axis3.motor.emf.k
axis3.motor.emf.v
axis3.motor.emf.phi
axis3.motor.emf.tau
axis3.motor.emf.n.v
axis3.motor.emf.fixed.phi0
axis3.motor.La.v
axis3.motor.La.p.v
axis3.motor.La.i
axis3.motor.La.der(i)
axis3.motor.La.L
axis3.motor.Ra.R
axis3.motor.Ra.T_ref
axis3.motor.Ra.alpha
axis3.motor.Ra.v
axis3.motor.Ra.useHeatPort
axis3.motor.Ra.T
axis3.motor.Ra.LossPower
axis3.motor.Ra.R_actual
axis3.motor.Rd2.R
axis3.motor.Rd2.T_ref
axis3.motor.Rd2.alpha
axis3.motor.Rd2.v
axis3.motor.Rd2.useHeatPort
axis3.motor.Rd2.T
axis3.motor.Rd2.LossPower
axis3.motor.Rd2.R_actual
axis3.motor.C.v
axis3.motor.C.der(v)
axis3.motor.C.p.v
axis3.motor.C.p.i
axis3.motor.C.C
axis3.motor.OpI.v1
axis3.motor.OpI.i1
axis3.motor.OpI.p1.v
axis3.motor.OpI.p1.i
axis3.motor.OpI.n1.v
axis3.motor.OpI.n1.i
axis3.motor.OpI.n2.v
axis3.motor.Ri.R
axis3.motor.Ri.T_ref
axis3.motor.Ri.alpha
axis3.motor.Ri.n.v
axis3.motor.Ri.useHeatPort
axis3.motor.Ri.T
axis3.motor.Ri.LossPower
axis3.motor.Ri.R_actual
axis3.motor.Rd1.R
axis3.motor.Rd1.T_ref
axis3.motor.Rd1.alpha
axis3.motor.Rd1.v
axis3.motor.Rd1.useHeatPort
axis3.motor.Rd1.T
axis3.motor.Rd1.LossPower
axis3.motor.Rd1.R_actual
axis3.motor.Rp1.R
axis3.motor.Rp1.T_ref
axis3.motor.Rp1.alpha
axis3.motor.Rp1.v
axis3.motor.Rp1.p.i
axis3.motor.Rp1.useHeatPort
axis3.motor.Rp1.T
axis3.motor.Rp1.LossPower
axis3.motor.Rp1.R_actual
axis3.motor.Rp2.R
axis3.motor.Rp2.T_ref
axis3.motor.Rp2.alpha
axis3.motor.Rp2.n.v
axis3.motor.Rp2.useHeatPort
axis3.motor.Rp2.T
axis3.motor.Rp2.LossPower
axis3.motor.Rp2.R_actual
axis3.motor.Rd4.R
axis3.motor.Rd4.T_ref
axis3.motor.Rd4.alpha
axis3.motor.Rd4.p.i
axis3.motor.Rd4.n.v
axis3.motor.Rd4.useHeatPort
axis3.motor.Rd4.T
axis3.motor.Rd4.LossPower
axis3.motor.Rd4.R_actual
axis3.motor.hall2.p.v
axis3.motor.hall2.n.v
axis3.motor.Rd3.R
axis3.motor.Rd3.T_ref
axis3.motor.Rd3.alpha
axis3.motor.Rd3.v
axis3.motor.Rd3.useHeatPort
axis3.motor.Rd3.T
axis3.motor.Rd3.LossPower
axis3.motor.Rd3.R_actual
axis3.motor.g1.p.v
axis3.motor.g2.p.v
axis3.motor.g3.p.v
axis3.motor.g3.p.i
axis3.motor.hall1.p.v
axis3.motor.hall1.n.v
axis3.motor.g4.p.v
axis3.motor.g5.p.v
axis3.motor.phi.flange.tau
axis3.motor.speed.flange.tau
axis3.motor.Jmotor.J
axis3.motor.Jmotor.stateSelect
axis3.motor.convert1.k
axis3.motor.convert2.k
axis3.controller.kp
axis3.controller.ks
axis3.controller.Ts
axis3.controller.ratio
axis3.controller.gain1.k
axis3.controller.gain1.y
axis3.controller.PI.k
axis3.controller.PI.T
axis3.controller.PI.initType
axis3.controller.PI.x_start
axis3.controller.PI.y_start
axis3.controller.PI.u
axis3.controller.PI.x
axis3.controller.PI.der(x)
axis3.controller.feedback1.y
axis3.controller.P.k
axis3.controller.P.y
axis3.controller.add3.k1
axis3.controller.add3.k2
axis3.controller.add3.k3
axis3.controller.add3.u1
axis3.controller.gain2.k
axis3.angleSensor.flange.tau
axis3.speedSensor.flange.tau
axis3.accSensor.flange.tau
axis3.initializeFlange.use_phi_start
axis3.initializeFlange.use_w_start
axis3.initializeFlange.use_a_start
axis3.initializeFlange.stateSelect
axis3.initializeFlange.flange.tau
axis3.initializeFlange.set_phi_start.flange.tau
axis3.initializeFlange.set_w_start.flange.tau
axis3.initializeFlange.set_a_start.flange.tau
axis3.initializeFlange.set_flange_tau.flange.tau
axis3.const.k
axis3.c
axis3.cd
axis4.kp
axis4.ks
axis4.Ts
axis4.k
axis4.w
axis4.D
axis4.J
axis4.ratio
axis4.Rv0
axis4.Rv1
axis4.peak
axis4.gear.flange_a.tau
axis4.gear.i
axis4.gear.Rv0
axis4.gear.Rv1
axis4.gear.peak
axis4.gear.unitAngularVelocity
axis4.gear.unitTorque
axis4.gear.gear.useSupport
axis4.gear.gear.flange_b.tau
axis4.gear.gear.phi_support
axis4.gear.gear.ratio
axis4.gear.bearingFriction.useSupport
axis4.gear.bearingFriction.phi_support
axis4.gear.bearingFriction.tau_pos[1, 1]
axis4.gear.bearingFriction.tau_pos[1, 2]
axis4.gear.bearingFriction.tau_pos[2, 1]
axis4.gear.bearingFriction.tau_pos[2, 2]
axis4.gear.bearingFriction.peak
axis4.gear.bearingFriction.w_small
axis4.gear.bearingFriction.tau0
axis4.gear.bearingFriction.tau0_max
axis4.gear.bearingFriction.free
axis4.gear.bearingFriction.sa
axis4.gear.bearingFriction.startForward
axis4.gear.bearingFriction.startBackward
axis4.gear.bearingFriction.locked
axis4.gear.bearingFriction.Unknown
axis4.gear.bearingFriction.Free
axis4.gear.bearingFriction.Forward
axis4.gear.bearingFriction.Stuck
axis4.gear.bearingFriction.Backward
axis4.gear.bearingFriction.mode
axis4.gear.bearingFriction.unitAngularAcceleration
axis4.gear.bearingFriction.unitTorque
axis4.gear.bearingFriction.useHeatPort
axis4.gear.bearingFriction.lossPower
axis4.gear.bearingFriction.tau
axis4.motor.J
axis4.motor.k
axis4.motor.w
axis4.motor.D
axis4.motor.w_max
axis4.motor.i_max
axis4.motor.Vs.p.v
axis4.motor.Vs.p.i
axis4.motor.Vs.n.v
axis4.motor.power.v1
axis4.motor.power.v2
axis4.motor.power.i1
axis4.motor.power.i2
axis4.motor.power.p1.i
axis4.motor.power.n1.i
axis4.motor.power.n2.v
axis4.motor.diff.v1
axis4.motor.diff.v2
axis4.motor.diff.i1
axis4.motor.diff.i2
axis4.motor.diff.p1.v
axis4.motor.diff.p1.i
axis4.motor.diff.n1.i
axis4.motor.diff.n2.v
axis4.motor.emf.useSupport
axis4.motor.emf.k
axis4.motor.emf.v
axis4.motor.emf.phi
axis4.motor.emf.tau
axis4.motor.emf.n.v
axis4.motor.emf.fixed.phi0
axis4.motor.La.v
axis4.motor.La.p.v
axis4.motor.La.i
axis4.motor.La.der(i)
axis4.motor.La.L
axis4.motor.Ra.R
axis4.motor.Ra.T_ref
axis4.motor.Ra.alpha
axis4.motor.Ra.v
axis4.motor.Ra.useHeatPort
axis4.motor.Ra.T
axis4.motor.Ra.LossPower
axis4.motor.Ra.R_actual
axis4.motor.Rd2.R
axis4.motor.Rd2.T_ref
axis4.motor.Rd2.alpha
axis4.motor.Rd2.v
axis4.motor.Rd2.useHeatPort
axis4.motor.Rd2.T
axis4.motor.Rd2.LossPower
axis4.motor.Rd2.R_actual
axis4.motor.C.v
axis4.motor.C.der(v)
axis4.motor.C.p.v
axis4.motor.C.p.i
axis4.motor.C.C
axis4.motor.OpI.v1
axis4.motor.OpI.i1
axis4.motor.OpI.p1.v
axis4.motor.OpI.p1.i
axis4.motor.OpI.n1.v
axis4.motor.OpI.n1.i
axis4.motor.OpI.n2.v
axis4.motor.Ri.R
axis4.motor.Ri.T_ref
axis4.motor.Ri.alpha
axis4.motor.Ri.n.v
axis4.motor.Ri.useHeatPort
axis4.motor.Ri.T
axis4.motor.Ri.LossPower
axis4.motor.Ri.R_actual
axis4.motor.Rd1.R
axis4.motor.Rd1.T_ref
axis4.motor.Rd1.alpha
axis4.motor.Rd1.v
axis4.motor.Rd1.useHeatPort
axis4.motor.Rd1.T
axis4.motor.Rd1.LossPower
axis4.motor.Rd1.R_actual
axis4.motor.Rp1.R
axis4.motor.Rp1.T_ref
axis4.motor.Rp1.alpha
axis4.motor.Rp1.v
axis4.motor.Rp1.p.i
axis4.motor.Rp1.useHeatPort
axis4.motor.Rp1.T
axis4.motor.Rp1.LossPower
axis4.motor.Rp1.R_actual
axis4.motor.Rp2.R
axis4.motor.Rp2.T_ref
axis4.motor.Rp2.alpha
axis4.motor.Rp2.n.v
axis4.motor.Rp2.useHeatPort
axis4.motor.Rp2.T
axis4.motor.Rp2.LossPower
axis4.motor.Rp2.R_actual
axis4.motor.Rd4.R
axis4.motor.Rd4.T_ref
axis4.motor.Rd4.alpha
axis4.motor.Rd4.p.i
axis4.motor.Rd4.n.v
axis4.motor.Rd4.useHeatPort
axis4.motor.Rd4.T
axis4.motor.Rd4.LossPower
axis4.motor.Rd4.R_actual
axis4.motor.hall2.p.v
axis4.motor.hall2.n.v
axis4.motor.Rd3.R
axis4.motor.Rd3.T_ref
axis4.motor.Rd3.alpha
axis4.motor.Rd3.v
axis4.motor.Rd3.useHeatPort
axis4.motor.Rd3.T
axis4.motor.Rd3.LossPower
axis4.motor.Rd3.R_actual
axis4.motor.g1.p.v
axis4.motor.g2.p.v
axis4.motor.g3.p.v
axis4.motor.g3.p.i
axis4.motor.hall1.p.v
axis4.motor.hall1.n.v
axis4.motor.g4.p.v
axis4.motor.g5.p.v
axis4.motor.phi.flange.tau
axis4.motor.speed.flange.phi
axis4.motor.speed.flange.tau
axis4.motor.Jmotor.J
axis4.motor.Jmotor.stateSelect
axis4.motor.Jmotor.w
axis4.motor.Jmotor.der(w)
axis4.motor.convert1.k
axis4.motor.convert2.k
axis4.controller.kp
axis4.controller.ks
axis4.controller.Ts
axis4.controller.ratio
axis4.controller.gain1.k
axis4.controller.gain1.y
axis4.controller.PI.k
axis4.controller.PI.T
axis4.controller.PI.initType
axis4.controller.PI.x_start
axis4.controller.PI.y_start
axis4.controller.PI.u
axis4.controller.PI.x
axis4.controller.PI.der(x)
axis4.controller.feedback1.y
axis4.controller.P.k
axis4.controller.P.y
axis4.controller.add3.k1
axis4.controller.add3.k2
axis4.controller.add3.k3
axis4.controller.add3.u1
axis4.controller.gain2.k
axis4.angleSensor.flange.tau
axis4.speedSensor.flange.tau
axis4.accSensor.flange.tau
axis4.initializeFlange.use_phi_start
axis4.initializeFlange.use_w_start
axis4.initializeFlange.use_a_start
axis4.initializeFlange.stateSelect
axis4.initializeFlange.flange.tau
axis4.initializeFlange.set_phi_start.flange.tau
axis4.initializeFlange.set_w_start.flange.tau
axis4.initializeFlange.set_a_start.flange.tau
axis4.initializeFlange.set_flange_tau.flange.tau
axis4.const.k
axis5.kp
axis5.ks
axis5.Ts
axis5.k
axis5.w
axis5.D
axis5.J
axis5.ratio
axis5.Rv0
axis5.Rv1
axis5.peak
axis5.gear.flange_a.tau
axis5.gear.i
axis5.gear.Rv0
axis5.gear.Rv1
axis5.gear.peak
axis5.gear.unitAngularVelocity
axis5.gear.unitTorque
axis5.gear.gear.useSupport
axis5.gear.gear.flange_b.tau
axis5.gear.gear.phi_support
axis5.gear.gear.ratio
axis5.gear.bearingFriction.useSupport
axis5.gear.bearingFriction.phi_support
axis5.gear.bearingFriction.tau_pos[1, 1]
axis5.gear.bearingFriction.tau_pos[1, 2]
axis5.gear.bearingFriction.tau_pos[2, 1]
axis5.gear.bearingFriction.tau_pos[2, 2]
axis5.gear.bearingFriction.peak
axis5.gear.bearingFriction.w_small
axis5.gear.bearingFriction.tau0
axis5.gear.bearingFriction.tau0_max
axis5.gear.bearingFriction.free
axis5.gear.bearingFriction.sa
axis5.gear.bearingFriction.startForward
axis5.gear.bearingFriction.startBackward
axis5.gear.bearingFriction.locked
axis5.gear.bearingFriction.Unknown
axis5.gear.bearingFriction.Free
axis5.gear.bearingFriction.Forward
axis5.gear.bearingFriction.Stuck
axis5.gear.bearingFriction.Backward
axis5.gear.bearingFriction.mode
axis5.gear.bearingFriction.unitAngularAcceleration
axis5.gear.bearingFriction.unitTorque
axis5.gear.bearingFriction.useHeatPort
axis5.gear.bearingFriction.lossPower
axis5.gear.bearingFriction.tau
axis5.motor.J
axis5.motor.k
axis5.motor.w
axis5.motor.D
axis5.motor.w_max
axis5.motor.i_max
axis5.motor.Vs.p.v
axis5.motor.Vs.p.i
axis5.motor.Vs.n.v
axis5.motor.power.v1
axis5.motor.power.v2
axis5.motor.power.i1
axis5.motor.power.i2
axis5.motor.power.p1.i
axis5.motor.power.n1.i
axis5.motor.power.n2.v
axis5.motor.diff.v1
axis5.motor.diff.v2
axis5.motor.diff.i1
axis5.motor.diff.i2
axis5.motor.diff.p1.v
axis5.motor.diff.p1.i
axis5.motor.diff.n1.i
axis5.motor.diff.n2.v
axis5.motor.emf.useSupport
axis5.motor.emf.k
axis5.motor.emf.v
axis5.motor.emf.phi
axis5.motor.emf.tau
axis5.motor.emf.n.v
axis5.motor.emf.fixed.phi0
axis5.motor.La.v
axis5.motor.La.p.v
axis5.motor.La.i
axis5.motor.La.der(i)
axis5.motor.La.L
axis5.motor.Ra.R
axis5.motor.Ra.T_ref
axis5.motor.Ra.alpha
axis5.motor.Ra.v
axis5.motor.Ra.useHeatPort
axis5.motor.Ra.T
axis5.motor.Ra.LossPower
axis5.motor.Ra.R_actual
axis5.motor.Rd2.R
axis5.motor.Rd2.T_ref
axis5.motor.Rd2.alpha
axis5.motor.Rd2.v
axis5.motor.Rd2.useHeatPort
axis5.motor.Rd2.T
axis5.motor.Rd2.LossPower
axis5.motor.Rd2.R_actual
axis5.motor.C.v
axis5.motor.C.der(v)
axis5.motor.C.p.v
axis5.motor.C.p.i
axis5.motor.C.C
axis5.motor.OpI.v1
axis5.motor.OpI.i1
axis5.motor.OpI.p1.v
axis5.motor.OpI.p1.i
axis5.motor.OpI.n1.v
axis5.motor.OpI.n1.i
axis5.motor.OpI.n2.v
axis5.motor.Ri.R
axis5.motor.Ri.T_ref
axis5.motor.Ri.alpha
axis5.motor.Ri.n.v
axis5.motor.Ri.useHeatPort
axis5.motor.Ri.T
axis5.motor.Ri.LossPower
axis5.motor.Ri.R_actual
axis5.motor.Rd1.R
axis5.motor.Rd1.T_ref
axis5.motor.Rd1.alpha
axis5.motor.Rd1.v
axis5.motor.Rd1.useHeatPort
axis5.motor.Rd1.T
axis5.motor.Rd1.LossPower
axis5.motor.Rd1.R_actual
axis5.motor.Rp1.R
axis5.motor.Rp1.T_ref
axis5.motor.Rp1.alpha
axis5.motor.Rp1.v
axis5.motor.Rp1.p.i
axis5.motor.Rp1.useHeatPort
axis5.motor.Rp1.T
axis5.motor.Rp1.LossPower
axis5.motor.Rp1.R_actual
axis5.motor.Rp2.R
axis5.motor.Rp2.T_ref
axis5.motor.Rp2.alpha
axis5.motor.Rp2.n.v
axis5.motor.Rp2.useHeatPort
axis5.motor.Rp2.T
axis5.motor.Rp2.LossPower
axis5.motor.Rp2.R_actual
axis5.motor.Rd4.R
axis5.motor.Rd4.T_ref
axis5.motor.Rd4.alpha
axis5.motor.Rd4.p.i
axis5.motor.Rd4.n.v
axis5.motor.Rd4.useHeatPort
axis5.motor.Rd4.T
axis5.motor.Rd4.LossPower
axis5.motor.Rd4.R_actual
axis5.motor.hall2.p.v
axis5.motor.hall2.n.v
axis5.motor.Rd3.R
axis5.motor.Rd3.T_ref
axis5.motor.Rd3.alpha
axis5.motor.Rd3.v
axis5.motor.Rd3.useHeatPort
axis5.motor.Rd3.T
axis5.motor.Rd3.LossPower
axis5.motor.Rd3.R_actual
axis5.motor.g1.p.v
axis5.motor.g2.p.v
axis5.motor.g3.p.v
axis5.motor.g3.p.i
axis5.motor.hall1.p.v
axis5.motor.hall1.n.v
axis5.motor.g4.p.v
axis5.motor.g5.p.v
axis5.motor.phi.flange.tau
axis5.motor.speed.flange.phi
axis5.motor.speed.flange.tau
axis5.motor.Jmotor.J
axis5.motor.Jmotor.stateSelect
axis5.motor.Jmotor.w
axis5.motor.Jmotor.der(w)
axis5.motor.convert1.k
axis5.motor.convert2.k
axis5.controller.kp
axis5.controller.ks
axis5.controller.Ts
axis5.controller.ratio
axis5.controller.gain1.k
axis5.controller.gain1.y
axis5.controller.PI.k
axis5.controller.PI.T
axis5.controller.PI.initType
axis5.controller.PI.x_start
axis5.controller.PI.y_start
axis5.controller.PI.u
axis5.controller.PI.x
axis5.controller.PI.der(x)
axis5.controller.feedback1.y
axis5.controller.P.k
axis5.controller.P.y
axis5.controller.add3.k1
axis5.controller.add3.k2
axis5.controller.add3.k3
axis5.controller.add3.u1
axis5.controller.gain2.k
axis5.angleSensor.flange.tau
axis5.speedSensor.flange.tau
axis5.accSensor.flange.tau
axis5.initializeFlange.use_phi_start
axis5.initializeFlange.use_w_start
axis5.initializeFlange.use_a_start
axis5.initializeFlange.stateSelect
axis5.initializeFlange.flange.tau
axis5.initializeFlange.set_phi_start.flange.tau
axis5.initializeFlange.set_w_start.flange.tau
axis5.initializeFlange.set_a_start.flange.tau
axis5.initializeFlange.set_flange_tau.flange.tau
axis5.const.k
axis6.kp
axis6.ks
axis6.Ts
axis6.k
axis6.w
axis6.D
axis6.J
axis6.ratio
axis6.Rv0
axis6.Rv1
axis6.peak
axis6.gear.flange_a.tau
axis6.gear.i
axis6.gear.Rv0
axis6.gear.Rv1
axis6.gear.peak
axis6.gear.unitAngularVelocity
axis6.gear.unitTorque
axis6.gear.gear.useSupport
axis6.gear.gear.flange_b.tau
axis6.gear.gear.phi_support
axis6.gear.gear.ratio
axis6.gear.bearingFriction.useSupport
axis6.gear.bearingFriction.phi_support
axis6.gear.bearingFriction.tau_pos[1, 1]
axis6.gear.bearingFriction.tau_pos[1, 2]
axis6.gear.bearingFriction.tau_pos[2, 1]
axis6.gear.bearingFriction.tau_pos[2, 2]
axis6.gear.bearingFriction.peak
axis6.gear.bearingFriction.w_small
axis6.gear.bearingFriction.tau0
axis6.gear.bearingFriction.tau0_max
axis6.gear.bearingFriction.free
axis6.gear.bearingFriction.sa
axis6.gear.bearingFriction.startForward
axis6.gear.bearingFriction.startBackward
axis6.gear.bearingFriction.locked
axis6.gear.bearingFriction.Unknown
axis6.gear.bearingFriction.Free
axis6.gear.bearingFriction.Forward
axis6.gear.bearingFriction.Stuck
axis6.gear.bearingFriction.Backward
axis6.gear.bearingFriction.mode
axis6.gear.bearingFriction.unitAngularAcceleration
axis6.gear.bearingFriction.unitTorque
axis6.gear.bearingFriction.useHeatPort
axis6.gear.bearingFriction.lossPower
axis6.gear.bearingFriction.tau
axis6.motor.J
axis6.motor.k
axis6.motor.w
axis6.motor.D
axis6.motor.w_max
axis6.motor.i_max
axis6.motor.Vs.p.v
axis6.motor.Vs.p.i
axis6.motor.Vs.n.v
axis6.motor.power.v1
axis6.motor.power.v2
axis6.motor.power.i1
axis6.motor.power.i2
axis6.motor.power.p1.i
axis6.motor.power.n1.i
axis6.motor.power.n2.v
axis6.motor.diff.v1
axis6.motor.diff.v2
axis6.motor.diff.i1
axis6.motor.diff.i2
axis6.motor.diff.p1.v
axis6.motor.diff.p1.i
axis6.motor.diff.n1.i
axis6.motor.diff.n2.v
axis6.motor.emf.useSupport
axis6.motor.emf.k
axis6.motor.emf.v
axis6.motor.emf.phi
axis6.motor.emf.tau
axis6.motor.emf.n.v
axis6.motor.emf.fixed.phi0
axis6.motor.La.v
axis6.motor.La.p.v
axis6.motor.La.i
axis6.motor.La.der(i)
axis6.motor.La.L
axis6.motor.Ra.R
axis6.motor.Ra.T_ref
axis6.motor.Ra.alpha
axis6.motor.Ra.v
axis6.motor.Ra.useHeatPort
axis6.motor.Ra.T
axis6.motor.Ra.LossPower
axis6.motor.Ra.R_actual
axis6.motor.Rd2.R
axis6.motor.Rd2.T_ref
axis6.motor.Rd2.alpha
axis6.motor.Rd2.v
axis6.motor.Rd2.useHeatPort
axis6.motor.Rd2.T
axis6.motor.Rd2.LossPower
axis6.motor.Rd2.R_actual
axis6.motor.C.v
axis6.motor.C.der(v)
axis6.motor.C.p.v
axis6.motor.C.p.i
axis6.motor.C.C
axis6.motor.OpI.v1
axis6.motor.OpI.i1
axis6.motor.OpI.p1.v
axis6.motor.OpI.p1.i
axis6.motor.OpI.n1.v
axis6.motor.OpI.n1.i
axis6.motor.OpI.n2.v
axis6.motor.Ri.R
axis6.motor.Ri.T_ref
axis6.motor.Ri.alpha
axis6.motor.Ri.n.v
axis6.motor.Ri.useHeatPort
axis6.motor.Ri.T
axis6.motor.Ri.LossPower
axis6.motor.Ri.R_actual
axis6.motor.Rd1.R
axis6.motor.Rd1.T_ref
axis6.motor.Rd1.alpha
axis6.motor.Rd1.v
axis6.motor.Rd1.useHeatPort
axis6.motor.Rd1.T
axis6.motor.Rd1.LossPower
axis6.motor.Rd1.R_actual
axis6.motor.Rp1.R
axis6.motor.Rp1.T_ref
axis6.motor.Rp1.alpha
axis6.motor.Rp1.v
axis6.motor.Rp1.p.i
axis6.motor.Rp1.useHeatPort
axis6.motor.Rp1.T
axis6.motor.Rp1.LossPower
axis6.motor.Rp1.R_actual
axis6.motor.Rp2.R
axis6.motor.Rp2.T_ref
axis6.motor.Rp2.alpha
axis6.motor.Rp2.n.v
axis6.motor.Rp2.useHeatPort
axis6.motor.Rp2.T
axis6.motor.Rp2.LossPower
axis6.motor.Rp2.R_actual
axis6.motor.Rd4.R
axis6.motor.Rd4.T_ref
axis6.motor.Rd4.alpha
axis6.motor.Rd4.p.i
axis6.motor.Rd4.n.v
axis6.motor.Rd4.useHeatPort
axis6.motor.Rd4.T
axis6.motor.Rd4.LossPower
axis6.motor.Rd4.R_actual
axis6.motor.hall2.p.v
axis6.motor.hall2.n.v
axis6.motor.Rd3.R
axis6.motor.Rd3.T_ref
axis6.motor.Rd3.alpha
axis6.motor.Rd3.v
axis6.motor.Rd3.useHeatPort
axis6.motor.Rd3.T
axis6.motor.Rd3.LossPower
axis6.motor.Rd3.R_actual
axis6.motor.g1.p.v
axis6.motor.g2.p.v
axis6.motor.g3.p.v
axis6.motor.g3.p.i
axis6.motor.hall1.p.v
axis6.motor.hall1.n.v
axis6.motor.g4.p.v
axis6.motor.g5.p.v
axis6.motor.phi.flange.tau
axis6.motor.speed.flange.phi
axis6.motor.speed.flange.tau
axis6.motor.Jmotor.J
axis6.motor.Jmotor.stateSelect
axis6.motor.Jmotor.w
axis6.motor.Jmotor.der(w)
axis6.motor.convert1.k
axis6.motor.convert2.k
axis6.controller.kp
axis6.controller.ks
axis6.controller.Ts
axis6.controller.ratio
axis6.controller.gain1.k
axis6.controller.gain1.y
axis6.controller.PI.k
axis6.controller.PI.T
axis6.controller.PI.initType
axis6.controller.PI.x_start
axis6.controller.PI.y_start
axis6.controller.PI.u
axis6.controller.PI.x
axis6.controller.PI.der(x)
axis6.controller.feedback1.y
axis6.controller.P.k
axis6.controller.P.y
axis6.controller.add3.k1
axis6.controller.add3.k2
axis6.controller.add3.k3
axis6.controller.add3.u1
axis6.controller.gain2.k
axis6.angleSensor.flange.tau
axis6.speedSensor.flange.tau
axis6.accSensor.flange.tau
axis6.initializeFlange.use_phi_start
axis6.initializeFlange.use_w_start
axis6.initializeFlange.use_a_start
axis6.initializeFlange.stateSelect
axis6.initializeFlange.flange.tau
axis6.initializeFlange.set_phi_start.flange.tau
axis6.initializeFlange.set_w_start.flange.tau
axis6.initializeFlange.set_a_start.flange.tau
axis6.initializeFlange.set_flange_tau.flange.tau
axis6.const.k
controlBus.axisControlBus1.motion_ref
controlBus.axisControlBus1.angle_ref
controlBus.axisControlBus1.speed_ref
controlBus.axisControlBus1.acceleration_ref
controlBus.axisControlBus1.current_ref
controlBus.axisControlBus2.motion_ref
controlBus.axisControlBus2.angle_ref
controlBus.axisControlBus2.speed_ref
controlBus.axisControlBus2.acceleration_ref
controlBus.axisControlBus2.current_ref
controlBus.axisControlBus3.motion_ref
controlBus.axisControlBus3.angle_ref
controlBus.axisControlBus3.speed_ref
controlBus.axisControlBus3.acceleration_ref
controlBus.axisControlBus3.current_ref
controlBus.axisControlBus4.motion_ref
controlBus.axisControlBus4.angle_ref
controlBus.axisControlBus4.speed_ref
controlBus.axisControlBus4.acceleration_ref
controlBus.axisControlBus4.current_ref
controlBus.axisControlBus5.motion_ref
controlBus.axisControlBus5.angle_ref
controlBus.axisControlBus5.speed_ref
controlBus.axisControlBus5.acceleration_ref
controlBus.axisControlBus5.current_ref
controlBus.axisControlBus6.motion_ref
controlBus.axisControlBus6.angle_ref
controlBus.axisControlBus6.speed_ref
controlBus.axisControlBus6.acceleration_ref
controlBus.axisControlBus6.current_ref

double initialValue(4264,6)
 -1      15                       0                 1.7976931348623157E+308
  1   280   # mLoad
  0  1.0000000000000001E-01       0                       0                
  6   256   # rLoad[1]
  0  2.5000000000000000E-01       0                       0                
  6   256   # rLoad[2]
  0  1.0000000000000001E-01       0                       0                
  6   256   # rLoad[3]
 -1  9.8100000000000005E+00       0                       0                
  1   280   # g
  0       0                       0                       0                
  6   256   # refStartTime
 -1  5.0000000000000000E-01       0                       0                
  1   280   # refSwingTime
 -1     -60                       0                       0                
  1   280   # startAngle1
 -1      20                       0                       0                
  1   280   # startAngle2
 -1      90                       0                       0                
  1   280   # startAngle3
 -1       0                       0                       0                
  1   280   # startAngle4
 -1    -110                       0                       0                
  1   280   # startAngle5
 -1       0                       0                       0                
  1   280   # startAngle6
 -1      60                       0                       0                
  1   280   # endAngle1
 -1     -70                       0                       0                
  1   280   # endAngle2
 -1     -35                       0                       0                
  1   280   # endAngle3
 -1      45                       0                       0                
  1   280   # endAngle4
 -1     110                       0                       0                
  1   280   # endAngle5
 -1      45                       0                       0                
  1   280   # endAngle6
 -1       3                       0                       0                
  1   280   # refSpeedMax[1]
 -1  1.5000000000000000E+00       0                       0                
  1   280   # refSpeedMax[2]
 -1       5                       0                       0                
  1   280   # refSpeedMax[3]
 -1  3.1000000000000001E+00       0                       0                
  1   280   # refSpeedMax[4]
 -1  3.1000000000000001E+00       0                       0                
  1   280   # refSpeedMax[5]
 -1  4.0999999999999996E+00       0                       0                
  1   280   # refSpeedMax[6]
 -1      15                       0                       0                
  1   280   # refAccMax[1]
 -1      15                       0                       0                
  1   280   # refAccMax[2]
 -1      15                       0                       0                
  1   280   # refAccMax[3]
 -1      60                       0                       0                
  1   280   # refAccMax[4]
 -1      60                       0                       0                
  1   280   # refAccMax[5]
 -1      60                       0                       0                
  1   280   # refAccMax[6]
 -1       5                       0                       0                
  1   280   # kp1
 -1  5.0000000000000000E-01       0                       0                
  1   280   # ks1
 -1  5.0000000000000003E-02       0                       0                
  1   280   # Ts1
 -1       5                       0                       0                
  1   280   # kp2
 -1  5.0000000000000000E-01       0                       0                
  1   280   # ks2
 -1  5.0000000000000003E-02       0                       0                
  1   280   # Ts2
 -1       5                       0                       0                
  1   280   # kp3
 -1  5.0000000000000000E-01       0                       0                
  1   280   # ks3
 -1  5.0000000000000003E-02       0                       0                
  1   280   # Ts3
 -1       5                       0                       0                
  1   280   # kp4
 -1  5.0000000000000000E-01       0                       0                
  1   280   # ks4
 -1  5.0000000000000003E-02       0                       0                
  1   280   # Ts4
 -1       5                       0                       0                
  1   280   # kp5
 -1  5.0000000000000000E-01       0                       0                
  1   280   # ks5
 -1  5.0000000000000003E-02       0                       0                
  1   280   # Ts5
 -1       5                       0                       0                
  1   280   # kp6
 -1  5.0000000000000000E-01       0                       0                
  1   280   # ks6
 -1  5.0000000000000003E-02       0                       0                
  1   280   # Ts6
  0       0                       0                       0                
  6   260   # mechanics.world.frame_b.r_0[1]
  0       0                       0                       0                
  6   260   # mechanics.world.frame_b.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.world.frame_b.r_0[3]
  0       1                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.world.frame_b.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.world.frame_b.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.world.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.world.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.world.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.world.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.world.frame_b.t[3]
  0       1                       0                       0                
  6   257   # mechanics.world.enableAnimation
  0       0                       0                       0                
  6   257   # mechanics.world.animateWorld
  0       0                       0                       0                
  6   257   # mechanics.world.animateGravity
  0       0                       0                       0                
  6   257   # mechanics.world.animateGround
  0       2                       1                       3                
  6   258   # mechanics.world.gravityType
  0       0                       0                       0                
  6   256   # mechanics.world.g
  0       0                       0                       0                
  6   256   # mechanics.world.n[1]
  0      -1                       0                       0                
  6   256   # mechanics.world.n[2]
  0       0                       0                       0                
  6   256   # mechanics.world.n[3]
 -1  3.9860044180000000E+14       0                 1.7976931348623157E+308
  1   280   # mechanics.world.mu
 -1       1                       0                       0                
  1   281   # mechanics.world.driveTrainMechanics3D
  0  5.0000000000000000E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.world.axisLength
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.world.axisDiameter
  0       1                       0                       0                
  6   257   # mechanics.world.axisShowLabels
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_x[1]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_x[2]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_x[3]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_y[1]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_y[2]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_y[3]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_z[1]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_z[2]
  0       0                       0                     255                
  6   258   # mechanics.world.axisColor_z[3]
 -1       0                       0                       0                
  1   280   # mechanics.world.gravityArrowTail[1]
 -1       0                       0                       0                
  1   280   # mechanics.world.gravityArrowTail[2]
 -1       0                       0                       0                
  1   280   # mechanics.world.gravityArrowTail[3]
  0  2.5000000000000000E-01       0                       0                
  6   256   # mechanics.world.gravityArrowLength
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.world.gravityArrowDiameter
  0       0                       0                     255                
  6   258   # mechanics.world.gravityArrowColor[1]
  0     230                       0                     255                
  6   258   # mechanics.world.gravityArrowColor[2]
  0       0                       0                     255                
  6   258   # mechanics.world.gravityArrowColor[3]
 -1  1.2742000000000000E+07       0                 1.7976931348623157E+308
  1   280   # mechanics.world.gravitySphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.world.gravitySphereColor[1]
  0     230                       0                     255                
  6   258   # mechanics.world.gravitySphereColor[2]
  0       0                       0                     255                
  6   258   # mechanics.world.gravitySphereColor[3]
  0       1                       0                       0                
  6   256   # mechanics.world.groundAxis_u[1]
  0       0                       0                       0                
  6   256   # mechanics.world.groundAxis_u[2]
  0       0                       0                       0                
  6   256   # mechanics.world.groundAxis_u[3]
 -1       2                       0                       0                
  1   280   # mechanics.world.groundLength_u
  0       0                       0                       0                
  6   256   # mechanics.world.groundLength_v
  0     200                       0                     255                
  6   258   # mechanics.world.groundColor[1]
  0     200                       0                     255                
  6   258   # mechanics.world.groundColor[2]
  0     200                       0                     255                
  6   258   # mechanics.world.groundColor[3]
  0       1                       0                       0                
  6   256   # mechanics.world.nominalLength
  0  2.0000000000000001E-01       0                       0                
  6   256   # mechanics.world.defaultAxisLength
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.world.defaultJointLength
  0  5.0000000000000003E-02       0                       0                
  6   256   # mechanics.world.defaultJointWidth
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.world.defaultForceLength
  0  5.0000000000000003E-02       0                       0                
  6   256   # mechanics.world.defaultForceWidth
  0  1.1111111111111110E-01       0                       0                
  6   256   # mechanics.world.defaultBodyDiameter
 -1      20                       0                       0                
  1   280   # mechanics.world.defaultWidthFraction
  0  2.5000000000000001E-02       0                       0                
  6   256   # mechanics.world.defaultArrowDiameter
 -1      40                       0                       0                
  1   280   # mechanics.world.defaultFrameDiameterFraction
 -1  6.9999999999999996E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.world.defaultSpecularCoefficient
 -1    1000                       0                 1.7976931348623157E+308
  1   280   # mechanics.world.defaultN_to_m
 -1    1000                       0                 1.7976931348623157E+308
  1   280   # mechanics.world.defaultNm_to_m
  0       0                       0                       0                
  6  1282   # mechanics.world.ndim
  0       0                       0                       0                
  6  1282   # mechanics.world.ndim2
  0       0                       0                       0                
  6  1280   # mechanics.world.headLength
  0       0                       0                       0                
  6  1280   # mechanics.world.headWidth
  0       0                       0                       0                
  6  1280   # mechanics.world.lineLength
  0       0                       0                       0                
  6  1280   # mechanics.world.lineWidth
  0       0                       0                       0                
  6  1280   # mechanics.world.scaledLabel
  0  5.2500000000000002E-01       0                       0                
  6  1280   # mechanics.world.labelStart
  0       0                       0                       0                
  6  1280   # mechanics.world.gravityHeadLength
  0       0                       0                       0                
  6  1280   # mechanics.world.gravityHeadWidth
  0       0                       0                       0                
  6  1280   # mechanics.world.gravityLineLength
  0       0                       0                       0                
  6  1282   # mechanics.world.ndim_pointGravity
  0       1                       0                       0                
  6   257   # mechanics.animation
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.mLoad
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.rLoad[1]
  0  2.5000000000000000E-01       0                       0                
  6   256   # mechanics.rLoad[2]
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.rLoad[3]
  0       0                       0                       0                
  6   256   # mechanics.g
  0       0                       0                       0                
  6   260   # mechanics.r1.frame_a.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.r1.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.r1.frame_a.r_0[3]
  0       1                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.r1.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_a.t[3]
  0       0                       0                       0                
  6   260   # mechanics.r1.frame_b.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.r1.frame_b.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.r1.frame_b.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_b.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.r1.frame_b.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_b.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_b.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_b.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.r1.frame_b.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r1.frame_b.t[3]
  0       1                       0                       0                
  6   769   # mechanics.r1.useAxisFlange
  0       1                       0                       0                
  6   257   # mechanics.r1.animation
  0       0                       0                       0                
  6   256   # mechanics.r1.n[1]
  0       1                       0                       0                
  6   256   # mechanics.r1.n[2]
  0       0                       0                       0                
  6   256   # mechanics.r1.n[3]
  0  1.0000000000000001E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.r1.cylinderLength
  0  5.0000000000000003E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.r1.cylinderDiameter
  0     255                       0                     255                
  6   258   # mechanics.r1.cylinderColor[1]
  0       0                       0                     255                
  6   258   # mechanics.r1.cylinderColor[2]
  0       0                       0                     255                
  6   258   # mechanics.r1.cylinderColor[3]
  0       4                       1                       5                
  6   258   # mechanics.r1.stateSelect
 -1       0                       0                       0                
  2   272   # mechanics.r1.phi
  0       0                       0                       0                
  3  4352   # mechanics.r1.der(phi)
 -1       0                       0                       0                
  2   272   # mechanics.r1.w
  0       0                       0                       0                
  3   256   # mechanics.r1.der(w)
  0       0                       0                       0                
  6  1280   # mechanics.r1.e[1]
  0       1                       0                       0                
  6  1280   # mechanics.r1.e[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.e[3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.R_rel.w[3]
  0       1                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[3, 2]
  0       1                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.R.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.r[1]
  0  3.5099999999999998E-01       0                       0                
  6  1280   # mechanics.r1.cylinder.r[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.r[3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.r_shape[1]
  0 -5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r1.cylinder.r_shape[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.r_shape[3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.lengthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r1.cylinder.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r1.cylinder.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.widthDirection[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.r1.cylinder.length
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r1.cylinder.width
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r1.cylinder.height
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.extra
  0     255                       0                       0                
  6  1280   # mechanics.r1.cylinder.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.r1.cylinder.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.r1.cylinder.isURI
  0       1                       0                       0                
  6   768   # mechanics.r1.cylinder.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.n_z_aux[2]
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.n_z_aux[3]
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.e_x[1]
  0       1                       0                       0                
  6   768   # mechanics.r1.cylinder.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.e_x[3]
  0       1                       0                       0                
  6   768   # mechanics.r1.cylinder.e_y[1]
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.r1.cylinder.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.r1.cylinder.Form
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.rxvisobj[1]
  0       1                       0                       0                
  6  1792   # mechanics.r1.cylinder.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.rxvisobj[3]
  0       1                       0                       0                
  6  1792   # mechanics.r1.cylinder.ryvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.ryvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.ryvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.rvisobj[1]
  0  3.0099999999999999E-01       0                       0                
  6  1792   # mechanics.r1.cylinder.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.rvisobj[3]
  0  1.0000000000000001E-01       0                       0                
  6  1792   # mechanics.r1.cylinder.size[1]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r1.cylinder.size[2]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r1.cylinder.size[3]
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.Material
  0       0                       0                       0                
  6  1792   # mechanics.r1.cylinder.Extra
 -1       0                       0                       0                
  1  1304   # mechanics.r1.fixed.phi0
  0       0                       0                       0                
  6  1412   # mechanics.r1.fixed.flange.tau
  0       0                       0                       0                
  6   388   # mechanics.r1.support.tau
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.r2.frame_a.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.r2.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_a.t[3]
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.r2.frame_b.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.r2.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r2.frame_b.t[3]
  0       1                       0                       0                
  6   769   # mechanics.r2.useAxisFlange
  0       1                       0                       0                
  6   257   # mechanics.r2.animation
  0       1                       0                       0                
  6   256   # mechanics.r2.n[1]
  0       0                       0                       0                
  6   256   # mechanics.r2.n[2]
  0       0                       0                       0                
  6   256   # mechanics.r2.n[3]
  0  1.0000000000000001E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.r2.cylinderLength
  0  5.0000000000000003E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.r2.cylinderDiameter
  0     255                       0                     255                
  6   258   # mechanics.r2.cylinderColor[1]
  0       0                       0                     255                
  6   258   # mechanics.r2.cylinderColor[2]
  0       0                       0                     255                
  6   258   # mechanics.r2.cylinderColor[3]
  0       4                       1                       5                
  6   258   # mechanics.r2.stateSelect
 -1       0                       0                       0                
  2   272   # mechanics.r2.phi
  0       0                       0                       0                
  3  4352   # mechanics.r2.der(phi)
 -1       0                       0                       0                
  2   272   # mechanics.r2.w
  0       0                       0                       0                
  3   256   # mechanics.r2.der(w)
  0       1                       0                       0                
  6  1280   # mechanics.r2.e[1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.e[2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.e[3]
  0       1                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[2, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.R_rel.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.R.w[3]
  0  6.7500000000000004E-01       0                       0                
  6  1280   # mechanics.r2.cylinder.r[2]
  0 -5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r2.cylinder.r_shape[1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.r_shape[2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.r_shape[3]
  0       1                       0                       0                
  6  1280   # mechanics.r2.cylinder.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r2.cylinder.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.widthDirection[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.r2.cylinder.length
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r2.cylinder.width
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r2.cylinder.height
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.extra
  0     255                       0                       0                
  6  1280   # mechanics.r2.cylinder.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.r2.cylinder.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.r2.cylinder.isURI
  0       1                       0                       0                
  6   768   # mechanics.r2.cylinder.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.r2.cylinder.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.r2.cylinder.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.r2.cylinder.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.r2.cylinder.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.r2.cylinder.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.r2.cylinder.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.r2.cylinder.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.r2.cylinder.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.r2.cylinder.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.r2.cylinder.Form
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.ryvisobj[1]
  0       1                       0                       0                
  6  1792   # mechanics.r2.cylinder.ryvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.ryvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.rvisobj[1]
  0  6.7500000000000004E-01       0                       0                
  6  1792   # mechanics.r2.cylinder.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.rvisobj[3]
  0  1.0000000000000001E-01       0                       0                
  6  1792   # mechanics.r2.cylinder.size[1]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r2.cylinder.size[2]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r2.cylinder.size[3]
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.Material
  0       0                       0                       0                
  6  1792   # mechanics.r2.cylinder.Extra
 -1       0                       0                       0                
  1  1304   # mechanics.r2.fixed.phi0
  0       0                       0                       0                
  6  1412   # mechanics.r2.fixed.flange.tau
  0       0                       0                       0                
  6   388   # mechanics.r2.support.tau
  0       0                       0                       0                
  6   256   # mechanics.r3.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_a.t[3]
  0       0                       0                       0                
  6   256   # mechanics.r3.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r3.frame_b.t[3]
  0       1                       0                       0                
  6   769   # mechanics.r3.useAxisFlange
  0       1                       0                       0                
  6   257   # mechanics.r3.animation
  0       1                       0                       0                
  6   256   # mechanics.r3.n[1]
  0       0                       0                       0                
  6   256   # mechanics.r3.n[2]
  0       0                       0                       0                
  6   256   # mechanics.r3.n[3]
  0  1.0000000000000001E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.r3.cylinderLength
  0  5.0000000000000003E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.r3.cylinderDiameter
  0     255                       0                     255                
  6   258   # mechanics.r3.cylinderColor[1]
  0       0                       0                     255                
  6   258   # mechanics.r3.cylinderColor[2]
  0       0                       0                     255                
  6   258   # mechanics.r3.cylinderColor[3]
  0       4                       1                       5                
  6   258   # mechanics.r3.stateSelect
 -1       0                       0                       0                
  2   272   # mechanics.r3.phi
  0       0                       0                       0                
  3  4352   # mechanics.r3.der(phi)
 -1       0                       0                       0                
  2   272   # mechanics.r3.w
  0       0                       0                       0                
  3   256   # mechanics.r3.der(w)
  0       1                       0                       0                
  6  1280   # mechanics.r3.e[1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.e[2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.e[3]
  0       1                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[2, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.R_rel.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.R.T[1, 2]
  0 -5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r3.cylinder.r_shape[1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.r_shape[2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.r_shape[3]
  0       1                       0                       0                
  6  1280   # mechanics.r3.cylinder.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r3.cylinder.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.widthDirection[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.r3.cylinder.length
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r3.cylinder.width
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r3.cylinder.height
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.extra
  0     255                       0                       0                
  6  1280   # mechanics.r3.cylinder.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.r3.cylinder.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.r3.cylinder.isURI
  0       1                       0                       0                
  6   768   # mechanics.r3.cylinder.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.r3.cylinder.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.r3.cylinder.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.r3.cylinder.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.r3.cylinder.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.r3.cylinder.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.r3.cylinder.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.r3.cylinder.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.r3.cylinder.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.r3.cylinder.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.r3.cylinder.Form
  0       0                       0                       0                
  6  1792   # mechanics.r3.cylinder.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r3.cylinder.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.r3.cylinder.rvisobj[3]
  0  1.0000000000000001E-01       0                       0                
  6  1792   # mechanics.r3.cylinder.size[1]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r3.cylinder.size[2]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r3.cylinder.size[3]
  0       0                       0                       0                
  6  1792   # mechanics.r3.cylinder.Material
  0       0                       0                       0                
  6  1792   # mechanics.r3.cylinder.Extra
 -1       0                       0                       0                
  1  1304   # mechanics.r3.fixed.phi0
  0       0                       0                       0                
  6  1412   # mechanics.r3.fixed.flange.tau
  0       0                       0                       0                
  6   388   # mechanics.r3.support.tau
  0       0                       0                       0                
  6   256   # mechanics.r4.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_a.t[3]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r4.frame_b.t[3]
  0       1                       0                       0                
  6   769   # mechanics.r4.useAxisFlange
  0       1                       0                       0                
  6   257   # mechanics.r4.animation
  0       0                       0                       0                
  6   256   # mechanics.r4.n[1]
  0       1                       0                       0                
  6   256   # mechanics.r4.n[2]
  0       0                       0                       0                
  6   256   # mechanics.r4.n[3]
  0  1.0000000000000001E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.r4.cylinderLength
  0  5.0000000000000003E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.r4.cylinderDiameter
  0     255                       0                     255                
  6   258   # mechanics.r4.cylinderColor[1]
  0       0                       0                     255                
  6   258   # mechanics.r4.cylinderColor[2]
  0       0                       0                     255                
  6   258   # mechanics.r4.cylinderColor[3]
  0       4                       1                       5                
  6   258   # mechanics.r4.stateSelect
 -1       0                       0                       0                
  2   272   # mechanics.r4.phi
  0       0                       0                       0                
  3  4352   # mechanics.r4.der(phi)
 -1       0                       0                       0                
  2   272   # mechanics.r4.w
  0       0                       0                       0                
  3   256   # mechanics.r4.der(w)
  0       0                       0                       0                
  6  1280   # mechanics.r4.e[1]
  0       1                       0                       0                
  6  1280   # mechanics.r4.e[2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.e[3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.R_rel.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.R.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.r_shape[1]
  0 -5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r4.cylinder.r_shape[2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.r_shape[3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.lengthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r4.cylinder.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r4.cylinder.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.widthDirection[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.r4.cylinder.length
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r4.cylinder.width
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r4.cylinder.height
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.extra
  0     255                       0                       0                
  6  1280   # mechanics.r4.cylinder.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.r4.cylinder.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.r4.cylinder.isURI
  0       1                       0                       0                
  6   768   # mechanics.r4.cylinder.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.n_z_aux[2]
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.n_z_aux[3]
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.e_x[1]
  0       1                       0                       0                
  6   768   # mechanics.r4.cylinder.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.e_x[3]
  0       1                       0                       0                
  6   768   # mechanics.r4.cylinder.e_y[1]
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.r4.cylinder.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.r4.cylinder.Form
  0       0                       0                       0                
  6  1792   # mechanics.r4.cylinder.ryvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r4.cylinder.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.r4.cylinder.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r4.cylinder.rvisobj[3]
  0  1.0000000000000001E-01       0                       0                
  6  1792   # mechanics.r4.cylinder.size[1]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r4.cylinder.size[2]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r4.cylinder.size[3]
  0       0                       0                       0                
  6  1792   # mechanics.r4.cylinder.Material
  0       0                       0                       0                
  6  1792   # mechanics.r4.cylinder.Extra
 -1       0                       0                       0                
  1  1304   # mechanics.r4.fixed.phi0
  0       0                       0                       0                
  6  1412   # mechanics.r4.fixed.flange.tau
  0       0                       0                       0                
  6   388   # mechanics.r4.support.tau
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_a.t[3]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r5.frame_b.t[3]
  0       1                       0                       0                
  6   769   # mechanics.r5.useAxisFlange
  0       1                       0                       0                
  6   257   # mechanics.r5.animation
  0       1                       0                       0                
  6   256   # mechanics.r5.n[1]
  0       0                       0                       0                
  6   256   # mechanics.r5.n[2]
  0       0                       0                       0                
  6   256   # mechanics.r5.n[3]
  0  1.0000000000000001E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.r5.cylinderLength
  0  5.0000000000000003E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.r5.cylinderDiameter
  0     255                       0                     255                
  6   258   # mechanics.r5.cylinderColor[1]
  0       0                       0                     255                
  6   258   # mechanics.r5.cylinderColor[2]
  0       0                       0                     255                
  6   258   # mechanics.r5.cylinderColor[3]
  0       4                       1                       5                
  6   258   # mechanics.r5.stateSelect
 -1       0                       0                       0                
  2   272   # mechanics.r5.phi
  0       0                       0                       0                
  3  4352   # mechanics.r5.der(phi)
 -1       0                       0                       0                
  2   272   # mechanics.r5.w
  0       0                       0                       0                
  3   256   # mechanics.r5.der(w)
  0       1                       0                       0                
  6  1280   # mechanics.r5.e[1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.e[2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.e[3]
  0       1                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[2, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.R_rel.w[3]
  0 -5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r5.cylinder.r_shape[1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.r_shape[2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.r_shape[3]
  0       1                       0                       0                
  6  1280   # mechanics.r5.cylinder.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r5.cylinder.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.widthDirection[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.r5.cylinder.length
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r5.cylinder.width
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r5.cylinder.height
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.extra
  0     255                       0                       0                
  6  1280   # mechanics.r5.cylinder.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.r5.cylinder.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.r5.cylinder.isURI
  0       1                       0                       0                
  6   768   # mechanics.r5.cylinder.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.r5.cylinder.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.r5.cylinder.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.r5.cylinder.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.r5.cylinder.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.r5.cylinder.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.r5.cylinder.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.r5.cylinder.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.r5.cylinder.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.r5.cylinder.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.r5.cylinder.Form
  0       0                       0                       0                
  6  1792   # mechanics.r5.cylinder.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.r5.cylinder.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r5.cylinder.rvisobj[3]
  0  1.0000000000000001E-01       0                       0                
  6  1792   # mechanics.r5.cylinder.size[1]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r5.cylinder.size[2]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r5.cylinder.size[3]
  0       0                       0                       0                
  6  1792   # mechanics.r5.cylinder.Material
  0       0                       0                       0                
  6  1792   # mechanics.r5.cylinder.Extra
 -1       0                       0                       0                
  1  1304   # mechanics.r5.fixed.phi0
  0       0                       0                       0                
  6  1412   # mechanics.r5.fixed.flange.tau
  0       0                       0                       0                
  6   388   # mechanics.r5.support.tau
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_a.t[3]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.r6.frame_b.t[3]
  0       1                       0                       0                
  6   769   # mechanics.r6.useAxisFlange
  0       1                       0                       0                
  6   257   # mechanics.r6.animation
  0       0                       0                       0                
  6   256   # mechanics.r6.n[1]
  0       1                       0                       0                
  6   256   # mechanics.r6.n[2]
  0       0                       0                       0                
  6   256   # mechanics.r6.n[3]
  0  1.0000000000000001E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.r6.cylinderLength
  0  5.0000000000000003E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.r6.cylinderDiameter
  0     255                       0                     255                
  6   258   # mechanics.r6.cylinderColor[1]
  0       0                       0                     255                
  6   258   # mechanics.r6.cylinderColor[2]
  0       0                       0                     255                
  6   258   # mechanics.r6.cylinderColor[3]
  0       4                       1                       5                
  6   258   # mechanics.r6.stateSelect
 -1       0                       0                       0                
  2   272   # mechanics.r6.phi
  0       0                       0                       0                
  3  4352   # mechanics.r6.der(phi)
 -1       0                       0                       0                
  2   272   # mechanics.r6.w
  0       0                       0                       0                
  3   256   # mechanics.r6.der(w)
  0       0                       0                       0                
  6  1280   # mechanics.r6.e[1]
  0       1                       0                       0                
  6  1280   # mechanics.r6.e[2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.e[3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.R_rel.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.r_shape[1]
  0 -5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r6.cylinder.r_shape[2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.r_shape[3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.lengthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r6.cylinder.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.r6.cylinder.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.widthDirection[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.r6.cylinder.length
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r6.cylinder.width
  0  5.0000000000000003E-02       0                       0                
  6  1280   # mechanics.r6.cylinder.height
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.extra
  0     255                       0                       0                
  6  1280   # mechanics.r6.cylinder.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.r6.cylinder.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.r6.cylinder.isURI
  0       1                       0                       0                
  6   768   # mechanics.r6.cylinder.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.n_z_aux[2]
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.n_z_aux[3]
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.e_x[1]
  0       1                       0                       0                
  6   768   # mechanics.r6.cylinder.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.e_x[3]
  0       1                       0                       0                
  6   768   # mechanics.r6.cylinder.e_y[1]
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.r6.cylinder.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.r6.cylinder.Form
  0       0                       0                       0                
  6  1792   # mechanics.r6.cylinder.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.r6.cylinder.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.r6.cylinder.rvisobj[3]
  0  1.0000000000000001E-01       0                       0                
  6  1792   # mechanics.r6.cylinder.size[1]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r6.cylinder.size[2]
  0  5.0000000000000003E-02       0                       0                
  6  1792   # mechanics.r6.cylinder.size[3]
  0       0                       0                       0                
  6  1792   # mechanics.r6.cylinder.Material
  0       0                       0                       0                
  6  1792   # mechanics.r6.cylinder.Extra
 -1       0                       0                       0                
  1  1304   # mechanics.r6.fixed.phi0
  0       0                       0                       0                
  6  1412   # mechanics.r6.fixed.flange.tau
  0       0                       0                       0                
  6   388   # mechanics.r6.support.tau
  0       0                       0                       0                
  6   260   # mechanics.b0.frame_a.r_0[1]
  0       0                       0                       0                
  6   260   # mechanics.b0.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b0.frame_a.r_0[3]
  0       1                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.b0.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_a.R.w[3]
  0       0                       0                       0                
  6   260   # mechanics.b0.frame_b.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.b0.frame_b.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b0.frame_b.r_0[3]
  0       1                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.b0.frame_b.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frame_b.R.w[3]
  0       1                       0                       0                
  6   257   # mechanics.b0.animation
  0       0                       0                       0                
  6   257   # mechanics.b0.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b0.r[1]
  0  3.5099999999999998E-01       0                       0                
  6   256   # mechanics.b0.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.r[3]
 -1       0                       0                       0                
  1   280   # mechanics.b0.r_CM[1]
 -1       0                       0                       0                
  1   280   # mechanics.b0.r_CM[2]
 -1       0                       0                       0                
  1   280   # mechanics.b0.r_CM[3]
 -1       1                       0                 1.7976931348623157E+308
  1   280   # mechanics.b0.m
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b0.I_11
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b0.I_22
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b0.I_33
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b0.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b0.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b0.I_32
  0       0                       0                       0                
  6   256   # mechanics.b0.r_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.der(r_0[1])
  0       0                       0                       0                
  6   256   # mechanics.b0.der(r_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b0.der(r_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b0.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.v_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.der(v_0[1])
  0       0                       0                       0                
  6   256   # mechanics.b0.der(v_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b0.der(v_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b0.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b0.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b0.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b0.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b0.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b0.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b0.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b0.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b0.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b0.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b0.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b0.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b0.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b0.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b0.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b0.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b0.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b0.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.widthDirection[3]
 -1  2.2500000000000001E-01       0                       0                
  1   280   # mechanics.b0.length
 -1  2.9999999999999999E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b0.width
 -1  2.9999999999999999E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b0.height
 -1       0                       0                       0                
  1   280   # mechanics.b0.extra
  0       0                       0                     255                
  6   258   # mechanics.b0.color[1]
  0       0                       0                     255                
  6   258   # mechanics.b0.color[2]
  0     255                       0                     255                
  6   258   # mechanics.b0.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b0.sphereColor[1]
  0       0                       0                     255                
  6   258   # mechanics.b0.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b0.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b0.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b0.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b0.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b0.sequence_angleStates[3]
  0       0                       0                       0                
  6   260   # mechanics.b0.frameTranslation.frame_a.r_0[1]
  0       0                       0                       0                
  6   260   # mechanics.b0.frameTranslation.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b0.frameTranslation.frame_a.r_0[3]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b0.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b0.frameTranslation.frame_a.t[3]
  0       0                       0                       0                
  6   260   # mechanics.b0.frameTranslation.frame_b.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.b0.frameTranslation.frame_b.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b0.frameTranslation.frame_b.r_0[3]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.frame_b.R.w[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.r[1]
  0  3.5099999999999998E-01       0                       0                
  6   256   # mechanics.b0.frameTranslation.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.lengthDirection[1]
  0  3.5099999999999998E-01       0                       0                
  6   256   # mechanics.b0.frameTranslation.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b0.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.frameTranslation.widthDirection[3]
  0  3.5099999999999998E-01       0                       0                
  6   256   # mechanics.b0.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b0.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b0.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b0.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b0.frameTranslation.color[3]
  0       0                       0                       0                
  6   260   # mechanics.b0.body.frame_a.r_0[1]
  0       0                       0                       0                
  6   260   # mechanics.b0.body.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b0.body.frame_a.r_0[3]
  0       0                       0                       0                
  6   260   # mechanics.b0.body.frame_a.der(r_0[1])
  0       0                       0                       0                
  6   260   # mechanics.b0.body.frame_a.der(r_0[2])
  0       0                       0                       0                
  6   260   # mechanics.b0.body.frame_a.der(r_0[3])
  0       1                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[3, 2]
  0       1                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b0.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b0.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b0.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b0.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b0.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b0.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b0.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b0.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b0.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b0.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.b0.body.r_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.v_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.der(v_0[1])
  0       0                       0                       0                
  6   256   # mechanics.b0.body.der(v_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b0.body.der(v_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b0.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b0.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b0.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b0.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b0.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b0.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b0.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b0.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b0.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b0.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b0.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b0.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b0.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b0.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b0.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b0.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b0.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b0.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b0.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.w_a[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.w_a[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.w_a[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.der(w_a[1])
  0       0                       0                       0                
  6   256   # mechanics.b0.body.der(w_a[2])
  0       0                       0                       0                
  6   256   # mechanics.b0.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b0.body.z_a[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.z_a[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.z_a[3]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b0.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b0.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.body.phi_dd[3]
  0       1                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[1, 1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[1, 3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[3, 1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[3, 2]
  0       1                       0                       0                
  6  1280   # mechanics.b0.shape1.R.T[3, 3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.w[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.R.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.r[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.r[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.r[3]
  0       1                       0                       0                
  6  1280   # mechanics.b0.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b0.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.widthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.b0.shape1.color[2]
  0     255                       0                       0                
  6  1280   # mechanics.b0.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b0.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b0.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b0.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b0.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b0.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b0.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b0.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b0.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b0.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b0.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b0.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b0.shape1.Form
  0       1                       0                       0                
  6  1792   # mechanics.b0.shape1.rxvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b0.shape1.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b0.shape1.rxvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b0.shape1.ryvisobj[1]
  0       1                       0                       0                
  6  1792   # mechanics.b0.shape1.ryvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b0.shape1.ryvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b0.shape1.Material
  0       0                       0                       0                
  6   260   # mechanics.b1.frame_a.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.b1.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b1.frame_a.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b1.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_a.R.w[3]
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.b1.frame_b.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_b.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b1.frame_b.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_b.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_b.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_b.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frame_b.R.w[3]
  0       1                       0                       0                
  6   257   # mechanics.b1.animation
  0       0                       0                       0                
  6   257   # mechanics.b1.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b1.r[1]
  0  3.2400000000000001E-01       0                       0                
  6   256   # mechanics.b1.r[2]
  0  2.9999999999999999E-01       0                       0                
  6   256   # mechanics.b1.r[3]
 -1       0                       0                       0                
  1   280   # mechanics.b1.r_CM[1]
 -1       0                       0                       0                
  1   280   # mechanics.b1.r_CM[2]
 -1       0                       0                       0                
  1   280   # mechanics.b1.r_CM[3]
 -1       1                       0                 1.7976931348623157E+308
  1   280   # mechanics.b1.m
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b1.I_11
 -1  1.1599999999999999E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b1.I_22
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b1.I_33
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b1.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b1.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b1.I_32
  0       0                       0                       0                
  6   256   # mechanics.b1.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   256   # mechanics.b1.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.der(r_0[1])
  0       0                       0                       0                
  6   256   # mechanics.b1.der(r_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b1.der(r_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b1.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.v_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.der(v_0[1])
  0       0                       0                       0                
  6   256   # mechanics.b1.der(v_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b1.der(v_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b1.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b1.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b1.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b1.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b1.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b1.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b1.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b1.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b1.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b1.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b1.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b1.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b1.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b1.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b1.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b1.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b1.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b1.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.widthDirection[3]
 -1  2.5000000000000000E-01       0                       0                
  1   280   # mechanics.b1.length
 -1  1.4999999999999999E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b1.width
 -1  2.0000000000000001E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b1.height
 -1       0                       0                       0                
  1   280   # mechanics.b1.extra
  0     255                       0                     255                
  6   258   # mechanics.b1.color[1]
  0       0                       0                     255                
  6   258   # mechanics.b1.color[2]
  0       0                       0                     255                
  6   258   # mechanics.b1.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.sphereDiameter
  0     255                       0                     255                
  6   258   # mechanics.b1.sphereColor[1]
  0       0                       0                     255                
  6   258   # mechanics.b1.sphereColor[2]
  0       0                       0                     255                
  6   258   # mechanics.b1.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b1.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b1.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b1.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b1.sequence_angleStates[3]
  0       0                       0                       0                
  6   260   # mechanics.b1.frameTranslation.frame_a.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.b1.frameTranslation.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b1.frameTranslation.frame_a.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b1.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b1.frameTranslation.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b1.frameTranslation.frame_a.t[3]
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.b1.frameTranslation.frame_b.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.frame_b.R.w[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.r[1]
  0  3.2400000000000001E-01       0                       0                
  6   256   # mechanics.b1.frameTranslation.r[2]
  0  2.9999999999999999E-01       0                       0                
  6   256   # mechanics.b1.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.lengthDirection[1]
  0  3.2400000000000001E-01       0                       0                
  6   256   # mechanics.b1.frameTranslation.lengthDirection[2]
  0  2.9999999999999999E-01       0                       0                
  6   256   # mechanics.b1.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b1.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.frameTranslation.widthDirection[3]
  0  4.4156086783137838E-01       0                       0                
  6   256   # mechanics.b1.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b1.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b1.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b1.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b1.frameTranslation.color[3]
  0       0                       0                       0                
  6   260   # mechanics.b1.body.frame_a.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   260   # mechanics.b1.body.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b1.body.frame_a.r_0[3]
  0       0                       0                       0                
  6   260   # mechanics.b1.body.frame_a.der(r_0[1])
  0       0                       0                       0                
  6   260   # mechanics.b1.body.frame_a.der(r_0[2])
  0       0                       0                       0                
  6   260   # mechanics.b1.body.frame_a.der(r_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[2, 1]
  0       1                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b1.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b1.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b1.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b1.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b1.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b1.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b1.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b1.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b1.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b1.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.b1.body.r_0[1]
  0  3.5099999999999998E-01       0                       0                
  6   256   # mechanics.b1.body.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.v_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.der(v_0[1])
  0       0                       0                       0                
  6   256   # mechanics.b1.body.der(v_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b1.body.der(v_0[3])
  0       0                       0                       0                
  6   256   # mechanics.b1.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b1.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b1.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b1.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b1.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b1.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b1.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b1.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b1.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b1.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b1.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b1.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b1.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b1.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b1.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b1.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b1.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b1.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b1.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.w_a[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.w_a[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.der(w_a[1])
  0       0                       0                       0                
  6   256   # mechanics.b1.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b1.body.z_a[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.z_a[3]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b1.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b1.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.body.phi_dd[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.R.T[1, 2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.R.T[2, 1]
  0       1                       0                       0                
  6  1280   # mechanics.b1.shape1.R.T[2, 2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.R.T[2, 3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.R.T[3, 2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.R.w[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.R.w[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.r[1]
  0  3.5099999999999998E-01       0                       0                
  6  1280   # mechanics.b1.shape1.r[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.r[3]
  0       1                       0                       0                
  6  1280   # mechanics.b1.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b1.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.widthDirection[3]
  0     255                       0                       0                
  6  1280   # mechanics.b1.shape1.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.b1.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b1.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b1.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b1.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b1.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b1.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b1.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b1.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b1.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b1.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b1.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b1.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b1.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.ryvisobj[1]
  0       1                       0                       0                
  6  1792   # mechanics.b1.shape1.ryvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.ryvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b1.shape1.Material
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.b2.frame_a.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frame_b.R.T[1, 2]
  0       1                       0                       0                
  6   257   # mechanics.b2.animation
  0       0                       0                       0                
  6   257   # mechanics.b2.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b2.r[1]
  0  6.5000000000000002E-01       0                       0                
  6   256   # mechanics.b2.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.r[3]
 -1  1.7199999999999999E-01       0                       0                
  1   280   # mechanics.b2.r_CM[1]
 -1  2.0499999999999999E-01       0                       0                
  1   280   # mechanics.b2.r_CM[2]
 -1       0                       0                       0                
  1   280   # mechanics.b2.r_CM[3]
 -1  5.6500000000000000E+01       0                 1.7976931348623157E+308
  1   280   # mechanics.b2.m
 -1  2.5800000000000001E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b2.I_11
 -1  6.4000000000000001E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b2.I_22
 -1  2.7300000000000000E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b2.I_33
 -1 -4.6000000000000002E-01 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b2.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b2.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b2.I_32
  0       0                       0                       0                
  6   256   # mechanics.b2.r_0[1]
  0  6.7500000000000004E-01       0                       0                
  6   256   # mechanics.b2.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.der(r_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b2.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.v_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.der(v_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b2.a_0[2]
  0       0                       0                       0                
  6   257   # mechanics.b2.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b2.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b2.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b2.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b2.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b2.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b2.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b2.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b2.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b2.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b2.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b2.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b2.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b2.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b2.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b2.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b2.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b2.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.widthDirection[3]
 -1  5.0000000000000000E-01       0                       0                
  1   280   # mechanics.b2.length
 -1  2.0000000000000001E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b2.width
 -1  1.4999999999999999E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b2.height
 -1       0                       0                       0                
  1   280   # mechanics.b2.extra
  0     255                       0                     255                
  6   258   # mechanics.b2.color[1]
  0     178                       0                     255                
  6   258   # mechanics.b2.color[2]
  0       0                       0                     255                
  6   258   # mechanics.b2.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.sphereDiameter
  0     255                       0                     255                
  6   258   # mechanics.b2.sphereColor[1]
  0     178                       0                     255                
  6   258   # mechanics.b2.sphereColor[2]
  0       0                       0                     255                
  6   258   # mechanics.b2.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b2.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b2.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b2.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b2.sequence_angleStates[3]
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.b2.frameTranslation.frame_a.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b2.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b2.frameTranslation.frame_a.t[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   257   # mechanics.b2.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.r[1]
  0  6.5000000000000002E-01       0                       0                
  6   256   # mechanics.b2.frameTranslation.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.lengthDirection[1]
  0  6.5000000000000002E-01       0                       0                
  6   256   # mechanics.b2.frameTranslation.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b2.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.frameTranslation.widthDirection[3]
  0  6.5000000000000002E-01       0                       0                
  6   256   # mechanics.b2.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b2.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b2.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b2.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b2.frameTranslation.color[3]
  0  6.7500000000000004E-01       0                       0                
  6   260   # mechanics.b2.body.frame_a.r_0[2]
  0       0                       0                       0                
  6   260   # mechanics.b2.body.frame_a.der(r_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b2.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b2.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b2.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b2.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b2.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b2.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b2.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b2.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b2.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b2.body.I_32
  0  6.7500000000000004E-01       0                       0                
  6   256   # mechanics.b2.body.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.der(v_0[2])
  0       0                       0                       0                
  6   256   # mechanics.b2.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b2.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b2.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b2.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b2.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b2.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b2.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b2.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b2.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b2.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b2.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b2.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b2.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b2.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b2.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b2.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b2.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b2.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b2.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.der(w_a[2])
  0       0                       0                       0                
  6   256   # mechanics.b2.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b2.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b2.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b2.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.body.phi_dd[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.shape1.R.T[1, 2]
  0  6.7500000000000004E-01       0                       0                
  6  1280   # mechanics.b2.shape1.r[2]
  0       1                       0                       0                
  6  1280   # mechanics.b2.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b2.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b2.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b2.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.shape1.widthDirection[3]
  0     255                       0                       0                
  6  1280   # mechanics.b2.shape1.color[1]
  0     178                       0                       0                
  6  1280   # mechanics.b2.shape1.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.b2.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b2.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b2.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b2.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b2.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b2.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b2.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b2.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b2.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b2.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b2.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b2.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b2.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.b2.shape1.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b2.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b2.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b2.shape1.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b2.shape1.Material
  0       0                       0                       0                
  6   256   # mechanics.b3.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frame_b.R.T[1, 2]
  0       1                       0                       0                
  6   257   # mechanics.b3.animation
  0       0                       0                       0                
  6   257   # mechanics.b3.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b3.r[1]
  0  4.1399999999999998E-01       0                       0                
  6   256   # mechanics.b3.r[2]
  0 -1.5500000000000000E-01       0                       0                
  6   256   # mechanics.b3.r[3]
 -1  6.4000000000000001E-02       0                       0                
  1   280   # mechanics.b3.r_CM[1]
 -1 -3.4000000000000002E-02       0                       0                
  1   280   # mechanics.b3.r_CM[2]
 -1       0                       0                       0                
  1   280   # mechanics.b3.r_CM[3]
 -1  2.6399999999999999E+01       0                 1.7976931348623157E+308
  1   280   # mechanics.b3.m
 -1  2.7900000000000003E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b3.I_11
 -1  2.4500000000000000E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b3.I_22
 -1  4.1299999999999998E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b3.I_33
 -1 -7.0000000000000007E-02 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b3.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b3.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b3.I_32
  0       0                       0                       0                
  6   256   # mechanics.b3.r_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.v_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b3.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b3.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b3.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b3.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b3.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b3.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b3.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b3.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b3.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b3.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b3.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b3.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b3.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b3.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b3.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b3.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b3.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.widthDirection[3]
 -1  1.4999999999999999E-01       0                       0                
  1   280   # mechanics.b3.length
 -1  1.4999999999999999E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b3.width
 -1  1.4999999999999999E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b3.height
 -1       0                       0                       0                
  1   280   # mechanics.b3.extra
  0     255                       0                     255                
  6   258   # mechanics.b3.color[1]
  0       0                       0                     255                
  6   258   # mechanics.b3.color[2]
  0       0                       0                     255                
  6   258   # mechanics.b3.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.sphereDiameter
  0     255                       0                     255                
  6   258   # mechanics.b3.sphereColor[1]
  0       0                       0                     255                
  6   258   # mechanics.b3.sphereColor[2]
  0       0                       0                     255                
  6   258   # mechanics.b3.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b3.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b3.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b3.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b3.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b3.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b3.frameTranslation.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b3.frameTranslation.frame_a.t[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.frame_b.R.T[1, 2]
  0       0                       0                       0                
  6   257   # mechanics.b3.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.r[1]
  0  4.1399999999999998E-01       0                       0                
  6   256   # mechanics.b3.frameTranslation.r[2]
  0 -1.5500000000000000E-01       0                       0                
  6   256   # mechanics.b3.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.lengthDirection[1]
  0  4.1399999999999998E-01       0                       0                
  6   256   # mechanics.b3.frameTranslation.lengthDirection[2]
  0 -1.5500000000000000E-01       0                       0                
  6   256   # mechanics.b3.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b3.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.frameTranslation.widthDirection[3]
  0  4.4206447493550077E-01       0                       0                
  6   256   # mechanics.b3.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b3.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b3.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b3.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b3.frameTranslation.color[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b3.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b3.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b3.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b3.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b3.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b3.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b3.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b3.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b3.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b3.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.b3.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b3.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b3.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b3.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b3.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b3.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b3.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b3.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b3.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b3.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b3.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b3.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b3.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b3.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b3.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b3.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b3.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b3.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b3.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.der(w_a[1])
  0       0                       0                       0                
  6   256   # mechanics.b3.body.der(w_a[2])
  0       0                       0                       0                
  6   256   # mechanics.b3.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b3.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b3.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b3.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.body.phi_dd[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.R.T[1, 2]
  0       1                       0                       0                
  6  1280   # mechanics.b3.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b3.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.widthDirection[3]
  0     255                       0                       0                
  6  1280   # mechanics.b3.shape1.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.b3.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b3.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b3.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b3.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b3.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b3.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b3.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b3.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b3.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b3.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b3.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b3.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b3.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.b3.shape1.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b3.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b3.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b3.shape1.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b3.shape1.Material
  0       1                       0                       0                
  6   257   # mechanics.b4.animation
  0       0                       0                       0                
  6   257   # mechanics.b4.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b4.r[1]
  0  1.8600000000000000E-01       0                       0                
  6   256   # mechanics.b4.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.r[3]
 -1       0                       0                       0                
  1   280   # mechanics.b4.r_CM[1]
 -1       0                       0                       0                
  1   280   # mechanics.b4.r_CM[2]
 -1       0                       0                       0                
  1   280   # mechanics.b4.r_CM[3]
 -1  2.8699999999999999E+01       0                 1.7976931348623157E+308
  1   280   # mechanics.b4.m
 -1  1.6699999999999999E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b4.I_11
 -1  8.1000000000000003E-02       0                 1.7976931348623157E+308
  1   280   # mechanics.b4.I_22
 -1  1.6699999999999999E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b4.I_33
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b4.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b4.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b4.I_32
  0       0                       0                       0                
  6   256   # mechanics.b4.r_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.v_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b4.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b4.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b4.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b4.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b4.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b4.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b4.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b4.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b4.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b4.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b4.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b4.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b4.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b4.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b4.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b4.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b4.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.widthDirection[3]
 -1  7.2999999999999998E-01       0                       0                
  1   280   # mechanics.b4.length
 -1  1.0000000000000001E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b4.width
 -1  1.0000000000000001E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b4.height
 -1       0                       0                       0                
  1   280   # mechanics.b4.extra
  0     255                       0                     255                
  6   258   # mechanics.b4.color[1]
  0     178                       0                     255                
  6   258   # mechanics.b4.color[2]
  0       0                       0                     255                
  6   258   # mechanics.b4.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.sphereDiameter
  0     255                       0                     255                
  6   258   # mechanics.b4.sphereColor[1]
  0     178                       0                     255                
  6   258   # mechanics.b4.sphereColor[2]
  0       0                       0                     255                
  6   258   # mechanics.b4.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b4.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b4.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b4.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b4.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b4.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b4.frameTranslation.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.r[1]
  0  1.8600000000000000E-01       0                       0                
  6   256   # mechanics.b4.frameTranslation.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.lengthDirection[1]
  0  1.8600000000000000E-01       0                       0                
  6   256   # mechanics.b4.frameTranslation.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b4.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.frameTranslation.widthDirection[3]
  0  1.8600000000000000E-01       0                       0                
  6   256   # mechanics.b4.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b4.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b4.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b4.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b4.frameTranslation.color[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b4.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b4.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b4.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b4.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b4.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b4.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b4.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b4.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b4.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b4.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.b4.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b4.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b4.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b4.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b4.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b4.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b4.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b4.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b4.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b4.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b4.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b4.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b4.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b4.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b4.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b4.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b4.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b4.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b4.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.der(w_a[1])
  0       0                       0                       0                
  6   256   # mechanics.b4.body.der(w_a[2])
  0       0                       0                       0                
  6   256   # mechanics.b4.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b4.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b4.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b4.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.body.phi_dd[3]
  0       1                       0                       0                
  6  1280   # mechanics.b4.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b4.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b4.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b4.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.shape1.widthDirection[3]
  0     255                       0                       0                
  6  1280   # mechanics.b4.shape1.color[1]
  0     178                       0                       0                
  6  1280   # mechanics.b4.shape1.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.b4.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b4.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b4.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b4.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b4.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b4.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b4.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b4.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b4.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b4.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b4.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b4.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b4.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.b4.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b4.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b4.shape1.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b4.shape1.Material
  0       1                       0                       0                
  6   257   # mechanics.b5.animation
  0       0                       0                       0                
  6   257   # mechanics.b5.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b5.r[1]
  0  1.2500000000000000E-01       0                       0                
  6   256   # mechanics.b5.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.r[3]
 -1       0                       0                       0                
  1   280   # mechanics.b5.r_CM[1]
 -1       0                       0                       0                
  1   280   # mechanics.b5.r_CM[2]
 -1       0                       0                       0                
  1   280   # mechanics.b5.r_CM[3]
 -1  5.2000000000000002E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b5.m
 -1  1.2500000000000000E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b5.I_11
 -1  8.1000000000000005E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b5.I_22
 -1  1.5300000000000000E+00       0                 1.7976931348623157E+308
  1   280   # mechanics.b5.I_33
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b5.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b5.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b5.I_32
  0       0                       0                       0                
  6   256   # mechanics.b5.r_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.v_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b5.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b5.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b5.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b5.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b5.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b5.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b5.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b5.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b5.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b5.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b5.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b5.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b5.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b5.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b5.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b5.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b5.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.widthDirection[3]
 -1  2.2500000000000001E-01       0                       0                
  1   280   # mechanics.b5.length
 -1  7.4999999999999997E-02       0                 1.7976931348623157E+308
  1   280   # mechanics.b5.width
 -1  1.0000000000000001E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b5.height
 -1       0                       0                       0                
  1   280   # mechanics.b5.extra
  0       0                       0                     255                
  6   258   # mechanics.b5.color[1]
  0       0                       0                     255                
  6   258   # mechanics.b5.color[2]
  0     255                       0                     255                
  6   258   # mechanics.b5.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b5.sphereColor[1]
  0       0                       0                     255                
  6   258   # mechanics.b5.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b5.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b5.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b5.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b5.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b5.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b5.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b5.frameTranslation.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.r[1]
  0  1.2500000000000000E-01       0                       0                
  6   256   # mechanics.b5.frameTranslation.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.lengthDirection[1]
  0  1.2500000000000000E-01       0                       0                
  6   256   # mechanics.b5.frameTranslation.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b5.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.frameTranslation.widthDirection[3]
  0  1.2500000000000000E-01       0                       0                
  6   256   # mechanics.b5.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b5.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b5.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b5.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b5.frameTranslation.color[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b5.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b5.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b5.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b5.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b5.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b5.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b5.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b5.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b5.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b5.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.b5.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b5.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b5.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b5.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b5.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b5.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b5.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b5.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b5.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b5.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b5.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b5.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b5.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b5.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b5.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b5.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b5.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b5.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b5.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.der(w_a[1])
  0       0                       0                       0                
  6   256   # mechanics.b5.body.der(w_a[2])
  0       0                       0                       0                
  6   256   # mechanics.b5.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b5.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b5.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b5.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.body.phi_dd[3]
  0       1                       0                       0                
  6  1280   # mechanics.b5.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b5.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b5.shape1.widthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b5.shape1.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.b5.shape1.color[2]
  0     255                       0                       0                
  6  1280   # mechanics.b5.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b5.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b5.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b5.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b5.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b5.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b5.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b5.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b5.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b5.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b5.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b5.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b5.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.b5.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b5.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b5.shape1.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b5.shape1.Material
  0       0                       0                       0                
  6   388   # mechanics.b6.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b6.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b6.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b6.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b6.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b6.frame_b.t[3]
  0       1                       0                       0                
  6   257   # mechanics.b6.animation
  0       0                       0                       0                
  6   257   # mechanics.b6.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.b6.r[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.r[3]
 -1  5.0000000000000003E-02       0                       0                
  1   280   # mechanics.b6.r_CM[1]
 -1  5.0000000000000003E-02       0                       0                
  1   280   # mechanics.b6.r_CM[2]
 -1  5.0000000000000003E-02       0                       0                
  1   280   # mechanics.b6.r_CM[3]
 -1  5.0000000000000000E-01       0                 1.7976931348623157E+308
  1   280   # mechanics.b6.m
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b6.I_11
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b6.I_22
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.b6.I_33
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b6.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b6.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.b6.I_32
  0       0                       0                       0                
  6   256   # mechanics.b6.r_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.r_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.r_0[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.v_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.v_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.v_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b6.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b6.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b6.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b6.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b6.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b6.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b6.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b6.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b6.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.b6.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.b6.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.b6.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.b6.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.b6.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.b6.r_shape[3]
  0       1                       0                       0                
  6   256   # mechanics.b6.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b6.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.widthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.height
 -1       0                       0                       0                
  1   280   # mechanics.b6.extra
  0       0                       0                     255                
  6   258   # mechanics.b6.color[1]
  0       0                       0                     255                
  6   258   # mechanics.b6.color[2]
  0     255                       0                     255                
  6   258   # mechanics.b6.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b6.sphereColor[1]
  0       0                       0                     255                
  6   258   # mechanics.b6.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b6.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b6.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b6.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b6.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b6.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.r[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.r[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.b6.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.widthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.b6.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.b6.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.b6.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.b6.frameTranslation.color[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.b6.body.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.b6.body.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.b6.body.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.b6.body.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.b6.body.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.b6.body.frame_a.t[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.body.animation
  0       0                       0                       0                
  6   256   # mechanics.b6.body.r_CM[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.r_CM[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b6.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b6.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.b6.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.b6.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.b6.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.b6.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.b6.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.b6.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b6.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.b6.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.b6.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b6.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b6.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.b6.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.b6.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.b6.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.b6.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.b6.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.b6.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.b6.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.b6.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.b6.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.der(w_a[1])
  0       0                       0                       0                
  6   256   # mechanics.b6.body.der(w_a[2])
  0       0                       0                       0                
  6   256   # mechanics.b6.body.der(w_a[3])
  0       0                       0                       0                
  6   256   # mechanics.b6.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.b6.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.b6.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.body.phi_dd[3]
  0       1                       0                       0                
  6  1280   # mechanics.b6.shape1.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.shape1.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.shape1.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.shape1.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.b6.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.b6.shape1.widthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.b6.shape1.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.b6.shape1.color[2]
  0     255                       0                       0                
  6  1280   # mechanics.b6.shape1.color[3]
  0       1                       0                       0                
  6  1281   # mechanics.b6.shape1.isURI
  0       1                       0                       0                
  6   768   # mechanics.b6.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.b6.shape1.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.b6.shape1.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.b6.shape1.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.b6.shape1.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.b6.shape1.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.b6.shape1.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.b6.shape1.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.b6.shape1.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.b6.shape1.e_y[3]
  0  9.8721300000000001E+25       0                       0                
  6  1792   # mechanics.b6.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.b6.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.b6.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.b6.shape1.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.b6.shape1.Material
  0       0                       0                       0                
  6   388   # mechanics.load.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.load.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.load.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.load.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.load.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.load.frame_b.t[3]
  0       1                       0                       0                
  6   257   # mechanics.load.animation
  0       1                       0                       0                
  6   257   # mechanics.load.animateSphere
  0       0                       0                       0                
  6   256   # mechanics.load.r[1]
  0       0                       0                       0                
  6   256   # mechanics.load.r[2]
  0       0                       0                       0                
  6   256   # mechanics.load.r[3]
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.load.r_CM[1]
  0  2.5000000000000000E-01       0                       0                
  6   256   # mechanics.load.r_CM[2]
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.load.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.m
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.load.I_11
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.load.I_22
 -1  1.0000000000000000E-03       0                 1.7976931348623157E+308
  1   280   # mechanics.load.I_33
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.load.I_21
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.load.I_31
 -1       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  1   280   # mechanics.load.I_32
  0       0                       0                       0                
  6   257   # mechanics.load.angles_fixed
 -1       0                       0                       0                
  1   280   # mechanics.load.angles_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.load.angles_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.load.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.load.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.load.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.load.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.load.w_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.load.w_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.load.w_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.load.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.load.z_0_fixed
 -1       0                       0                       0                
  1   280   # mechanics.load.z_0_start[1]
 -1       0                       0                       0                
  1   280   # mechanics.load.z_0_start[2]
 -1       0                       0                       0                
  1   280   # mechanics.load.z_0_start[3]
 -1       0                       0                       0                
  1   280   # mechanics.load.r_shape[1]
 -1       0                       0                       0                
  1   280   # mechanics.load.r_shape[2]
 -1       0                       0                       0                
  1   280   # mechanics.load.r_shape[3]
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.load.lengthDirection[1]
  0  2.5000000000000000E-01       0                       0                
  6   256   # mechanics.load.lengthDirection[2]
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.load.lengthDirection[3]
  0       1                       0                       0                
  6   256   # mechanics.load.widthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.load.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.load.widthDirection[3]
  0  2.8722813232690148E-01       0                       0                
  6   256   # mechanics.load.length
 -1  5.0000000000000003E-02       0                 1.7976931348623157E+308
  1   280   # mechanics.load.width
 -1  5.0000000000000003E-02       0                 1.7976931348623157E+308
  1   280   # mechanics.load.height
 -1       0                       0                       0                
  1   280   # mechanics.load.extra
  0     255                       0                     255                
  6   258   # mechanics.load.color[1]
  0       0                       0                     255                
  6   258   # mechanics.load.color[2]
  0       0                       0                     255                
  6   258   # mechanics.load.color[3]
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.sphereDiameter
  0     255                       0                     255                
  6   258   # mechanics.load.sphereColor[1]
  0       0                       0                     255                
  6   258   # mechanics.load.sphereColor[2]
  0       0                       0                     255                
  6   258   # mechanics.load.sphereColor[3]
  0       0                       0                       0                
  6   257   # mechanics.load.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.load.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.load.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.load.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.load.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.frame_a.R.w[3]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_a.f[1]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_a.f[2]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_a.f[3]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_a.t[1]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_a.t[2]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_a.t[3]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_b.f[1]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_b.f[2]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_b.f[3]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_b.t[1]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_b.t[2]
  0       0                       0                       0                
  6   388   # mechanics.load.frameTranslation.frame_b.t[3]
  0       0                       0                       0                
  6   257   # mechanics.load.frameTranslation.animation
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.r[1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.r[2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.r[3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.r_shape[1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.r_shape[2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.r_shape[3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.lengthDirection[1]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.lengthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.lengthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.widthDirection[1]
  0       1                       0                       0                
  6   256   # mechanics.load.frameTranslation.widthDirection[2]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.widthDirection[3]
  0       0                       0                       0                
  6   256   # mechanics.load.frameTranslation.length
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.frameTranslation.width
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.frameTranslation.height
 -1       0                       0                       0                
  1   280   # mechanics.load.frameTranslation.extra
  0     155                       0                     255                
  6   258   # mechanics.load.frameTranslation.color[1]
  0     155                       0                     255                
  6   258   # mechanics.load.frameTranslation.color[2]
  0     155                       0                     255                
  6   258   # mechanics.load.frameTranslation.color[3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.w[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.w[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.frame_a.R.w[3]
  0       0                       0                       0                
  6   257   # mechanics.load.body.animation
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.load.body.r_CM[1]
  0  2.5000000000000000E-01       0                       0                
  6   256   # mechanics.load.body.r_CM[2]
  0  1.0000000000000001E-01       0                       0                
  6   256   # mechanics.load.body.r_CM[3]
  0       1                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.body.m
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.body.I_11
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.body.I_22
  0       0                       0                 1.7976931348623157E+308
  6   256   # mechanics.load.body.I_33
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.load.body.I_21
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.load.body.I_31
  0       0                 -9.9999999999999995E+59 1.7976931348623157E+308
  6   256   # mechanics.load.body.I_32
  0       0                       0                       0                
  6   256   # mechanics.load.body.a_0[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.a_0[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.a_0[3]
  0       0                       0                       0                
  6   257   # mechanics.load.body.angles_fixed
  0       0                       0                       0                
  6   256   # mechanics.load.body.angles_start[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.angles_start[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.angles_start[3]
  0       1                       1                       3                
  6   258   # mechanics.load.body.sequence_start[1]
  0       2                       1                       3                
  6   258   # mechanics.load.body.sequence_start[2]
  0       3                       1                       3                
  6   258   # mechanics.load.body.sequence_start[3]
  0       0                       0                       0                
  6   257   # mechanics.load.body.w_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.load.body.w_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.w_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.w_0_start[3]
  0       0                       0                       0                
  6   257   # mechanics.load.body.z_0_fixed
  0       0                       0                       0                
  6   256   # mechanics.load.body.z_0_start[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.z_0_start[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.z_0_start[3]
  0  1.1111111111111110E-01       0                 1.7976931348623157E+308
  6   256   # mechanics.load.body.sphereDiameter
  0       0                       0                     255                
  6   258   # mechanics.load.body.sphereColor[1]
  0     128                       0                     255                
  6   258   # mechanics.load.body.sphereColor[2]
  0     255                       0                     255                
  6   258   # mechanics.load.body.sphereColor[3]
  0  3.7037037037037035E-02       0                 1.7976931348623157E+308
  6   256   # mechanics.load.body.cylinderDiameter
  0       0                       0                     255                
  6   258   # mechanics.load.body.cylinderColor[1]
  0     128                       0                     255                
  6   258   # mechanics.load.body.cylinderColor[2]
  0     255                       0                     255                
  6   258   # mechanics.load.body.cylinderColor[3]
  0       0                       0                       0                
  6   257   # mechanics.load.body.enforceStates
  0       1                       0                       0                
  6   257   # mechanics.load.body.useQuaternions
  0       1                       1                       3                
  6   258   # mechanics.load.body.sequence_angleStates[1]
  0       2                       1                       3                
  6   258   # mechanics.load.body.sequence_angleStates[2]
  0       3                       1                       3                
  6   258   # mechanics.load.body.sequence_angleStates[3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.I[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[1, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[1, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[1, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[2, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[2, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[2, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[3, 1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[3, 2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.T[3, 3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.w[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.w[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.R_start.w[3]
  0       0                       0                       0                
  6   256   # mechanics.load.body.g_0[1]
  0       0                       0                       0                
  6   256   # mechanics.load.body.g_0[2]
  0       0                       0                       0                
  6   256   # mechanics.load.body.g_0[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q_start[4]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.Q[3]
  0       1                       0                       0                
  6  1280   # mechanics.load.body.Q[4]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_start[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_start[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_start[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_d[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_d[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_d[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_dd[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_dd[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.body.phi_dd[3]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.load.shape1.lengthDirection[1]
  0  2.5000000000000000E-01       0                       0                
  6  1280   # mechanics.load.shape1.lengthDirection[2]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.load.shape1.lengthDirection[3]
  0       1                       0                       0                
  6  1280   # mechanics.load.shape1.widthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape1.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape1.widthDirection[3]
  0  2.8722813232690148E-01       0                       0                
  6  1280   # mechanics.load.shape1.length
  0     255                       0                       0                
  6  1280   # mechanics.load.shape1.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape1.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape1.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.load.shape1.isURI
  0  2.8722813232690148E-01       0                       0                
  6   768   # mechanics.load.shape1.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.load.shape1.n_z_aux[1]
  0  3.4815531191139565E-01       0                       0                
  6   768   # mechanics.load.shape1.n_z_aux[2]
  0 -8.7038827977848909E-01       0                       0                
  6   768   # mechanics.load.shape1.n_z_aux[3]
  0  3.4815531191139565E-01       0                       0                
  6   768   # mechanics.load.shape1.e_x[1]
  0  8.7038827977848909E-01       0                       0                
  6   768   # mechanics.load.shape1.e_x[2]
  0  3.4815531191139565E-01       0                       0                
  6   768   # mechanics.load.shape1.e_x[3]
  0  9.3743686656109204E-01       0                       0                
  6   768   # mechanics.load.shape1.e_y[1]
  0 -3.2325409191761795E-01       0                       0                
  6   768   # mechanics.load.shape1.e_y[2]
  0 -1.2930163676704717E-01       0                       0                
  6   768   # mechanics.load.shape1.e_y[3]
  0  9.8710300000000003E+25       0                       0                
  6  1792   # mechanics.load.shape1.Form
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.rxvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.rxvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.rxvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.ryvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.ryvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.ryvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.rvisobj[3]
  0  2.8722813232690148E-01       0                       0                
  6  1792   # mechanics.load.shape1.size[1]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape1.Material
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.r_shape[1]
  0  2.5000000000000000E-01       0                       0                
  6  1280   # mechanics.load.shape2.r_shape[2]
  0  1.0000000000000001E-01       0                       0                
  6  1280   # mechanics.load.shape2.r_shape[3]
  0       1                       0                       0                
  6  1280   # mechanics.load.shape2.lengthDirection[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.lengthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.lengthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.widthDirection[1]
  0       1                       0                       0                
  6  1280   # mechanics.load.shape2.widthDirection[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.widthDirection[3]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.extra
  0     255                       0                       0                
  6  1280   # mechanics.load.shape2.color[1]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.color[2]
  0       0                       0                       0                
  6  1280   # mechanics.load.shape2.color[3]
  0       0                       0                       0                
  6  1281   # mechanics.load.shape2.isURI
  0       1                       0                       0                
  6   768   # mechanics.load.shape2.abs_n_x
  0       0                       0                       0                
  6   768   # mechanics.load.shape2.n_z_aux[1]
  0       0                       0                       0                
  6   768   # mechanics.load.shape2.n_z_aux[2]
  0       1                       0                       0                
  6   768   # mechanics.load.shape2.n_z_aux[3]
  0       1                       0                       0                
  6   768   # mechanics.load.shape2.e_x[1]
  0       0                       0                       0                
  6   768   # mechanics.load.shape2.e_x[2]
  0       0                       0                       0                
  6   768   # mechanics.load.shape2.e_x[3]
  0       0                       0                       0                
  6   768   # mechanics.load.shape2.e_y[1]
  0       1                       0                       0                
  6   768   # mechanics.load.shape2.e_y[2]
  0       0                       0                       0                
  6   768   # mechanics.load.shape2.e_y[3]
  0  9.8710199999999992E+25       0                       0                
  6  1792   # mechanics.load.shape2.Form
  0       0                       0                       0                
  6  1792   # mechanics.load.shape2.rvisobj[1]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape2.rvisobj[2]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape2.rvisobj[3]
  0       0                       0                       0                
  6  1792   # mechanics.load.shape2.Material
  0       0                       0                       0                
  6  1792   # mechanics.load.shape2.Extra
  0       6                       0                       0                
  6   258   # pathPlanning.naxis
  0       0                       0                       0                
  6   256   # pathPlanning.angleBegDeg[1]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBegDeg[2]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBegDeg[3]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBegDeg[4]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBegDeg[5]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBegDeg[6]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEndDeg[1]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEndDeg[2]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEndDeg[3]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEndDeg[4]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEndDeg[5]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEndDeg[6]
  0       0                       0                       0                
  6   256   # pathPlanning.speedMax[1]
  0       0                       0                       0                
  6   256   # pathPlanning.speedMax[2]
  0       0                       0                       0                
  6   256   # pathPlanning.speedMax[3]
  0       0                       0                       0                
  6   256   # pathPlanning.speedMax[4]
  0       0                       0                       0                
  6   256   # pathPlanning.speedMax[5]
  0       0                       0                       0                
  6   256   # pathPlanning.speedMax[6]
  0       0                       0                       0                
  6   256   # pathPlanning.accMax[1]
  0       0                       0                       0                
  6   256   # pathPlanning.accMax[2]
  0       0                       0                       0                
  6   256   # pathPlanning.accMax[3]
  0       0                       0                       0                
  6   256   # pathPlanning.accMax[4]
  0       0                       0                       0                
  6   256   # pathPlanning.accMax[5]
  0       0                       0                       0                
  6   256   # pathPlanning.accMax[6]
  0       0                       0                       0                
  6   256   # pathPlanning.startTime
  0       0                       0                       0                
  6   256   # pathPlanning.swingTime
  0       0                       0                       0                
  6   256   # pathPlanning.angleBeg[1]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBeg[2]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBeg[3]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBeg[4]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBeg[5]
  0       0                       0                       0                
  6   256   # pathPlanning.angleBeg[6]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEnd[1]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEnd[2]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEnd[3]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEnd[4]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEnd[5]
  0       0                       0                       0                
  6   256   # pathPlanning.angleEnd[6]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_begin[1]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_begin[2]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_begin[3]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_begin[4]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_begin[5]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_begin[6]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_end[1]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_end[2]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_end[3]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_end[4]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_end[5]
  0       0                       0                       0                
  6   256   # pathPlanning.path.q_end[6]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qd_max[1]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qd_max[2]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qd_max[3]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qd_max[4]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qd_max[5]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qd_max[6]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qdd_max[1]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qdd_max[2]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qdd_max[3]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qdd_max[4]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qdd_max[5]
  0  9.9999999999999997E-61  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # pathPlanning.path.qdd_max[6]
  0       0                       0                       0                
  6   256   # pathPlanning.path.startTime
  0       6                       0                       0                
  6   258   # pathPlanning.path.nout
  0       0                       0                       0                
  6   256   # pathPlanning.path.endTime
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_begin[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_begin[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_begin[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_begin[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_begin[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_begin[6]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_end[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_end[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_end[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_end[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_end[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_q_end[6]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qd_max[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qd_max[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qd_max[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qd_max[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qd_max[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qd_max[6]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qdd_max[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qdd_max[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qdd_max[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qdd_max[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qdd_max[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_qdd_max[6]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_deltaq[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_deltaq[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_deltaq[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_deltaq[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_deltaq[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.p_deltaq[6]
  0  1.0000000000000002E-14       0                       0                
  6  1280   # pathPlanning.path.eps
  0       0                       0                       0                
  6  1345   # pathPlanning.path.motion_ref
  0       0                       0                       0                
  6  1280   # pathPlanning.path.sd_max_inv
  0       0                       0                       0                
  6  1280   # pathPlanning.path.sdd_max_inv
  0       0                       0                       0                
  6  1280   # pathPlanning.path.sd_max
  0       0                       0                       0                
  6  1280   # pathPlanning.path.sdd_max
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux1[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux1[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux1[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux1[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux1[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux1[6]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux2[1]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux2[2]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux2[3]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux2[4]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux2[5]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.aux2[6]
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Ta1
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Ta2
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Tv
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Te
  0       0                       0                       0                
  6  1281   # pathPlanning.path.noWphase
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Ta1s
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Ta2s
  0       0                       0                       0                
  6  1280   # pathPlanning.path.Tvs
  0       0                       0                       0                
  6  1280   # pathPlanning.path.sd_max2
  0       0                       0                       0                
  6  1280   # pathPlanning.path.s1
  0       0                       0                       0                
  6  1280   # pathPlanning.path.s2
  0       0                       0                       0                
  6  1280   # pathPlanning.path.s3
  0       0                       0                       0                
  6  1280   # pathPlanning.path.s
  0       0                       0                       0                
  6  1280   # pathPlanning.path.sd
  0       0                       0                       0                
  6  1344   # pathPlanning.path.der(sd)
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis1.nAxis
  0       1                       0                       0                
  6   258   # pathPlanning.pathToAxis1.axisUsed
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis2.nAxis
  0       2                       0                       0                
  6   258   # pathPlanning.pathToAxis2.axisUsed
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis3.nAxis
  0       3                       0                       0                
  6   258   # pathPlanning.pathToAxis3.axisUsed
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis4.nAxis
  0       4                       0                       0                
  6   258   # pathPlanning.pathToAxis4.axisUsed
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis5.nAxis
  0       5                       0                       0                
  6   258   # pathPlanning.pathToAxis5.axisUsed
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis6.nAxis
  0       6                       0                       0                
  6   258   # pathPlanning.pathToAxis6.axisUsed
  0       0                       0                       0                
  6   321   # pathPlanning.terminateSimulation.condition
  0       0                       0                       0                
  6   256   # axis1.kp
  0       0                       0                       0                
  6   256   # axis1.ks
  0       0                       0                       0                
  6   256   # axis1.Ts
 -1  1.1616000000000000E+00       0                       0                
  1   280   # axis1.k
 -1    4590                       0                       0                
  1   280   # axis1.w
 -1  5.9999999999999998E-01       0                       0                
  1   280   # axis1.D
 -1  1.2999999999999999E-03       0                 1.7976931348623157E+308
  1   280   # axis1.J
 -1    -105                       0                       0                
  1   280   # axis1.ratio
 -1  4.0000000000000002E-01       0                       0                
  1   280   # axis1.Rv0
 -1  8.1250000000000007E-04       0                       0                
  1   280   # axis1.Rv1
 -1       1                       0                       0                
  1   280   # axis1.peak
  0       0                       0                       0                
  6   388   # axis1.gear.flange_a.tau
  0       0                       0                       0                
  6   256   # axis1.gear.i
  0       0                       0                       0                
  6   256   # axis1.gear.c
  0       0                       0                       0                
  6   256   # axis1.gear.d
  0       0                       0                       0                
  6   256   # axis1.gear.Rv0
  0       0                       0                       0                
  6   256   # axis1.gear.Rv1
  0       0                       0                       0                
  6   256   # axis1.gear.peak
  0       1                       0                       0                
  6   256   # axis1.gear.unitAngularVelocity
  0       1                       0                       0                
  6   256   # axis1.gear.unitTorque
  0       0                       0                       0                
  6   769   # axis1.gear.gear.useSupport
  0       0                       0                       0                
  6   260   # axis1.gear.gear.flange_a.phi
  0       0                       0                       0                
  6   260   # axis1.gear.gear.flange_a.der(phi)
  0       0                       0                       0                
  6   260   # axis1.gear.gear.flange_a.der(phi, 2)
  0       0                       0                       0                
  6   388   # axis1.gear.gear.flange_a.tau
  0       0                       0                       0                
  6  1280   # axis1.gear.gear.phi_support
  0       1                       0                       0                
  6   256   # axis1.gear.gear.ratio
  0  100000                       0                 1.7976931348623157E+308
  6   256   # axis1.gear.spring.c
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis1.gear.spring.d
 -1       0                       0                       0                
  1   280   # axis1.gear.spring.phi_rel0
 -1       0                       0                       0                
  2   272   # axis1.gear.spring.phi_rel
  0       0                       0                       0                
  3  4352   # axis1.gear.spring.der(phi_rel)
 -1       0                       0                       0                
  2   272   # axis1.gear.spring.w_rel
  0       0                       0                       0                
  3   256   # axis1.gear.spring.der(w_rel)
  0  1.0000000000000000E-04       0                 1.7976931348623157E+308
  6   256   # axis1.gear.spring.phi_nominal
  0       4                       1                       5                
  6   770   # axis1.gear.spring.stateSelect
  0       0                       0                       0                
  6   769   # axis1.gear.spring.useHeatPort
  0       0                       0                       0                
  6   256   # axis1.gear.spring.lossPower
  0       0                       0                       0                
  6  1280   # axis1.gear.spring.tau_c
  0       0                       0                       0                
  6  1280   # axis1.gear.spring.tau_d
  0       0                       0                       0                
  6   769   # axis1.gear.bearingFriction.useSupport
  0       0                       0                       0                
  6  1280   # axis1.gear.bearingFriction.phi_support
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau_pos[1, 1]
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau_pos[1, 2]
  0       1                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau_pos[2, 1]
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau_pos[2, 2]
 -1       1                       1                 1.7976931348623157E+308
  1   280   # axis1.gear.bearingFriction.peak
 -1  1.0000000000000000E+10       0                       0                
  1   280   # axis1.gear.bearingFriction.w_small
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau0
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau0_max
  0       0                       0                       0                
  6   257   # axis1.gear.bearingFriction.free
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.sa
  0       0                       0                       0                
  6   361   # axis1.gear.bearingFriction.startForward
  0       0                       0                       0                
  6   361   # axis1.gear.bearingFriction.startBackward
  0       0                       0                       0                
  6   353   # axis1.gear.bearingFriction.locked
  0       3                       0                       0                
  6   258   # axis1.gear.bearingFriction.Unknown
  0       2                       0                       0                
  6   258   # axis1.gear.bearingFriction.Free
  0       1                       0                       0                
  6   258   # axis1.gear.bearingFriction.Forward
  0       0                       0                       0                
  6   258   # axis1.gear.bearingFriction.Stuck
  0      -1                       0                       0                
  6   258   # axis1.gear.bearingFriction.Backward
  0       3                      -1                       3                
  6   330   # axis1.gear.bearingFriction.mode
  0       1                       0                       0                
  6   768   # axis1.gear.bearingFriction.unitAngularAcceleration
  0       1                       0                       0                
  6   768   # axis1.gear.bearingFriction.unitTorque
  0       0                       0                       0                
  6   769   # axis1.gear.bearingFriction.useHeatPort
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.lossPower
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.phi
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.tau
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.w
  0       0                       0                       0                
  6   256   # axis1.gear.bearingFriction.der(w)
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis1.motor.J
  0       0                       0                       0                
  6   256   # axis1.motor.k
  0       0                       0                       0                
  6   256   # axis1.motor.w
  0       0                       0                       0                
  6   256   # axis1.motor.D
 -1     315                       0                       0                
  1   280   # axis1.motor.w_max
 -1       9                       0                       0                
  1   280   # axis1.motor.i_max
  0       0                       0                       0                
  6   260   # axis1.motor.Vs.p.v
  0       0                       0                       0                
  6   388   # axis1.motor.Vs.p.i
  0       0                       0                       0                
  6   260   # axis1.motor.Vs.n.v
  0       0                       0                       0                
  6   256   # axis1.motor.power.v1
  0       0                       0                       0                
  6   256   # axis1.motor.power.v2
  0       0                       0                       0                
  6   256   # axis1.motor.power.i1
  0       0                       0                       0                
  6   256   # axis1.motor.power.i2
  0       0                       0                       0                
  6   388   # axis1.motor.power.p1.i
  0       0                       0                       0                
  6   388   # axis1.motor.power.n1.i
  0       0                       0                       0                
  6   260   # axis1.motor.power.n2.v
  0       0                       0                       0                
  6   256   # axis1.motor.diff.v1
  0       0                       0                       0                
  6   256   # axis1.motor.diff.v2
  0       0                       0                       0                
  6   256   # axis1.motor.diff.i1
  0       0                       0                       0                
  6   256   # axis1.motor.diff.i2
  0       0                       0                       0                
  6   260   # axis1.motor.diff.p1.v
  0       0                       0                       0                
  6   388   # axis1.motor.diff.p1.i
  0       0                       0                       0                
  6   388   # axis1.motor.diff.n1.i
  0       0                       0                       0                
  6   260   # axis1.motor.diff.n2.v
  0       0                       0                       0                
  6   769   # axis1.motor.emf.useSupport
  0       1                       0                       0                
  6   256   # axis1.motor.emf.k
  0       0                       0                       0                
  6   256   # axis1.motor.emf.v
  0       0                       0                       0                
  6   256   # axis1.motor.emf.phi
  0       0                       0                       0                
  6   256   # axis1.motor.emf.tau
  0       0                       0                       0                
  6   260   # axis1.motor.emf.n.v
 -1       0                       0                       0                
  1  1304   # axis1.motor.emf.fixed.phi0
  0       0                       0                       0                
  6   256   # axis1.motor.La.v
  0       0                       0                       0                
  6   260   # axis1.motor.La.p.v
 -1       0                       0                       0                
  2   272   # axis1.motor.La.i
  0       0                       0                       0                
  3   256   # axis1.motor.La.der(i)
  0       1                       0                       0                
  6   256   # axis1.motor.La.L
 -1     250                       0                       0                
  1   280   # axis1.motor.Ra.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Ra.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Ra.alpha
  0       0                       0                       0                
  6   256   # axis1.motor.Ra.v
  0       0                       0                       0                
  6   769   # axis1.motor.Ra.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Ra.T
  0       0                       0                       0                
  6   256   # axis1.motor.Ra.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Ra.R_actual
 -1     100                       0                       0                
  1   280   # axis1.motor.Rd2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Rd2.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Rd2.alpha
  0       0                       0                       0                
  6   256   # axis1.motor.Rd2.v
  0       0                       0                       0                
  6   769   # axis1.motor.Rd2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Rd2.T
  0       0                       0                       0                
  6   256   # axis1.motor.Rd2.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Rd2.R_actual
 -1       0                       0                       0                
  2   272   # axis1.motor.C.v
  0       0                       0                       0                
  3   256   # axis1.motor.C.der(v)
  0       0                       0                       0                
  6   260   # axis1.motor.C.p.v
  0       0                       0                       0                
  6   388   # axis1.motor.C.p.i
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis1.motor.C.C
  0       0                       0                       0                
  6   256   # axis1.motor.OpI.v1
  0       0                       0                       0                
  6   256   # axis1.motor.OpI.i1
  0       0                       0                       0                
  6   260   # axis1.motor.OpI.p1.v
  0       0                       0                       0                
  6   388   # axis1.motor.OpI.p1.i
  0       0                       0                       0                
  6   260   # axis1.motor.OpI.n1.v
  0       0                       0                       0                
  6   388   # axis1.motor.OpI.n1.i
  0       0                       0                       0                
  6   260   # axis1.motor.OpI.n2.v
 -1      10                       0                       0                
  1   280   # axis1.motor.Ri.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Ri.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Ri.alpha
  0       0                       0                       0                
  6   260   # axis1.motor.Ri.n.v
  0       0                       0                       0                
  6   769   # axis1.motor.Ri.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Ri.T
  0       0                       0                       0                
  6   256   # axis1.motor.Ri.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Ri.R_actual
 -1     100                       0                       0                
  1   280   # axis1.motor.Rd1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Rd1.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Rd1.alpha
  0       0                       0                       0                
  6   256   # axis1.motor.Rd1.v
  0       0                       0                       0                
  6   769   # axis1.motor.Rd1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Rd1.T
  0       0                       0                       0                
  6   256   # axis1.motor.Rd1.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Rd1.R_actual
 -1     200                       0                       0                
  1   280   # axis1.motor.Rp1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Rp1.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Rp1.alpha
  0       0                       0                       0                
  6   256   # axis1.motor.Rp1.v
  0       0                       0                       0                
  6   388   # axis1.motor.Rp1.p.i
  0       0                       0                       0                
  6   769   # axis1.motor.Rp1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Rp1.T
  0       0                       0                       0                
  6   256   # axis1.motor.Rp1.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Rp1.R_actual
 -1      50                       0                       0                
  1   280   # axis1.motor.Rp2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Rp2.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Rp2.alpha
  0       0                       0                       0                
  6   260   # axis1.motor.Rp2.n.v
  0       0                       0                       0                
  6   769   # axis1.motor.Rp2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Rp2.T
  0       0                       0                       0                
  6   256   # axis1.motor.Rp2.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Rp2.R_actual
 -1     100                       0                       0                
  1   280   # axis1.motor.Rd4.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Rd4.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Rd4.alpha
  0       0                       0                       0                
  6   388   # axis1.motor.Rd4.p.i
  0       0                       0                       0                
  6   260   # axis1.motor.Rd4.n.v
  0       0                       0                       0                
  6   769   # axis1.motor.Rd4.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Rd4.T
  0       0                       0                       0                
  6   256   # axis1.motor.Rd4.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Rd4.R_actual
  0       0                       0                       0                
  6   260   # axis1.motor.hall2.p.v
  0       0                       0                       0                
  6   260   # axis1.motor.hall2.n.v
 -1     100                       0                       0                
  1   280   # axis1.motor.Rd3.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis1.motor.Rd3.T_ref
 -1       0                       0                       0                
  1   280   # axis1.motor.Rd3.alpha
  0       0                       0                       0                
  6   256   # axis1.motor.Rd3.v
  0       0                       0                       0                
  6   769   # axis1.motor.Rd3.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Rd3.T
  0       0                       0                       0                
  6   256   # axis1.motor.Rd3.LossPower
  0       0                       0                       0                
  6   256   # axis1.motor.Rd3.R_actual
  0       0                       0                       0                
  6   260   # axis1.motor.g1.p.v
  0       0                       0                       0                
  6   260   # axis1.motor.g2.p.v
  0       0                       0                       0                
  6   260   # axis1.motor.g3.p.v
  0       0                       0                       0                
  6   388   # axis1.motor.g3.p.i
  0       0                       0                       0                
  6   260   # axis1.motor.hall1.p.v
  0       0                       0                       0                
  6   260   # axis1.motor.hall1.n.v
  0       0                       0                       0                
  6   260   # axis1.motor.g4.p.v
  0       0                       0                       0                
  6   260   # axis1.motor.g5.p.v
  0       0                       0                       0                
  6   388   # axis1.motor.phi.flange.tau
  0       0                       0                       0                
  6   388   # axis1.motor.speed.flange.tau
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis1.motor.Jmotor.J
  0       3                       1                       5                
  6   770   # axis1.motor.Jmotor.stateSelect
 -1       1                       0                       0                
  1   280   # axis1.motor.convert1.k
 -1       1                       0                       0                
  1   280   # axis1.motor.convert2.k
  0       0                       0                       0                
  6   256   # axis1.controller.kp
  0       0                       0                       0                
  6   256   # axis1.controller.ks
  0       0                       0                       0                
  6   256   # axis1.controller.Ts
  0       0                       0                       0                
  6   256   # axis1.controller.ratio
  0       1                       0                       0                
  6   256   # axis1.controller.gain1.k
  0       0                       0                       0                
  6   256   # axis1.controller.gain1.y
  0       0                       0                       0                
  6   256   # axis1.controller.PI.k
  0       1                  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # axis1.controller.PI.T
  0       1                       1                       4                
  6   258   # axis1.controller.PI.initType
 -1       0                       0                       0                
  1   280   # axis1.controller.PI.x_start
 -1       0                       0                       0                
  1   280   # axis1.controller.PI.y_start
  0       0                       0                       0                
  6   256   # axis1.controller.PI.u
 -1       0                       0                       0                
  2   272   # axis1.controller.PI.x
  0       0                       0                       0                
  3   256   # axis1.controller.PI.der(x)
  0       0                       0                       0                
  6   256   # axis1.controller.feedback1.y
  0       1                       0                       0                
  6   256   # axis1.controller.P.k
  0       0                       0                       0                
  6   256   # axis1.controller.P.y
 -1       1                       0                       0                
  1   280   # axis1.controller.add3.k1
 -1       1                       0                       0                
  1   280   # axis1.controller.add3.k2
 -1      -1                       0                       0                
  1   280   # axis1.controller.add3.k3
  0       0                       0                       0                
  6   256   # axis1.controller.add3.u1
  0       1                       0                       0                
  6   256   # axis1.controller.gain2.k
  0       0                       0                       0                
  6   388   # axis1.angleSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis1.speedSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis1.accSensor.flange.tau
  0       1                       0                       0                
  6   257   # axis1.initializeFlange.use_phi_start
  0       1                       0                       0                
  6   257   # axis1.initializeFlange.use_w_start
  0       1                       0                       0                
  6   257   # axis1.initializeFlange.use_a_start
  0       4                       1                       5                
  6   258   # axis1.initializeFlange.stateSelect
  0       0                       0                       0                
  6   388   # axis1.initializeFlange.flange.tau
  0       0                       0                       0                
  6  1412   # axis1.initializeFlange.set_phi_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis1.initializeFlange.set_w_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis1.initializeFlange.set_a_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis1.initializeFlange.set_flange_tau.flange.tau
 -1       0                       0                       0                
  1   280   # axis1.const.k
 -1      43                       0                       0                
  1   280   # axis1.c
 -1  5.0000000000000001E-03       0                       0                
  1   280   # axis1.cd
  0       0                       0                       0                
  6   256   # axis2.kp
  0       0                       0                       0                
  6   256   # axis2.ks
  0       0                       0                       0                
  6   256   # axis2.Ts
 -1  1.1616000000000000E+00       0                       0                
  1   280   # axis2.k
 -1    5500                       0                       0                
  1   280   # axis2.w
 -1  5.9999999999999998E-01       0                       0                
  1   280   # axis2.D
 -1  1.2999999999999999E-03       0                 1.7976931348623157E+308
  1   280   # axis2.J
 -1     210                       0                       0                
  1   280   # axis2.ratio
 -1  5.0000000000000000E-01       0                       0                
  1   280   # axis2.Rv0
 -1  7.6923076923076923E-04       0                       0                
  1   280   # axis2.Rv1
 -1       1                       0                       0                
  1   280   # axis2.peak
  0       0                       0                       0                
  6   388   # axis2.gear.flange_a.tau
  0       0                       0                       0                
  6   256   # axis2.gear.i
  0       0                       0                       0                
  6   256   # axis2.gear.c
  0       0                       0                       0                
  6   256   # axis2.gear.d
  0       0                       0                       0                
  6   256   # axis2.gear.Rv0
  0       0                       0                       0                
  6   256   # axis2.gear.Rv1
  0       0                       0                       0                
  6   256   # axis2.gear.peak
  0       1                       0                       0                
  6   256   # axis2.gear.unitAngularVelocity
  0       1                       0                       0                
  6   256   # axis2.gear.unitTorque
  0       0                       0                       0                
  6   769   # axis2.gear.gear.useSupport
  0       0                       0                       0                
  6   260   # axis2.gear.gear.flange_a.phi
  0       0                       0                       0                
  6   260   # axis2.gear.gear.flange_a.der(phi)
  0       0                       0                       0                
  6   260   # axis2.gear.gear.flange_a.der(phi, 2)
  0       0                       0                       0                
  6   388   # axis2.gear.gear.flange_a.tau
  0       0                       0                       0                
  6  1280   # axis2.gear.gear.phi_support
  0       1                       0                       0                
  6   256   # axis2.gear.gear.ratio
  0  100000                       0                 1.7976931348623157E+308
  6   256   # axis2.gear.spring.c
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis2.gear.spring.d
 -1       0                       0                       0                
  1   280   # axis2.gear.spring.phi_rel0
 -1       0                       0                       0                
  2   272   # axis2.gear.spring.phi_rel
  0       0                       0                       0                
  3  4352   # axis2.gear.spring.der(phi_rel)
 -1       0                       0                       0                
  2   272   # axis2.gear.spring.w_rel
  0       0                       0                       0                
  3   256   # axis2.gear.spring.der(w_rel)
  0  1.0000000000000000E-04       0                 1.7976931348623157E+308
  6   256   # axis2.gear.spring.phi_nominal
  0       4                       1                       5                
  6   770   # axis2.gear.spring.stateSelect
  0       0                       0                       0                
  6   769   # axis2.gear.spring.useHeatPort
  0       0                       0                       0                
  6   256   # axis2.gear.spring.lossPower
  0       0                       0                       0                
  6  1280   # axis2.gear.spring.tau_c
  0       0                       0                       0                
  6  1280   # axis2.gear.spring.tau_d
  0       0                       0                       0                
  6   769   # axis2.gear.bearingFriction.useSupport
  0       0                       0                       0                
  6  1280   # axis2.gear.bearingFriction.phi_support
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau_pos[1, 1]
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau_pos[1, 2]
  0       1                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau_pos[2, 1]
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau_pos[2, 2]
 -1       1                       1                 1.7976931348623157E+308
  1   280   # axis2.gear.bearingFriction.peak
 -1  1.0000000000000000E+10       0                       0                
  1   280   # axis2.gear.bearingFriction.w_small
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau0
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau0_max
  0       0                       0                       0                
  6   257   # axis2.gear.bearingFriction.free
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.sa
  0       0                       0                       0                
  6   361   # axis2.gear.bearingFriction.startForward
  0       0                       0                       0                
  6   361   # axis2.gear.bearingFriction.startBackward
  0       0                       0                       0                
  6   353   # axis2.gear.bearingFriction.locked
  0       3                       0                       0                
  6   258   # axis2.gear.bearingFriction.Unknown
  0       2                       0                       0                
  6   258   # axis2.gear.bearingFriction.Free
  0       1                       0                       0                
  6   258   # axis2.gear.bearingFriction.Forward
  0       0                       0                       0                
  6   258   # axis2.gear.bearingFriction.Stuck
  0      -1                       0                       0                
  6   258   # axis2.gear.bearingFriction.Backward
  0       3                      -1                       3                
  6   330   # axis2.gear.bearingFriction.mode
  0       1                       0                       0                
  6   768   # axis2.gear.bearingFriction.unitAngularAcceleration
  0       1                       0                       0                
  6   768   # axis2.gear.bearingFriction.unitTorque
  0       0                       0                       0                
  6   769   # axis2.gear.bearingFriction.useHeatPort
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.lossPower
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.phi
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.tau
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.w
  0       0                       0                       0                
  6   256   # axis2.gear.bearingFriction.der(w)
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis2.motor.J
  0       0                       0                       0                
  6   256   # axis2.motor.k
  0       0                       0                       0                
  6   256   # axis2.motor.w
  0       0                       0                       0                
  6   256   # axis2.motor.D
 -1     315                       0                       0                
  1   280   # axis2.motor.w_max
 -1       9                       0                       0                
  1   280   # axis2.motor.i_max
  0       0                       0                       0                
  6   260   # axis2.motor.Vs.p.v
  0       0                       0                       0                
  6   388   # axis2.motor.Vs.p.i
  0       0                       0                       0                
  6   260   # axis2.motor.Vs.n.v
  0       0                       0                       0                
  6   256   # axis2.motor.power.v1
  0       0                       0                       0                
  6   256   # axis2.motor.power.v2
  0       0                       0                       0                
  6   256   # axis2.motor.power.i1
  0       0                       0                       0                
  6   256   # axis2.motor.power.i2
  0       0                       0                       0                
  6   388   # axis2.motor.power.p1.i
  0       0                       0                       0                
  6   388   # axis2.motor.power.n1.i
  0       0                       0                       0                
  6   260   # axis2.motor.power.n2.v
  0       0                       0                       0                
  6   256   # axis2.motor.diff.v1
  0       0                       0                       0                
  6   256   # axis2.motor.diff.v2
  0       0                       0                       0                
  6   256   # axis2.motor.diff.i1
  0       0                       0                       0                
  6   256   # axis2.motor.diff.i2
  0       0                       0                       0                
  6   260   # axis2.motor.diff.p1.v
  0       0                       0                       0                
  6   388   # axis2.motor.diff.p1.i
  0       0                       0                       0                
  6   388   # axis2.motor.diff.n1.i
  0       0                       0                       0                
  6   260   # axis2.motor.diff.n2.v
  0       0                       0                       0                
  6   769   # axis2.motor.emf.useSupport
  0       1                       0                       0                
  6   256   # axis2.motor.emf.k
  0       0                       0                       0                
  6   256   # axis2.motor.emf.v
  0       0                       0                       0                
  6   256   # axis2.motor.emf.phi
  0       0                       0                       0                
  6   256   # axis2.motor.emf.tau
  0       0                       0                       0                
  6   260   # axis2.motor.emf.n.v
 -1       0                       0                       0                
  1  1304   # axis2.motor.emf.fixed.phi0
  0       0                       0                       0                
  6   256   # axis2.motor.La.v
  0       0                       0                       0                
  6   260   # axis2.motor.La.p.v
 -1       0                       0                       0                
  2   272   # axis2.motor.La.i
  0       0                       0                       0                
  3   256   # axis2.motor.La.der(i)
  0       1                       0                       0                
  6   256   # axis2.motor.La.L
 -1     250                       0                       0                
  1   280   # axis2.motor.Ra.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Ra.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Ra.alpha
  0       0                       0                       0                
  6   256   # axis2.motor.Ra.v
  0       0                       0                       0                
  6   769   # axis2.motor.Ra.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Ra.T
  0       0                       0                       0                
  6   256   # axis2.motor.Ra.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Ra.R_actual
 -1     100                       0                       0                
  1   280   # axis2.motor.Rd2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Rd2.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Rd2.alpha
  0       0                       0                       0                
  6   256   # axis2.motor.Rd2.v
  0       0                       0                       0                
  6   769   # axis2.motor.Rd2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Rd2.T
  0       0                       0                       0                
  6   256   # axis2.motor.Rd2.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Rd2.R_actual
 -1       0                       0                       0                
  2   272   # axis2.motor.C.v
  0       0                       0                       0                
  3   256   # axis2.motor.C.der(v)
  0       0                       0                       0                
  6   260   # axis2.motor.C.p.v
  0       0                       0                       0                
  6   388   # axis2.motor.C.p.i
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis2.motor.C.C
  0       0                       0                       0                
  6   256   # axis2.motor.OpI.v1
  0       0                       0                       0                
  6   256   # axis2.motor.OpI.i1
  0       0                       0                       0                
  6   260   # axis2.motor.OpI.p1.v
  0       0                       0                       0                
  6   388   # axis2.motor.OpI.p1.i
  0       0                       0                       0                
  6   260   # axis2.motor.OpI.n1.v
  0       0                       0                       0                
  6   388   # axis2.motor.OpI.n1.i
  0       0                       0                       0                
  6   260   # axis2.motor.OpI.n2.v
 -1      10                       0                       0                
  1   280   # axis2.motor.Ri.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Ri.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Ri.alpha
  0       0                       0                       0                
  6   260   # axis2.motor.Ri.n.v
  0       0                       0                       0                
  6   769   # axis2.motor.Ri.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Ri.T
  0       0                       0                       0                
  6   256   # axis2.motor.Ri.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Ri.R_actual
 -1     100                       0                       0                
  1   280   # axis2.motor.Rd1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Rd1.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Rd1.alpha
  0       0                       0                       0                
  6   256   # axis2.motor.Rd1.v
  0       0                       0                       0                
  6   769   # axis2.motor.Rd1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Rd1.T
  0       0                       0                       0                
  6   256   # axis2.motor.Rd1.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Rd1.R_actual
 -1     200                       0                       0                
  1   280   # axis2.motor.Rp1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Rp1.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Rp1.alpha
  0       0                       0                       0                
  6   256   # axis2.motor.Rp1.v
  0       0                       0                       0                
  6   388   # axis2.motor.Rp1.p.i
  0       0                       0                       0                
  6   769   # axis2.motor.Rp1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Rp1.T
  0       0                       0                       0                
  6   256   # axis2.motor.Rp1.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Rp1.R_actual
 -1      50                       0                       0                
  1   280   # axis2.motor.Rp2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Rp2.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Rp2.alpha
  0       0                       0                       0                
  6   260   # axis2.motor.Rp2.n.v
  0       0                       0                       0                
  6   769   # axis2.motor.Rp2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Rp2.T
  0       0                       0                       0                
  6   256   # axis2.motor.Rp2.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Rp2.R_actual
 -1     100                       0                       0                
  1   280   # axis2.motor.Rd4.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Rd4.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Rd4.alpha
  0       0                       0                       0                
  6   388   # axis2.motor.Rd4.p.i
  0       0                       0                       0                
  6   260   # axis2.motor.Rd4.n.v
  0       0                       0                       0                
  6   769   # axis2.motor.Rd4.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Rd4.T
  0       0                       0                       0                
  6   256   # axis2.motor.Rd4.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Rd4.R_actual
  0       0                       0                       0                
  6   260   # axis2.motor.hall2.p.v
  0       0                       0                       0                
  6   260   # axis2.motor.hall2.n.v
 -1     100                       0                       0                
  1   280   # axis2.motor.Rd3.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis2.motor.Rd3.T_ref
 -1       0                       0                       0                
  1   280   # axis2.motor.Rd3.alpha
  0       0                       0                       0                
  6   256   # axis2.motor.Rd3.v
  0       0                       0                       0                
  6   769   # axis2.motor.Rd3.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Rd3.T
  0       0                       0                       0                
  6   256   # axis2.motor.Rd3.LossPower
  0       0                       0                       0                
  6   256   # axis2.motor.Rd3.R_actual
  0       0                       0                       0                
  6   260   # axis2.motor.g1.p.v
  0       0                       0                       0                
  6   260   # axis2.motor.g2.p.v
  0       0                       0                       0                
  6   260   # axis2.motor.g3.p.v
  0       0                       0                       0                
  6   388   # axis2.motor.g3.p.i
  0       0                       0                       0                
  6   260   # axis2.motor.hall1.p.v
  0       0                       0                       0                
  6   260   # axis2.motor.hall1.n.v
  0       0                       0                       0                
  6   260   # axis2.motor.g4.p.v
  0       0                       0                       0                
  6   260   # axis2.motor.g5.p.v
  0       0                       0                       0                
  6   388   # axis2.motor.phi.flange.tau
  0       0                       0                       0                
  6   388   # axis2.motor.speed.flange.tau
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis2.motor.Jmotor.J
  0       3                       1                       5                
  6   770   # axis2.motor.Jmotor.stateSelect
 -1       1                       0                       0                
  1   280   # axis2.motor.convert1.k
 -1       1                       0                       0                
  1   280   # axis2.motor.convert2.k
  0       0                       0                       0                
  6   256   # axis2.controller.kp
  0       0                       0                       0                
  6   256   # axis2.controller.ks
  0       0                       0                       0                
  6   256   # axis2.controller.Ts
  0       0                       0                       0                
  6   256   # axis2.controller.ratio
  0       1                       0                       0                
  6   256   # axis2.controller.gain1.k
  0       0                       0                       0                
  6   256   # axis2.controller.gain1.y
  0       0                       0                       0                
  6   256   # axis2.controller.PI.k
  0       1                  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # axis2.controller.PI.T
  0       1                       1                       4                
  6   258   # axis2.controller.PI.initType
 -1       0                       0                       0                
  1   280   # axis2.controller.PI.x_start
 -1       0                       0                       0                
  1   280   # axis2.controller.PI.y_start
  0       0                       0                       0                
  6   256   # axis2.controller.PI.u
 -1       0                       0                       0                
  2   272   # axis2.controller.PI.x
  0       0                       0                       0                
  3   256   # axis2.controller.PI.der(x)
  0       0                       0                       0                
  6   256   # axis2.controller.feedback1.y
  0       1                       0                       0                
  6   256   # axis2.controller.P.k
  0       0                       0                       0                
  6   256   # axis2.controller.P.y
 -1       1                       0                       0                
  1   280   # axis2.controller.add3.k1
 -1       1                       0                       0                
  1   280   # axis2.controller.add3.k2
 -1      -1                       0                       0                
  1   280   # axis2.controller.add3.k3
  0       0                       0                       0                
  6   256   # axis2.controller.add3.u1
  0       1                       0                       0                
  6   256   # axis2.controller.gain2.k
  0       0                       0                       0                
  6   388   # axis2.angleSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis2.speedSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis2.accSensor.flange.tau
  0       1                       0                       0                
  6   257   # axis2.initializeFlange.use_phi_start
  0       1                       0                       0                
  6   257   # axis2.initializeFlange.use_w_start
  0       1                       0                       0                
  6   257   # axis2.initializeFlange.use_a_start
  0       4                       1                       5                
  6   258   # axis2.initializeFlange.stateSelect
  0       0                       0                       0                
  6   388   # axis2.initializeFlange.flange.tau
  0       0                       0                       0                
  6  1412   # axis2.initializeFlange.set_phi_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis2.initializeFlange.set_w_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis2.initializeFlange.set_a_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis2.initializeFlange.set_flange_tau.flange.tau
 -1       0                       0                       0                
  1   280   # axis2.const.k
 -1       8                       0                       0                
  1   280   # axis2.c
 -1  1.0000000000000000E-02       0                       0                
  1   280   # axis2.cd
  0       0                       0                       0                
  6   256   # axis3.kp
  0       0                       0                       0                
  6   256   # axis3.ks
  0       0                       0                       0                
  6   256   # axis3.Ts
 -1  1.1616000000000000E+00       0                       0                
  1   280   # axis3.k
 -1    5500                       0                       0                
  1   280   # axis3.w
 -1  5.9999999999999998E-01       0                       0                
  1   280   # axis3.D
 -1  1.2999999999999999E-03       0                 1.7976931348623157E+308
  1   280   # axis3.J
 -1      60                       0                       0                
  1   280   # axis3.ratio
 -1  6.9999999999999996E-01       0                       0                
  1   280   # axis3.Rv0
 -1  1.5384615384615385E-03       0                       0                
  1   280   # axis3.Rv1
 -1       1                       0                       0                
  1   280   # axis3.peak
  0       0                       0                       0                
  6   388   # axis3.gear.flange_a.tau
  0       0                       0                       0                
  6   256   # axis3.gear.i
  0       0                       0                       0                
  6   256   # axis3.gear.c
  0       0                       0                       0                
  6   256   # axis3.gear.d
  0       0                       0                       0                
  6   256   # axis3.gear.Rv0
  0       0                       0                       0                
  6   256   # axis3.gear.Rv1
  0       0                       0                       0                
  6   256   # axis3.gear.peak
  0       1                       0                       0                
  6   256   # axis3.gear.unitAngularVelocity
  0       1                       0                       0                
  6   256   # axis3.gear.unitTorque
  0       0                       0                       0                
  6   769   # axis3.gear.gear.useSupport
  0       0                       0                       0                
  6   260   # axis3.gear.gear.flange_a.phi
  0       0                       0                       0                
  6   260   # axis3.gear.gear.flange_a.der(phi)
  0       0                       0                       0                
  6   260   # axis3.gear.gear.flange_a.der(phi, 2)
  0       0                       0                       0                
  6   388   # axis3.gear.gear.flange_a.tau
  0       0                       0                       0                
  6  1280   # axis3.gear.gear.phi_support
  0       1                       0                       0                
  6   256   # axis3.gear.gear.ratio
  0  100000                       0                 1.7976931348623157E+308
  6   256   # axis3.gear.spring.c
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis3.gear.spring.d
 -1       0                       0                       0                
  1   280   # axis3.gear.spring.phi_rel0
 -1       0                       0                       0                
  2   272   # axis3.gear.spring.phi_rel
  0       0                       0                       0                
  3  4352   # axis3.gear.spring.der(phi_rel)
 -1       0                       0                       0                
  2   272   # axis3.gear.spring.w_rel
  0       0                       0                       0                
  3   256   # axis3.gear.spring.der(w_rel)
  0  1.0000000000000000E-04       0                 1.7976931348623157E+308
  6   256   # axis3.gear.spring.phi_nominal
  0       4                       1                       5                
  6   770   # axis3.gear.spring.stateSelect
  0       0                       0                       0                
  6   769   # axis3.gear.spring.useHeatPort
  0       0                       0                       0                
  6   256   # axis3.gear.spring.lossPower
  0       0                       0                       0                
  6  1280   # axis3.gear.spring.tau_c
  0       0                       0                       0                
  6  1280   # axis3.gear.spring.tau_d
  0       0                       0                       0                
  6   769   # axis3.gear.bearingFriction.useSupport
  0       0                       0                       0                
  6  1280   # axis3.gear.bearingFriction.phi_support
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau_pos[1, 1]
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau_pos[1, 2]
  0       1                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau_pos[2, 1]
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau_pos[2, 2]
 -1       1                       1                 1.7976931348623157E+308
  1   280   # axis3.gear.bearingFriction.peak
 -1  1.0000000000000000E+10       0                       0                
  1   280   # axis3.gear.bearingFriction.w_small
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau0
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau0_max
  0       0                       0                       0                
  6   257   # axis3.gear.bearingFriction.free
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.sa
  0       0                       0                       0                
  6   361   # axis3.gear.bearingFriction.startForward
  0       0                       0                       0                
  6   361   # axis3.gear.bearingFriction.startBackward
  0       0                       0                       0                
  6   353   # axis3.gear.bearingFriction.locked
  0       3                       0                       0                
  6   258   # axis3.gear.bearingFriction.Unknown
  0       2                       0                       0                
  6   258   # axis3.gear.bearingFriction.Free
  0       1                       0                       0                
  6   258   # axis3.gear.bearingFriction.Forward
  0       0                       0                       0                
  6   258   # axis3.gear.bearingFriction.Stuck
  0      -1                       0                       0                
  6   258   # axis3.gear.bearingFriction.Backward
  0       3                      -1                       3                
  6   330   # axis3.gear.bearingFriction.mode
  0       1                       0                       0                
  6   768   # axis3.gear.bearingFriction.unitAngularAcceleration
  0       1                       0                       0                
  6   768   # axis3.gear.bearingFriction.unitTorque
  0       0                       0                       0                
  6   769   # axis3.gear.bearingFriction.useHeatPort
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.lossPower
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.phi
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.tau
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.w
  0       0                       0                       0                
  6   256   # axis3.gear.bearingFriction.der(w)
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis3.motor.J
  0       0                       0                       0                
  6   256   # axis3.motor.k
  0       0                       0                       0                
  6   256   # axis3.motor.w
  0       0                       0                       0                
  6   256   # axis3.motor.D
 -1     315                       0                       0                
  1   280   # axis3.motor.w_max
 -1       9                       0                       0                
  1   280   # axis3.motor.i_max
  0       0                       0                       0                
  6   260   # axis3.motor.Vs.p.v
  0       0                       0                       0                
  6   388   # axis3.motor.Vs.p.i
  0       0                       0                       0                
  6   260   # axis3.motor.Vs.n.v
  0       0                       0                       0                
  6   256   # axis3.motor.power.v1
  0       0                       0                       0                
  6   256   # axis3.motor.power.v2
  0       0                       0                       0                
  6   256   # axis3.motor.power.i1
  0       0                       0                       0                
  6   256   # axis3.motor.power.i2
  0       0                       0                       0                
  6   388   # axis3.motor.power.p1.i
  0       0                       0                       0                
  6   388   # axis3.motor.power.n1.i
  0       0                       0                       0                
  6   260   # axis3.motor.power.n2.v
  0       0                       0                       0                
  6   256   # axis3.motor.diff.v1
  0       0                       0                       0                
  6   256   # axis3.motor.diff.v2
  0       0                       0                       0                
  6   256   # axis3.motor.diff.i1
  0       0                       0                       0                
  6   256   # axis3.motor.diff.i2
  0       0                       0                       0                
  6   260   # axis3.motor.diff.p1.v
  0       0                       0                       0                
  6   388   # axis3.motor.diff.p1.i
  0       0                       0                       0                
  6   388   # axis3.motor.diff.n1.i
  0       0                       0                       0                
  6   260   # axis3.motor.diff.n2.v
  0       0                       0                       0                
  6   769   # axis3.motor.emf.useSupport
  0       1                       0                       0                
  6   256   # axis3.motor.emf.k
  0       0                       0                       0                
  6   256   # axis3.motor.emf.v
  0       0                       0                       0                
  6   256   # axis3.motor.emf.phi
  0       0                       0                       0                
  6   256   # axis3.motor.emf.tau
  0       0                       0                       0                
  6   260   # axis3.motor.emf.n.v
 -1       0                       0                       0                
  1  1304   # axis3.motor.emf.fixed.phi0
  0       0                       0                       0                
  6   256   # axis3.motor.La.v
  0       0                       0                       0                
  6   260   # axis3.motor.La.p.v
 -1       0                       0                       0                
  2   272   # axis3.motor.La.i
  0       0                       0                       0                
  3   256   # axis3.motor.La.der(i)
  0       1                       0                       0                
  6   256   # axis3.motor.La.L
 -1     250                       0                       0                
  1   280   # axis3.motor.Ra.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Ra.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Ra.alpha
  0       0                       0                       0                
  6   256   # axis3.motor.Ra.v
  0       0                       0                       0                
  6   769   # axis3.motor.Ra.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Ra.T
  0       0                       0                       0                
  6   256   # axis3.motor.Ra.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Ra.R_actual
 -1     100                       0                       0                
  1   280   # axis3.motor.Rd2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Rd2.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Rd2.alpha
  0       0                       0                       0                
  6   256   # axis3.motor.Rd2.v
  0       0                       0                       0                
  6   769   # axis3.motor.Rd2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Rd2.T
  0       0                       0                       0                
  6   256   # axis3.motor.Rd2.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Rd2.R_actual
 -1       0                       0                       0                
  2   272   # axis3.motor.C.v
  0       0                       0                       0                
  3   256   # axis3.motor.C.der(v)
  0       0                       0                       0                
  6   260   # axis3.motor.C.p.v
  0       0                       0                       0                
  6   388   # axis3.motor.C.p.i
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis3.motor.C.C
  0       0                       0                       0                
  6   256   # axis3.motor.OpI.v1
  0       0                       0                       0                
  6   256   # axis3.motor.OpI.i1
  0       0                       0                       0                
  6   260   # axis3.motor.OpI.p1.v
  0       0                       0                       0                
  6   388   # axis3.motor.OpI.p1.i
  0       0                       0                       0                
  6   260   # axis3.motor.OpI.n1.v
  0       0                       0                       0                
  6   388   # axis3.motor.OpI.n1.i
  0       0                       0                       0                
  6   260   # axis3.motor.OpI.n2.v
 -1      10                       0                       0                
  1   280   # axis3.motor.Ri.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Ri.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Ri.alpha
  0       0                       0                       0                
  6   260   # axis3.motor.Ri.n.v
  0       0                       0                       0                
  6   769   # axis3.motor.Ri.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Ri.T
  0       0                       0                       0                
  6   256   # axis3.motor.Ri.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Ri.R_actual
 -1     100                       0                       0                
  1   280   # axis3.motor.Rd1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Rd1.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Rd1.alpha
  0       0                       0                       0                
  6   256   # axis3.motor.Rd1.v
  0       0                       0                       0                
  6   769   # axis3.motor.Rd1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Rd1.T
  0       0                       0                       0                
  6   256   # axis3.motor.Rd1.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Rd1.R_actual
 -1     200                       0                       0                
  1   280   # axis3.motor.Rp1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Rp1.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Rp1.alpha
  0       0                       0                       0                
  6   256   # axis3.motor.Rp1.v
  0       0                       0                       0                
  6   388   # axis3.motor.Rp1.p.i
  0       0                       0                       0                
  6   769   # axis3.motor.Rp1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Rp1.T
  0       0                       0                       0                
  6   256   # axis3.motor.Rp1.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Rp1.R_actual
 -1      50                       0                       0                
  1   280   # axis3.motor.Rp2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Rp2.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Rp2.alpha
  0       0                       0                       0                
  6   260   # axis3.motor.Rp2.n.v
  0       0                       0                       0                
  6   769   # axis3.motor.Rp2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Rp2.T
  0       0                       0                       0                
  6   256   # axis3.motor.Rp2.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Rp2.R_actual
 -1     100                       0                       0                
  1   280   # axis3.motor.Rd4.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Rd4.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Rd4.alpha
  0       0                       0                       0                
  6   388   # axis3.motor.Rd4.p.i
  0       0                       0                       0                
  6   260   # axis3.motor.Rd4.n.v
  0       0                       0                       0                
  6   769   # axis3.motor.Rd4.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Rd4.T
  0       0                       0                       0                
  6   256   # axis3.motor.Rd4.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Rd4.R_actual
  0       0                       0                       0                
  6   260   # axis3.motor.hall2.p.v
  0       0                       0                       0                
  6   260   # axis3.motor.hall2.n.v
 -1     100                       0                       0                
  1   280   # axis3.motor.Rd3.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis3.motor.Rd3.T_ref
 -1       0                       0                       0                
  1   280   # axis3.motor.Rd3.alpha
  0       0                       0                       0                
  6   256   # axis3.motor.Rd3.v
  0       0                       0                       0                
  6   769   # axis3.motor.Rd3.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Rd3.T
  0       0                       0                       0                
  6   256   # axis3.motor.Rd3.LossPower
  0       0                       0                       0                
  6   256   # axis3.motor.Rd3.R_actual
  0       0                       0                       0                
  6   260   # axis3.motor.g1.p.v
  0       0                       0                       0                
  6   260   # axis3.motor.g2.p.v
  0       0                       0                       0                
  6   260   # axis3.motor.g3.p.v
  0       0                       0                       0                
  6   388   # axis3.motor.g3.p.i
  0       0                       0                       0                
  6   260   # axis3.motor.hall1.p.v
  0       0                       0                       0                
  6   260   # axis3.motor.hall1.n.v
  0       0                       0                       0                
  6   260   # axis3.motor.g4.p.v
  0       0                       0                       0                
  6   260   # axis3.motor.g5.p.v
  0       0                       0                       0                
  6   388   # axis3.motor.phi.flange.tau
  0       0                       0                       0                
  6   388   # axis3.motor.speed.flange.tau
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis3.motor.Jmotor.J
  0       3                       1                       5                
  6   770   # axis3.motor.Jmotor.stateSelect
 -1       1                       0                       0                
  1   280   # axis3.motor.convert1.k
 -1       1                       0                       0                
  1   280   # axis3.motor.convert2.k
  0       0                       0                       0                
  6   256   # axis3.controller.kp
  0       0                       0                       0                
  6   256   # axis3.controller.ks
  0       0                       0                       0                
  6   256   # axis3.controller.Ts
  0       0                       0                       0                
  6   256   # axis3.controller.ratio
  0       1                       0                       0                
  6   256   # axis3.controller.gain1.k
  0       0                       0                       0                
  6   256   # axis3.controller.gain1.y
  0       0                       0                       0                
  6   256   # axis3.controller.PI.k
  0       1                  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # axis3.controller.PI.T
  0       1                       1                       4                
  6   258   # axis3.controller.PI.initType
 -1       0                       0                       0                
  1   280   # axis3.controller.PI.x_start
 -1       0                       0                       0                
  1   280   # axis3.controller.PI.y_start
  0       0                       0                       0                
  6   256   # axis3.controller.PI.u
 -1       0                       0                       0                
  2   272   # axis3.controller.PI.x
  0       0                       0                       0                
  3   256   # axis3.controller.PI.der(x)
  0       0                       0                       0                
  6   256   # axis3.controller.feedback1.y
  0       1                       0                       0                
  6   256   # axis3.controller.P.k
  0       0                       0                       0                
  6   256   # axis3.controller.P.y
 -1       1                       0                       0                
  1   280   # axis3.controller.add3.k1
 -1       1                       0                       0                
  1   280   # axis3.controller.add3.k2
 -1      -1                       0                       0                
  1   280   # axis3.controller.add3.k3
  0       0                       0                       0                
  6   256   # axis3.controller.add3.u1
  0       1                       0                       0                
  6   256   # axis3.controller.gain2.k
  0       0                       0                       0                
  6   388   # axis3.angleSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis3.speedSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis3.accSensor.flange.tau
  0       1                       0                       0                
  6   257   # axis3.initializeFlange.use_phi_start
  0       1                       0                       0                
  6   257   # axis3.initializeFlange.use_w_start
  0       1                       0                       0                
  6   257   # axis3.initializeFlange.use_a_start
  0       4                       1                       5                
  6   258   # axis3.initializeFlange.stateSelect
  0       0                       0                       0                
  6   388   # axis3.initializeFlange.flange.tau
  0       0                       0                       0                
  6  1412   # axis3.initializeFlange.set_phi_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis3.initializeFlange.set_w_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis3.initializeFlange.set_a_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis3.initializeFlange.set_flange_tau.flange.tau
 -1       0                       0                       0                
  1   280   # axis3.const.k
 -1      58                       0                       0                
  1   280   # axis3.c
 -1  4.0000000000000001E-02       0                       0                
  1   280   # axis3.cd
  0       0                       0                       0                
  6   256   # axis4.kp
  0       0                       0                       0                
  6   256   # axis4.ks
  0       0                       0                       0                
  6   256   # axis4.Ts
 -1  2.3649999999999999E-01       0                       0                
  1   280   # axis4.k
 -1    6250                       0                       0                
  1   280   # axis4.w
 -1  5.5000000000000004E-01       0                       0                
  1   280   # axis4.D
 -1  1.6000000000000001E-04       0                 1.7976931348623157E+308
  1   280   # axis4.J
 -1     -99                       0                       0                
  1   280   # axis4.ratio
 -1  2.1800000000000001E+01       0                       0                
  1   280   # axis4.Rv0
 -1  9.8000000000000007E+00       0                       0                
  1   280   # axis4.Rv1
 -1  1.2247706422018347E+00       0                       0                
  1   280   # axis4.peak
  0       0                       0                       0                
  6   388   # axis4.gear.flange_a.tau
  0       0                       0                       0                
  6   256   # axis4.gear.i
  0       0                       0                       0                
  6   256   # axis4.gear.Rv0
  0       0                       0                       0                
  6   256   # axis4.gear.Rv1
  0       0                       0                       0                
  6   256   # axis4.gear.peak
  0       1                       0                       0                
  6   256   # axis4.gear.unitAngularVelocity
  0       1                       0                       0                
  6   256   # axis4.gear.unitTorque
  0       0                       0                       0                
  6   769   # axis4.gear.gear.useSupport
  0       0                       0                       0                
  6   388   # axis4.gear.gear.flange_b.tau
  0       0                       0                       0                
  6  1280   # axis4.gear.gear.phi_support
  0       1                       0                       0                
  6   256   # axis4.gear.gear.ratio
  0       0                       0                       0                
  6   769   # axis4.gear.bearingFriction.useSupport
  0       0                       0                       0                
  6  1280   # axis4.gear.bearingFriction.phi_support
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau_pos[1, 1]
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau_pos[1, 2]
  0       1                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau_pos[2, 1]
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau_pos[2, 2]
  0       1                       1                 1.7976931348623157E+308
  6   256   # axis4.gear.bearingFriction.peak
 -1  1.0000000000000000E+10       0                       0                
  1   280   # axis4.gear.bearingFriction.w_small
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau0
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau0_max
  0       0                       0                       0                
  6   257   # axis4.gear.bearingFriction.free
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.sa
  0       0                       0                       0                
  6   361   # axis4.gear.bearingFriction.startForward
  0       0                       0                       0                
  6   361   # axis4.gear.bearingFriction.startBackward
  0       0                       0                       0                
  6   353   # axis4.gear.bearingFriction.locked
  0       3                       0                       0                
  6   258   # axis4.gear.bearingFriction.Unknown
  0       2                       0                       0                
  6   258   # axis4.gear.bearingFriction.Free
  0       1                       0                       0                
  6   258   # axis4.gear.bearingFriction.Forward
  0       0                       0                       0                
  6   258   # axis4.gear.bearingFriction.Stuck
  0      -1                       0                       0                
  6   258   # axis4.gear.bearingFriction.Backward
  0       3                      -1                       3                
  6   330   # axis4.gear.bearingFriction.mode
  0       1                       0                       0                
  6   768   # axis4.gear.bearingFriction.unitAngularAcceleration
  0       1                       0                       0                
  6   768   # axis4.gear.bearingFriction.unitTorque
  0       0                       0                       0                
  6   769   # axis4.gear.bearingFriction.useHeatPort
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.lossPower
  0       0                       0                       0                
  6   256   # axis4.gear.bearingFriction.tau
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis4.motor.J
  0       0                       0                       0                
  6   256   # axis4.motor.k
  0       0                       0                       0                
  6   256   # axis4.motor.w
  0       0                       0                       0                
  6   256   # axis4.motor.D
 -1     315                       0                       0                
  1   280   # axis4.motor.w_max
 -1       9                       0                       0                
  1   280   # axis4.motor.i_max
  0       0                       0                       0                
  6   260   # axis4.motor.Vs.p.v
  0       0                       0                       0                
  6   388   # axis4.motor.Vs.p.i
  0       0                       0                       0                
  6   260   # axis4.motor.Vs.n.v
  0       0                       0                       0                
  6   256   # axis4.motor.power.v1
  0       0                       0                       0                
  6   256   # axis4.motor.power.v2
  0       0                       0                       0                
  6   256   # axis4.motor.power.i1
  0       0                       0                       0                
  6   256   # axis4.motor.power.i2
  0       0                       0                       0                
  6   388   # axis4.motor.power.p1.i
  0       0                       0                       0                
  6   388   # axis4.motor.power.n1.i
  0       0                       0                       0                
  6   260   # axis4.motor.power.n2.v
  0       0                       0                       0                
  6   256   # axis4.motor.diff.v1
  0       0                       0                       0                
  6   256   # axis4.motor.diff.v2
  0       0                       0                       0                
  6   256   # axis4.motor.diff.i1
  0       0                       0                       0                
  6   256   # axis4.motor.diff.i2
  0       0                       0                       0                
  6   260   # axis4.motor.diff.p1.v
  0       0                       0                       0                
  6   388   # axis4.motor.diff.p1.i
  0       0                       0                       0                
  6   388   # axis4.motor.diff.n1.i
  0       0                       0                       0                
  6   260   # axis4.motor.diff.n2.v
  0       0                       0                       0                
  6   769   # axis4.motor.emf.useSupport
  0       1                       0                       0                
  6   256   # axis4.motor.emf.k
  0       0                       0                       0                
  6   256   # axis4.motor.emf.v
  0       0                       0                       0                
  6   256   # axis4.motor.emf.phi
  0       0                       0                       0                
  6   256   # axis4.motor.emf.tau
  0       0                       0                       0                
  6   260   # axis4.motor.emf.n.v
 -1       0                       0                       0                
  1  1304   # axis4.motor.emf.fixed.phi0
  0       0                       0                       0                
  6   256   # axis4.motor.La.v
  0       0                       0                       0                
  6   260   # axis4.motor.La.p.v
 -1       0                       0                       0                
  2   272   # axis4.motor.La.i
  0       0                       0                       0                
  3   256   # axis4.motor.La.der(i)
  0       1                       0                       0                
  6   256   # axis4.motor.La.L
 -1     250                       0                       0                
  1   280   # axis4.motor.Ra.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Ra.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Ra.alpha
  0       0                       0                       0                
  6   256   # axis4.motor.Ra.v
  0       0                       0                       0                
  6   769   # axis4.motor.Ra.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Ra.T
  0       0                       0                       0                
  6   256   # axis4.motor.Ra.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Ra.R_actual
 -1     100                       0                       0                
  1   280   # axis4.motor.Rd2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Rd2.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Rd2.alpha
  0       0                       0                       0                
  6   256   # axis4.motor.Rd2.v
  0       0                       0                       0                
  6   769   # axis4.motor.Rd2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Rd2.T
  0       0                       0                       0                
  6   256   # axis4.motor.Rd2.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Rd2.R_actual
 -1       0                       0                       0                
  2   272   # axis4.motor.C.v
  0       0                       0                       0                
  3   256   # axis4.motor.C.der(v)
  0       0                       0                       0                
  6   260   # axis4.motor.C.p.v
  0       0                       0                       0                
  6   388   # axis4.motor.C.p.i
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis4.motor.C.C
  0       0                       0                       0                
  6   256   # axis4.motor.OpI.v1
  0       0                       0                       0                
  6   256   # axis4.motor.OpI.i1
  0       0                       0                       0                
  6   260   # axis4.motor.OpI.p1.v
  0       0                       0                       0                
  6   388   # axis4.motor.OpI.p1.i
  0       0                       0                       0                
  6   260   # axis4.motor.OpI.n1.v
  0       0                       0                       0                
  6   388   # axis4.motor.OpI.n1.i
  0       0                       0                       0                
  6   260   # axis4.motor.OpI.n2.v
 -1      10                       0                       0                
  1   280   # axis4.motor.Ri.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Ri.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Ri.alpha
  0       0                       0                       0                
  6   260   # axis4.motor.Ri.n.v
  0       0                       0                       0                
  6   769   # axis4.motor.Ri.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Ri.T
  0       0                       0                       0                
  6   256   # axis4.motor.Ri.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Ri.R_actual
 -1     100                       0                       0                
  1   280   # axis4.motor.Rd1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Rd1.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Rd1.alpha
  0       0                       0                       0                
  6   256   # axis4.motor.Rd1.v
  0       0                       0                       0                
  6   769   # axis4.motor.Rd1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Rd1.T
  0       0                       0                       0                
  6   256   # axis4.motor.Rd1.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Rd1.R_actual
 -1     200                       0                       0                
  1   280   # axis4.motor.Rp1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Rp1.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Rp1.alpha
  0       0                       0                       0                
  6   256   # axis4.motor.Rp1.v
  0       0                       0                       0                
  6   388   # axis4.motor.Rp1.p.i
  0       0                       0                       0                
  6   769   # axis4.motor.Rp1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Rp1.T
  0       0                       0                       0                
  6   256   # axis4.motor.Rp1.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Rp1.R_actual
 -1      50                       0                       0                
  1   280   # axis4.motor.Rp2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Rp2.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Rp2.alpha
  0       0                       0                       0                
  6   260   # axis4.motor.Rp2.n.v
  0       0                       0                       0                
  6   769   # axis4.motor.Rp2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Rp2.T
  0       0                       0                       0                
  6   256   # axis4.motor.Rp2.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Rp2.R_actual
 -1     100                       0                       0                
  1   280   # axis4.motor.Rd4.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Rd4.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Rd4.alpha
  0       0                       0                       0                
  6   388   # axis4.motor.Rd4.p.i
  0       0                       0                       0                
  6   260   # axis4.motor.Rd4.n.v
  0       0                       0                       0                
  6   769   # axis4.motor.Rd4.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Rd4.T
  0       0                       0                       0                
  6   256   # axis4.motor.Rd4.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Rd4.R_actual
  0       0                       0                       0                
  6   260   # axis4.motor.hall2.p.v
  0       0                       0                       0                
  6   260   # axis4.motor.hall2.n.v
 -1     100                       0                       0                
  1   280   # axis4.motor.Rd3.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis4.motor.Rd3.T_ref
 -1       0                       0                       0                
  1   280   # axis4.motor.Rd3.alpha
  0       0                       0                       0                
  6   256   # axis4.motor.Rd3.v
  0       0                       0                       0                
  6   769   # axis4.motor.Rd3.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Rd3.T
  0       0                       0                       0                
  6   256   # axis4.motor.Rd3.LossPower
  0       0                       0                       0                
  6   256   # axis4.motor.Rd3.R_actual
  0       0                       0                       0                
  6   260   # axis4.motor.g1.p.v
  0       0                       0                       0                
  6   260   # axis4.motor.g2.p.v
  0       0                       0                       0                
  6   260   # axis4.motor.g3.p.v
  0       0                       0                       0                
  6   388   # axis4.motor.g3.p.i
  0       0                       0                       0                
  6   260   # axis4.motor.hall1.p.v
  0       0                       0                       0                
  6   260   # axis4.motor.hall1.n.v
  0       0                       0                       0                
  6   260   # axis4.motor.g4.p.v
  0       0                       0                       0                
  6   260   # axis4.motor.g5.p.v
  0       0                       0                       0                
  6   388   # axis4.motor.phi.flange.tau
  0       0                       0                       0                
  6   260   # axis4.motor.speed.flange.phi
  0       0                       0                       0                
  6   388   # axis4.motor.speed.flange.tau
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis4.motor.Jmotor.J
  0       3                       1                       5                
  6   770   # axis4.motor.Jmotor.stateSelect
  0       0                       0                       0                
  6   256   # axis4.motor.Jmotor.w
  0       0                       0                       0                
  6   256   # axis4.motor.Jmotor.der(w)
 -1       1                       0                       0                
  1   280   # axis4.motor.convert1.k
 -1       1                       0                       0                
  1   280   # axis4.motor.convert2.k
  0       0                       0                       0                
  6   256   # axis4.controller.kp
  0       0                       0                       0                
  6   256   # axis4.controller.ks
  0       0                       0                       0                
  6   256   # axis4.controller.Ts
  0       0                       0                       0                
  6   256   # axis4.controller.ratio
  0       1                       0                       0                
  6   256   # axis4.controller.gain1.k
  0       0                       0                       0                
  6   256   # axis4.controller.gain1.y
  0       0                       0                       0                
  6   256   # axis4.controller.PI.k
  0       1                  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # axis4.controller.PI.T
  0       1                       1                       4                
  6   258   # axis4.controller.PI.initType
 -1       0                       0                       0                
  1   280   # axis4.controller.PI.x_start
 -1       0                       0                       0                
  1   280   # axis4.controller.PI.y_start
  0       0                       0                       0                
  6   256   # axis4.controller.PI.u
 -1       0                       0                       0                
  2   272   # axis4.controller.PI.x
  0       0                       0                       0                
  3   256   # axis4.controller.PI.der(x)
  0       0                       0                       0                
  6   256   # axis4.controller.feedback1.y
  0       1                       0                       0                
  6   256   # axis4.controller.P.k
  0       0                       0                       0                
  6   256   # axis4.controller.P.y
 -1       1                       0                       0                
  1   280   # axis4.controller.add3.k1
 -1       1                       0                       0                
  1   280   # axis4.controller.add3.k2
 -1      -1                       0                       0                
  1   280   # axis4.controller.add3.k3
  0       0                       0                       0                
  6   256   # axis4.controller.add3.u1
  0       1                       0                       0                
  6   256   # axis4.controller.gain2.k
  0       0                       0                       0                
  6   388   # axis4.angleSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis4.speedSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis4.accSensor.flange.tau
  0       1                       0                       0                
  6   257   # axis4.initializeFlange.use_phi_start
  0       1                       0                       0                
  6   257   # axis4.initializeFlange.use_w_start
  0       1                       0                       0                
  6   257   # axis4.initializeFlange.use_a_start
  0       4                       1                       5                
  6   258   # axis4.initializeFlange.stateSelect
  0       0                       0                       0                
  6   388   # axis4.initializeFlange.flange.tau
  0       0                       0                       0                
  6  1412   # axis4.initializeFlange.set_phi_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis4.initializeFlange.set_w_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis4.initializeFlange.set_a_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis4.initializeFlange.set_flange_tau.flange.tau
 -1       0                       0                       0                
  1   280   # axis4.const.k
  0       0                       0                       0                
  6   256   # axis5.kp
  0       0                       0                       0                
  6   256   # axis5.ks
  0       0                       0                       0                
  6   256   # axis5.Ts
 -1  2.6079999999999998E-01       0                       0                
  1   280   # axis5.k
 -1    6250                       0                       0                
  1   280   # axis5.w
 -1  5.5000000000000004E-01       0                       0                
  1   280   # axis5.D
 -1  1.8000000000000001E-04       0                 1.7976931348623157E+308
  1   280   # axis5.J
 -1  7.9200000000000003E+01       0                       0                
  1   280   # axis5.ratio
 -1  3.0100000000000001E+01       0                       0                
  1   280   # axis5.Rv0
 -1  2.9999999999999999E-02       0                       0                
  1   280   # axis5.Rv1
 -1  1.3156146179401993E+00       0                       0                
  1   280   # axis5.peak
  0       0                       0                       0                
  6   388   # axis5.gear.flange_a.tau
  0       0                       0                       0                
  6   256   # axis5.gear.i
  0       0                       0                       0                
  6   256   # axis5.gear.Rv0
  0       0                       0                       0                
  6   256   # axis5.gear.Rv1
  0       0                       0                       0                
  6   256   # axis5.gear.peak
  0       1                       0                       0                
  6   256   # axis5.gear.unitAngularVelocity
  0       1                       0                       0                
  6   256   # axis5.gear.unitTorque
  0       0                       0                       0                
  6   769   # axis5.gear.gear.useSupport
  0       0                       0                       0                
  6   388   # axis5.gear.gear.flange_b.tau
  0       0                       0                       0                
  6  1280   # axis5.gear.gear.phi_support
  0       1                       0                       0                
  6   256   # axis5.gear.gear.ratio
  0       0                       0                       0                
  6   769   # axis5.gear.bearingFriction.useSupport
  0       0                       0                       0                
  6  1280   # axis5.gear.bearingFriction.phi_support
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau_pos[1, 1]
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau_pos[1, 2]
  0       1                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau_pos[2, 1]
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau_pos[2, 2]
  0       1                       1                 1.7976931348623157E+308
  6   256   # axis5.gear.bearingFriction.peak
 -1  1.0000000000000000E+10       0                       0                
  1   280   # axis5.gear.bearingFriction.w_small
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau0
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau0_max
  0       0                       0                       0                
  6   257   # axis5.gear.bearingFriction.free
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.sa
  0       0                       0                       0                
  6   361   # axis5.gear.bearingFriction.startForward
  0       0                       0                       0                
  6   361   # axis5.gear.bearingFriction.startBackward
  0       0                       0                       0                
  6   353   # axis5.gear.bearingFriction.locked
  0       3                       0                       0                
  6   258   # axis5.gear.bearingFriction.Unknown
  0       2                       0                       0                
  6   258   # axis5.gear.bearingFriction.Free
  0       1                       0                       0                
  6   258   # axis5.gear.bearingFriction.Forward
  0       0                       0                       0                
  6   258   # axis5.gear.bearingFriction.Stuck
  0      -1                       0                       0                
  6   258   # axis5.gear.bearingFriction.Backward
  0       3                      -1                       3                
  6   330   # axis5.gear.bearingFriction.mode
  0       1                       0                       0                
  6   768   # axis5.gear.bearingFriction.unitAngularAcceleration
  0       1                       0                       0                
  6   768   # axis5.gear.bearingFriction.unitTorque
  0       0                       0                       0                
  6   769   # axis5.gear.bearingFriction.useHeatPort
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.lossPower
  0       0                       0                       0                
  6   256   # axis5.gear.bearingFriction.tau
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis5.motor.J
  0       0                       0                       0                
  6   256   # axis5.motor.k
  0       0                       0                       0                
  6   256   # axis5.motor.w
  0       0                       0                       0                
  6   256   # axis5.motor.D
 -1     315                       0                       0                
  1   280   # axis5.motor.w_max
 -1       9                       0                       0                
  1   280   # axis5.motor.i_max
  0       0                       0                       0                
  6   260   # axis5.motor.Vs.p.v
  0       0                       0                       0                
  6   388   # axis5.motor.Vs.p.i
  0       0                       0                       0                
  6   260   # axis5.motor.Vs.n.v
  0       0                       0                       0                
  6   256   # axis5.motor.power.v1
  0       0                       0                       0                
  6   256   # axis5.motor.power.v2
  0       0                       0                       0                
  6   256   # axis5.motor.power.i1
  0       0                       0                       0                
  6   256   # axis5.motor.power.i2
  0       0                       0                       0                
  6   388   # axis5.motor.power.p1.i
  0       0                       0                       0                
  6   388   # axis5.motor.power.n1.i
  0       0                       0                       0                
  6   260   # axis5.motor.power.n2.v
  0       0                       0                       0                
  6   256   # axis5.motor.diff.v1
  0       0                       0                       0                
  6   256   # axis5.motor.diff.v2
  0       0                       0                       0                
  6   256   # axis5.motor.diff.i1
  0       0                       0                       0                
  6   256   # axis5.motor.diff.i2
  0       0                       0                       0                
  6   260   # axis5.motor.diff.p1.v
  0       0                       0                       0                
  6   388   # axis5.motor.diff.p1.i
  0       0                       0                       0                
  6   388   # axis5.motor.diff.n1.i
  0       0                       0                       0                
  6   260   # axis5.motor.diff.n2.v
  0       0                       0                       0                
  6   769   # axis5.motor.emf.useSupport
  0       1                       0                       0                
  6   256   # axis5.motor.emf.k
  0       0                       0                       0                
  6   256   # axis5.motor.emf.v
  0       0                       0                       0                
  6   256   # axis5.motor.emf.phi
  0       0                       0                       0                
  6   256   # axis5.motor.emf.tau
  0       0                       0                       0                
  6   260   # axis5.motor.emf.n.v
 -1       0                       0                       0                
  1  1304   # axis5.motor.emf.fixed.phi0
  0       0                       0                       0                
  6   256   # axis5.motor.La.v
  0       0                       0                       0                
  6   260   # axis5.motor.La.p.v
 -1       0                       0                       0                
  2   272   # axis5.motor.La.i
  0       0                       0                       0                
  3   256   # axis5.motor.La.der(i)
  0       1                       0                       0                
  6   256   # axis5.motor.La.L
 -1     250                       0                       0                
  1   280   # axis5.motor.Ra.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Ra.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Ra.alpha
  0       0                       0                       0                
  6   256   # axis5.motor.Ra.v
  0       0                       0                       0                
  6   769   # axis5.motor.Ra.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Ra.T
  0       0                       0                       0                
  6   256   # axis5.motor.Ra.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Ra.R_actual
 -1     100                       0                       0                
  1   280   # axis5.motor.Rd2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Rd2.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Rd2.alpha
  0       0                       0                       0                
  6   256   # axis5.motor.Rd2.v
  0       0                       0                       0                
  6   769   # axis5.motor.Rd2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Rd2.T
  0       0                       0                       0                
  6   256   # axis5.motor.Rd2.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Rd2.R_actual
 -1       0                       0                       0                
  2   272   # axis5.motor.C.v
  0       0                       0                       0                
  3   256   # axis5.motor.C.der(v)
  0       0                       0                       0                
  6   260   # axis5.motor.C.p.v
  0       0                       0                       0                
  6   388   # axis5.motor.C.p.i
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis5.motor.C.C
  0       0                       0                       0                
  6   256   # axis5.motor.OpI.v1
  0       0                       0                       0                
  6   256   # axis5.motor.OpI.i1
  0       0                       0                       0                
  6   260   # axis5.motor.OpI.p1.v
  0       0                       0                       0                
  6   388   # axis5.motor.OpI.p1.i
  0       0                       0                       0                
  6   260   # axis5.motor.OpI.n1.v
  0       0                       0                       0                
  6   388   # axis5.motor.OpI.n1.i
  0       0                       0                       0                
  6   260   # axis5.motor.OpI.n2.v
 -1      10                       0                       0                
  1   280   # axis5.motor.Ri.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Ri.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Ri.alpha
  0       0                       0                       0                
  6   260   # axis5.motor.Ri.n.v
  0       0                       0                       0                
  6   769   # axis5.motor.Ri.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Ri.T
  0       0                       0                       0                
  6   256   # axis5.motor.Ri.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Ri.R_actual
 -1     100                       0                       0                
  1   280   # axis5.motor.Rd1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Rd1.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Rd1.alpha
  0       0                       0                       0                
  6   256   # axis5.motor.Rd1.v
  0       0                       0                       0                
  6   769   # axis5.motor.Rd1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Rd1.T
  0       0                       0                       0                
  6   256   # axis5.motor.Rd1.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Rd1.R_actual
 -1     200                       0                       0                
  1   280   # axis5.motor.Rp1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Rp1.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Rp1.alpha
  0       0                       0                       0                
  6   256   # axis5.motor.Rp1.v
  0       0                       0                       0                
  6   388   # axis5.motor.Rp1.p.i
  0       0                       0                       0                
  6   769   # axis5.motor.Rp1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Rp1.T
  0       0                       0                       0                
  6   256   # axis5.motor.Rp1.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Rp1.R_actual
 -1      50                       0                       0                
  1   280   # axis5.motor.Rp2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Rp2.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Rp2.alpha
  0       0                       0                       0                
  6   260   # axis5.motor.Rp2.n.v
  0       0                       0                       0                
  6   769   # axis5.motor.Rp2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Rp2.T
  0       0                       0                       0                
  6   256   # axis5.motor.Rp2.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Rp2.R_actual
 -1     100                       0                       0                
  1   280   # axis5.motor.Rd4.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Rd4.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Rd4.alpha
  0       0                       0                       0                
  6   388   # axis5.motor.Rd4.p.i
  0       0                       0                       0                
  6   260   # axis5.motor.Rd4.n.v
  0       0                       0                       0                
  6   769   # axis5.motor.Rd4.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Rd4.T
  0       0                       0                       0                
  6   256   # axis5.motor.Rd4.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Rd4.R_actual
  0       0                       0                       0                
  6   260   # axis5.motor.hall2.p.v
  0       0                       0                       0                
  6   260   # axis5.motor.hall2.n.v
 -1     100                       0                       0                
  1   280   # axis5.motor.Rd3.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis5.motor.Rd3.T_ref
 -1       0                       0                       0                
  1   280   # axis5.motor.Rd3.alpha
  0       0                       0                       0                
  6   256   # axis5.motor.Rd3.v
  0       0                       0                       0                
  6   769   # axis5.motor.Rd3.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Rd3.T
  0       0                       0                       0                
  6   256   # axis5.motor.Rd3.LossPower
  0       0                       0                       0                
  6   256   # axis5.motor.Rd3.R_actual
  0       0                       0                       0                
  6   260   # axis5.motor.g1.p.v
  0       0                       0                       0                
  6   260   # axis5.motor.g2.p.v
  0       0                       0                       0                
  6   260   # axis5.motor.g3.p.v
  0       0                       0                       0                
  6   388   # axis5.motor.g3.p.i
  0       0                       0                       0                
  6   260   # axis5.motor.hall1.p.v
  0       0                       0                       0                
  6   260   # axis5.motor.hall1.n.v
  0       0                       0                       0                
  6   260   # axis5.motor.g4.p.v
  0       0                       0                       0                
  6   260   # axis5.motor.g5.p.v
  0       0                       0                       0                
  6   388   # axis5.motor.phi.flange.tau
  0       0                       0                       0                
  6   260   # axis5.motor.speed.flange.phi
  0       0                       0                       0                
  6   388   # axis5.motor.speed.flange.tau
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis5.motor.Jmotor.J
  0       3                       1                       5                
  6   770   # axis5.motor.Jmotor.stateSelect
  0       0                       0                       0                
  6   256   # axis5.motor.Jmotor.w
  0       0                       0                       0                
  6   256   # axis5.motor.Jmotor.der(w)
 -1       1                       0                       0                
  1   280   # axis5.motor.convert1.k
 -1       1                       0                       0                
  1   280   # axis5.motor.convert2.k
  0       0                       0                       0                
  6   256   # axis5.controller.kp
  0       0                       0                       0                
  6   256   # axis5.controller.ks
  0       0                       0                       0                
  6   256   # axis5.controller.Ts
  0       0                       0                       0                
  6   256   # axis5.controller.ratio
  0       1                       0                       0                
  6   256   # axis5.controller.gain1.k
  0       0                       0                       0                
  6   256   # axis5.controller.gain1.y
  0       0                       0                       0                
  6   256   # axis5.controller.PI.k
  0       1                  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # axis5.controller.PI.T
  0       1                       1                       4                
  6   258   # axis5.controller.PI.initType
 -1       0                       0                       0                
  1   280   # axis5.controller.PI.x_start
 -1       0                       0                       0                
  1   280   # axis5.controller.PI.y_start
  0       0                       0                       0                
  6   256   # axis5.controller.PI.u
 -1       0                       0                       0                
  2   272   # axis5.controller.PI.x
  0       0                       0                       0                
  3   256   # axis5.controller.PI.der(x)
  0       0                       0                       0                
  6   256   # axis5.controller.feedback1.y
  0       1                       0                       0                
  6   256   # axis5.controller.P.k
  0       0                       0                       0                
  6   256   # axis5.controller.P.y
 -1       1                       0                       0                
  1   280   # axis5.controller.add3.k1
 -1       1                       0                       0                
  1   280   # axis5.controller.add3.k2
 -1      -1                       0                       0                
  1   280   # axis5.controller.add3.k3
  0       0                       0                       0                
  6   256   # axis5.controller.add3.u1
  0       1                       0                       0                
  6   256   # axis5.controller.gain2.k
  0       0                       0                       0                
  6   388   # axis5.angleSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis5.speedSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis5.accSensor.flange.tau
  0       1                       0                       0                
  6   257   # axis5.initializeFlange.use_phi_start
  0       1                       0                       0                
  6   257   # axis5.initializeFlange.use_w_start
  0       1                       0                       0                
  6   257   # axis5.initializeFlange.use_a_start
  0       4                       1                       5                
  6   258   # axis5.initializeFlange.stateSelect
  0       0                       0                       0                
  6   388   # axis5.initializeFlange.flange.tau
  0       0                       0                       0                
  6  1412   # axis5.initializeFlange.set_phi_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis5.initializeFlange.set_w_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis5.initializeFlange.set_a_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis5.initializeFlange.set_flange_tau.flange.tau
 -1       0                       0                       0                
  1   280   # axis5.const.k
  0       0                       0                       0                
  6   256   # axis6.kp
  0       0                       0                       0                
  6   256   # axis6.ks
  0       0                       0                       0                
  6   256   # axis6.Ts
 -1  8.4199999999999997E-02       0                       0                
  1   280   # axis6.k
 -1    7400                       0                       0                
  1   280   # axis6.w
 -1  2.7000000000000002E-01       0                       0                
  1   280   # axis6.D
 -1  4.3000000000000002E-05       0                 1.7976931348623157E+308
  1   280   # axis6.J
 -1     -99                       0                       0                
  1   280   # axis6.ratio
 -1  1.0900000000000000E+01       0                       0                
  1   280   # axis6.Rv0
 -1  3.9199999999999999E+00       0                       0                
  1   280   # axis6.Rv1
 -1  1.5412844036697249E+00       0                       0                
  1   280   # axis6.peak
  0       0                       0                       0                
  6   388   # axis6.gear.flange_a.tau
  0       0                       0                       0                
  6   256   # axis6.gear.i
  0       0                       0                       0                
  6   256   # axis6.gear.Rv0
  0       0                       0                       0                
  6   256   # axis6.gear.Rv1
  0       0                       0                       0                
  6   256   # axis6.gear.peak
  0       1                       0                       0                
  6   256   # axis6.gear.unitAngularVelocity
  0       1                       0                       0                
  6   256   # axis6.gear.unitTorque
  0       0                       0                       0                
  6   769   # axis6.gear.gear.useSupport
  0       0                       0                       0                
  6   388   # axis6.gear.gear.flange_b.tau
  0       0                       0                       0                
  6  1280   # axis6.gear.gear.phi_support
  0       1                       0                       0                
  6   256   # axis6.gear.gear.ratio
  0       0                       0                       0                
  6   769   # axis6.gear.bearingFriction.useSupport
  0       0                       0                       0                
  6  1280   # axis6.gear.bearingFriction.phi_support
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau_pos[1, 1]
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau_pos[1, 2]
  0       1                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau_pos[2, 1]
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau_pos[2, 2]
  0       1                       1                 1.7976931348623157E+308
  6   256   # axis6.gear.bearingFriction.peak
 -1  1.0000000000000000E+10       0                       0                
  1   280   # axis6.gear.bearingFriction.w_small
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau0
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau0_max
  0       0                       0                       0                
  6   257   # axis6.gear.bearingFriction.free
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.sa
  0       0                       0                       0                
  6   361   # axis6.gear.bearingFriction.startForward
  0       0                       0                       0                
  6   361   # axis6.gear.bearingFriction.startBackward
  0       0                       0                       0                
  6   353   # axis6.gear.bearingFriction.locked
  0       3                       0                       0                
  6   258   # axis6.gear.bearingFriction.Unknown
  0       2                       0                       0                
  6   258   # axis6.gear.bearingFriction.Free
  0       1                       0                       0                
  6   258   # axis6.gear.bearingFriction.Forward
  0       0                       0                       0                
  6   258   # axis6.gear.bearingFriction.Stuck
  0      -1                       0                       0                
  6   258   # axis6.gear.bearingFriction.Backward
  0       3                      -1                       3                
  6   330   # axis6.gear.bearingFriction.mode
  0       1                       0                       0                
  6   768   # axis6.gear.bearingFriction.unitAngularAcceleration
  0       1                       0                       0                
  6   768   # axis6.gear.bearingFriction.unitTorque
  0       0                       0                       0                
  6   769   # axis6.gear.bearingFriction.useHeatPort
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.lossPower
  0       0                       0                       0                
  6   256   # axis6.gear.bearingFriction.tau
  0       0                       0                 1.7976931348623157E+308
  6   256   # axis6.motor.J
  0       0                       0                       0                
  6   256   # axis6.motor.k
  0       0                       0                       0                
  6   256   # axis6.motor.w
  0       0                       0                       0                
  6   256   # axis6.motor.D
 -1     315                       0                       0                
  1   280   # axis6.motor.w_max
 -1       9                       0                       0                
  1   280   # axis6.motor.i_max
  0       0                       0                       0                
  6   260   # axis6.motor.Vs.p.v
  0       0                       0                       0                
  6   388   # axis6.motor.Vs.p.i
  0       0                       0                       0                
  6   260   # axis6.motor.Vs.n.v
  0       0                       0                       0                
  6   256   # axis6.motor.power.v1
  0       0                       0                       0                
  6   256   # axis6.motor.power.v2
  0       0                       0                       0                
  6   256   # axis6.motor.power.i1
  0       0                       0                       0                
  6   256   # axis6.motor.power.i2
  0       0                       0                       0                
  6   388   # axis6.motor.power.p1.i
  0       0                       0                       0                
  6   388   # axis6.motor.power.n1.i
  0       0                       0                       0                
  6   260   # axis6.motor.power.n2.v
  0       0                       0                       0                
  6   256   # axis6.motor.diff.v1
  0       0                       0                       0                
  6   256   # axis6.motor.diff.v2
  0       0                       0                       0                
  6   256   # axis6.motor.diff.i1
  0       0                       0                       0                
  6   256   # axis6.motor.diff.i2
  0       0                       0                       0                
  6   260   # axis6.motor.diff.p1.v
  0       0                       0                       0                
  6   388   # axis6.motor.diff.p1.i
  0       0                       0                       0                
  6   388   # axis6.motor.diff.n1.i
  0       0                       0                       0                
  6   260   # axis6.motor.diff.n2.v
  0       0                       0                       0                
  6   769   # axis6.motor.emf.useSupport
  0       1                       0                       0                
  6   256   # axis6.motor.emf.k
  0       0                       0                       0                
  6   256   # axis6.motor.emf.v
  0       0                       0                       0                
  6   256   # axis6.motor.emf.phi
  0       0                       0                       0                
  6   256   # axis6.motor.emf.tau
  0       0                       0                       0                
  6   260   # axis6.motor.emf.n.v
 -1       0                       0                       0                
  1  1304   # axis6.motor.emf.fixed.phi0
  0       0                       0                       0                
  6   256   # axis6.motor.La.v
  0       0                       0                       0                
  6   260   # axis6.motor.La.p.v
 -1       0                       0                       0                
  2   272   # axis6.motor.La.i
  0       0                       0                       0                
  3   256   # axis6.motor.La.der(i)
  0       1                       0                       0                
  6   256   # axis6.motor.La.L
 -1     250                       0                       0                
  1   280   # axis6.motor.Ra.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Ra.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Ra.alpha
  0       0                       0                       0                
  6   256   # axis6.motor.Ra.v
  0       0                       0                       0                
  6   769   # axis6.motor.Ra.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Ra.T
  0       0                       0                       0                
  6   256   # axis6.motor.Ra.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Ra.R_actual
 -1     100                       0                       0                
  1   280   # axis6.motor.Rd2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Rd2.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Rd2.alpha
  0       0                       0                       0                
  6   256   # axis6.motor.Rd2.v
  0       0                       0                       0                
  6   769   # axis6.motor.Rd2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Rd2.T
  0       0                       0                       0                
  6   256   # axis6.motor.Rd2.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Rd2.R_actual
 -1       0                       0                       0                
  2   272   # axis6.motor.C.v
  0       0                       0                       0                
  3   256   # axis6.motor.C.der(v)
  0       0                       0                       0                
  6   260   # axis6.motor.C.p.v
  0       0                       0                       0                
  6   388   # axis6.motor.C.p.i
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis6.motor.C.C
  0       0                       0                       0                
  6   256   # axis6.motor.OpI.v1
  0       0                       0                       0                
  6   256   # axis6.motor.OpI.i1
  0       0                       0                       0                
  6   260   # axis6.motor.OpI.p1.v
  0       0                       0                       0                
  6   388   # axis6.motor.OpI.p1.i
  0       0                       0                       0                
  6   260   # axis6.motor.OpI.n1.v
  0       0                       0                       0                
  6   388   # axis6.motor.OpI.n1.i
  0       0                       0                       0                
  6   260   # axis6.motor.OpI.n2.v
 -1      10                       0                       0                
  1   280   # axis6.motor.Ri.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Ri.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Ri.alpha
  0       0                       0                       0                
  6   260   # axis6.motor.Ri.n.v
  0       0                       0                       0                
  6   769   # axis6.motor.Ri.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Ri.T
  0       0                       0                       0                
  6   256   # axis6.motor.Ri.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Ri.R_actual
 -1     100                       0                       0                
  1   280   # axis6.motor.Rd1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Rd1.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Rd1.alpha
  0       0                       0                       0                
  6   256   # axis6.motor.Rd1.v
  0       0                       0                       0                
  6   769   # axis6.motor.Rd1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Rd1.T
  0       0                       0                       0                
  6   256   # axis6.motor.Rd1.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Rd1.R_actual
 -1     200                       0                       0                
  1   280   # axis6.motor.Rp1.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Rp1.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Rp1.alpha
  0       0                       0                       0                
  6   256   # axis6.motor.Rp1.v
  0       0                       0                       0                
  6   388   # axis6.motor.Rp1.p.i
  0       0                       0                       0                
  6   769   # axis6.motor.Rp1.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Rp1.T
  0       0                       0                       0                
  6   256   # axis6.motor.Rp1.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Rp1.R_actual
 -1      50                       0                       0                
  1   280   # axis6.motor.Rp2.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Rp2.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Rp2.alpha
  0       0                       0                       0                
  6   260   # axis6.motor.Rp2.n.v
  0       0                       0                       0                
  6   769   # axis6.motor.Rp2.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Rp2.T
  0       0                       0                       0                
  6   256   # axis6.motor.Rp2.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Rp2.R_actual
 -1     100                       0                       0                
  1   280   # axis6.motor.Rd4.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Rd4.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Rd4.alpha
  0       0                       0                       0                
  6   388   # axis6.motor.Rd4.p.i
  0       0                       0                       0                
  6   260   # axis6.motor.Rd4.n.v
  0       0                       0                       0                
  6   769   # axis6.motor.Rd4.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Rd4.T
  0       0                       0                       0                
  6   256   # axis6.motor.Rd4.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Rd4.R_actual
  0       0                       0                       0                
  6   260   # axis6.motor.hall2.p.v
  0       0                       0                       0                
  6   260   # axis6.motor.hall2.n.v
 -1     100                       0                       0                
  1   280   # axis6.motor.Rd3.R
 -1  3.0014999999999998E+02       0                 1.7976931348623157E+308
  1   280   # axis6.motor.Rd3.T_ref
 -1       0                       0                       0                
  1   280   # axis6.motor.Rd3.alpha
  0       0                       0                       0                
  6   256   # axis6.motor.Rd3.v
  0       0                       0                       0                
  6   769   # axis6.motor.Rd3.useHeatPort
  0  2.8814999999999998E+02       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Rd3.T
  0       0                       0                       0                
  6   256   # axis6.motor.Rd3.LossPower
  0       0                       0                       0                
  6   256   # axis6.motor.Rd3.R_actual
  0       0                       0                       0                
  6   260   # axis6.motor.g1.p.v
  0       0                       0                       0                
  6   260   # axis6.motor.g2.p.v
  0       0                       0                       0                
  6   260   # axis6.motor.g3.p.v
  0       0                       0                       0                
  6   388   # axis6.motor.g3.p.i
  0       0                       0                       0                
  6   260   # axis6.motor.hall1.p.v
  0       0                       0                       0                
  6   260   # axis6.motor.hall1.n.v
  0       0                       0                       0                
  6   260   # axis6.motor.g4.p.v
  0       0                       0                       0                
  6   260   # axis6.motor.g5.p.v
  0       0                       0                       0                
  6   388   # axis6.motor.phi.flange.tau
  0       0                       0                       0                
  6   260   # axis6.motor.speed.flange.phi
  0       0                       0                       0                
  6   388   # axis6.motor.speed.flange.tau
  0       1                       0                 1.7976931348623157E+308
  6   256   # axis6.motor.Jmotor.J
  0       3                       1                       5                
  6   770   # axis6.motor.Jmotor.stateSelect
  0       0                       0                       0                
  6   256   # axis6.motor.Jmotor.w
  0       0                       0                       0                
  6   256   # axis6.motor.Jmotor.der(w)
 -1       1                       0                       0                
  1   280   # axis6.motor.convert1.k
 -1       1                       0                       0                
  1   280   # axis6.motor.convert2.k
  0       0                       0                       0                
  6   256   # axis6.controller.kp
  0       0                       0                       0                
  6   256   # axis6.controller.ks
  0       0                       0                       0                
  6   256   # axis6.controller.Ts
  0       0                       0                       0                
  6   256   # axis6.controller.ratio
  0       1                       0                       0                
  6   256   # axis6.controller.gain1.k
  0       0                       0                       0                
  6   256   # axis6.controller.gain1.y
  0       0                       0                       0                
  6   256   # axis6.controller.PI.k
  0       1                  9.9999999999999997E-61 1.7976931348623157E+308
  6   256   # axis6.controller.PI.T
  0       1                       1                       4                
  6   258   # axis6.controller.PI.initType
 -1       0                       0                       0                
  1   280   # axis6.controller.PI.x_start
 -1       0                       0                       0                
  1   280   # axis6.controller.PI.y_start
  0       0                       0                       0                
  6   256   # axis6.controller.PI.u
 -1       0                       0                       0                
  2   272   # axis6.controller.PI.x
  0       0                       0                       0                
  3   256   # axis6.controller.PI.der(x)
  0       0                       0                       0                
  6   256   # axis6.controller.feedback1.y
  0       1                       0                       0                
  6   256   # axis6.controller.P.k
  0       0                       0                       0                
  6   256   # axis6.controller.P.y
 -1       1                       0                       0                
  1   280   # axis6.controller.add3.k1
 -1       1                       0                       0                
  1   280   # axis6.controller.add3.k2
 -1      -1                       0                       0                
  1   280   # axis6.controller.add3.k3
  0       0                       0                       0                
  6   256   # axis6.controller.add3.u1
  0       1                       0                       0                
  6   256   # axis6.controller.gain2.k
  0       0                       0                       0                
  6   388   # axis6.angleSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis6.speedSensor.flange.tau
  0       0                       0                       0                
  6   388   # axis6.accSensor.flange.tau
  0       1                       0                       0                
  6   257   # axis6.initializeFlange.use_phi_start
  0       1                       0                       0                
  6   257   # axis6.initializeFlange.use_w_start
  0       1                       0                       0                
  6   257   # axis6.initializeFlange.use_a_start
  0       4                       1                       5                
  6   258   # axis6.initializeFlange.stateSelect
  0       0                       0                       0                
  6   388   # axis6.initializeFlange.flange.tau
  0       0                       0                       0                
  6  1412   # axis6.initializeFlange.set_phi_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis6.initializeFlange.set_w_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis6.initializeFlange.set_a_start.flange.tau
  0       0                       0                       0                
  6  1412   # axis6.initializeFlange.set_flange_tau.flange.tau
 -1       0                       0                       0                
  1   280   # axis6.const.k
  0       0                       0                       0                
  6  1861   # controlBus.axisControlBus1.motion_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus1.angle_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus1.speed_ref
  0       0                       0                       0                
  6  1860   # controlBus.axisControlBus1.acceleration_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus1.current_ref
  0       0                       0                       0                
  6  1861   # controlBus.axisControlBus2.motion_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus2.angle_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus2.speed_ref
  0       0                       0                       0                
  6  1860   # controlBus.axisControlBus2.acceleration_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus2.current_ref
  0       0                       0                       0                
  6  1861   # controlBus.axisControlBus3.motion_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus3.angle_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus3.speed_ref
  0       0                       0                       0                
  6  1860   # controlBus.axisControlBus3.acceleration_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus3.current_ref
  0       0                       0                       0                
  6  1861   # controlBus.axisControlBus4.motion_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus4.angle_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus4.speed_ref
  0       0                       0                       0                
  6  1860   # controlBus.axisControlBus4.acceleration_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus4.current_ref
  0       0                       0                       0                
  6  1861   # controlBus.axisControlBus5.motion_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus5.angle_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus5.speed_ref
  0       0                       0                       0                
  6  1860   # controlBus.axisControlBus5.acceleration_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus5.current_ref
  0       0                       0                       0                
  6  1861   # controlBus.axisControlBus6.motion_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus6.angle_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus6.speed_ref
  0       0                       0                       0                
  6  1860   # controlBus.axisControlBus6.acceleration_ref
  0       0                       0                       0                
  6  1796   # controlBus.axisControlBus6.current_ref


# Matrix with 6 columns defining the initial value calculation
# (columns 5 and 6 are not utilized for the calculation but are
#  reported by dymosim via dymosim -i for user convenience):
#
# column 1: Type of initial value
#           = -2: special case: for continuing simulation (column 2 = value)
#           = -1: fixed value (column 2 = fixed value)
#           =  0: free value, i.e., no restriction (column 2 = initial value)
#           >  0: desired value (column 1 = weight for optimization
#                                column 2 = desired value)
#                 use weight=1, since automatic scaling usually
#                 leads to equally weighted terms
# column 2: fixed, free or desired value according to column 1.
# column 3: Minimum value (ignored, if Minimum >= Maximum).
# column 4: Maximum value (ignored, if Minimum >= Maximum).
#           Minimum and maximum restrict the search range in initial
#           value calculation. They might also be used for scaling.
# column 5: Category of variable.
#           = 1: parameter.
#           = 2: state.
#           = 3: state derivative.
#           = 4: output.
#           = 5: input.
#           = 6: auxiliary variable.
# column 6: Data type of variable and flags according to dsBaseType
#  <value>&3= 0: real.
#  <value>&3= 1: boolean.
#  <value>&3= 2: integer.
#
# Initial values are calculated according to the following procedure:
#
# Initial values are calculated according to the following procedure:
#
# - If parameters, states and inputs are FIXED, and other variables
#   are FREE, the initialization is performed in the normal way.
#
# - If parameters and inputs are FIXED, and all other variables
#   have special case for continue (-2 in 1st column), or FREE
#   the initialization is ignored and variables are set to these values.
#   This is intended to continue the simulation.
#
#   Which variables will be important for initialization and continue
#   is indicated by value in column 6 & dsStartMasks.
#
char initialDescription(4264,152)
Mass of load [kg]
Distance from last flange to load mass [m]
Distance from last flange to load mass [m]
Distance from last flange to load mass [m]
Gravity acceleration [m/s2]
Start time of reference motion [s]
Additional time after reference motion is in rest before simulation is stopped [s]
Start angle of axis 1 [deg]
Start angle of axis 2 [deg]
Start angle of axis 3 [deg]
Start angle of axis 4 [deg]
Start angle of axis 5 [deg]
Start angle of axis 6 [deg]
End angle of axis 1 [deg]
End angle of axis 2 [deg]
End angle of axis 3 [deg]
End angle of axis 4 [deg]
End angle of axis 5 [deg]
End angle of axis 6 [deg]
Maximum reference speeds of all joints [rad/s]
Maximum reference speeds of all joints [rad/s]
Maximum reference speeds of all joints [rad/s]
Maximum reference speeds of all joints [rad/s]
Maximum reference speeds of all joints [rad/s]
Maximum reference speeds of all joints [rad/s]
Maximum reference accelerations of all joints [rad/s2]
Maximum reference accelerations of all joints [rad/s2]
Maximum reference accelerations of all joints [rad/s2]
Maximum reference accelerations of all joints [rad/s2]
Maximum reference accelerations of all joints [rad/s2]
Maximum reference accelerations of all joints [rad/s2]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation of all components is enabled [:#(type=Boolean)]
= true, if world coordinate system shall be visualized [:#(type=Boolean)]
= true, if gravity field shall be visualized (acceleration vector or field center) [:#(type=Boolean)]
= true, if ground plane shall be visualized [:#(type=Boolean)]
Type of gravity field [:#(type=Modelica.Mechanics.MultiBody.Types.GravityTypes)]
Constant gravity acceleration [m/s2]
Direction of gravity resolved in world frame (gravity = g*n/length(n)) [1]
Direction of gravity resolved in world frame (gravity = g*n/length(n)) [1]
Direction of gravity resolved in world frame (gravity = g*n/length(n)) [1]
Gravity field constant (default = field constant of earth) [m3/s2]
= true, if 3-dim. mechanical effects of Parts.Mounting1D/Rotor1D/BevelGear1D shall be taken into account [:#(type=Boolean)]
Length of world axes arrows [m]
Diameter of world axes arrows [m]
= true, if labels shall be shown [:#(type=Boolean)]
Color of x-arrow [:#(type=Integer)]
Color of x-arrow [:#(type=Integer)]
Color of x-arrow [:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
[:#(type=Integer)]
Color of z-arrow [:#(type=Integer)]
Color of z-arrow [:#(type=Integer)]
Color of z-arrow [:#(type=Integer)]
Position vector from origin of world frame to arrow tail, resolved in world frame [m]
Position vector from origin of world frame to arrow tail, resolved in world frame [m]
Position vector from origin of world frame to arrow tail, resolved in world frame [m]
Length of gravity arrow [m]
Diameter of gravity arrow [m]
Color of gravity arrow [:#(type=Integer)]
Color of gravity arrow [:#(type=Integer)]
Color of gravity arrow [:#(type=Integer)]
Diameter of sphere representing gravity center (default = mean diameter of earth) [m]
Color of gravity sphere [:#(type=Integer)]
Color of gravity sphere [:#(type=Integer)]
Color of gravity sphere [:#(type=Integer)]
Vector along 1st axis (called u) of ground plane, resolved in world frame (should be perpendicular to gravity direction) [1]
Vector along 1st axis (called u) of ground plane, resolved in world frame (should be perpendicular to gravity direction) [1]
Vector along 1st axis (called u) of ground plane, resolved in world frame (should be perpendicular to gravity direction) [1]
Length of ground plane along groundAxis_u [m]
Length of ground plane perpendicular to groundAxis_u [m]
Color of ground plane [:#(type=Integer)]
Color of ground plane [:#(type=Integer)]
Color of ground plane [:#(type=Integer)]
Nominal length of multi-body system [m]
Default for length of a frame axis (but not world frame) [m]
Default for the fixed length of a shape representing a joint [m]
Default for the fixed width of a shape representing a joint [m]
Default for the fixed length of a shape representing a force (e.g., damper) [m]
Default for the fixed width of a shape representing a force (e.g., spring, bushing) [m]
Default for diameter of sphere representing the center of mass of a body [m]
Default for shape width as a fraction of shape length (e.g., for Parts.FixedTranslation) [1]
Default for arrow diameter (e.g., of forces, torques, sensors) [m]
Default for arrow diameter of a coordinate system as a fraction of axis length [1]
Default reflection of ambient light (= 0: light is completely absorbed)
Default scaling of force arrows (length = force/defaultN_to_m) [N/m]
Default scaling of torque arrows (length = torque/defaultNm_to_m) [N.m/m]
[:#(type=Integer)]
[:#(type=Integer)]
[m]
[m]
[m]
[m]
[m]
[m]
[m]
[m]
[m]
[:#(type=Integer)]
= true, if animation shall be enabled [:#(type=Boolean)]
Mass of load [kg]
Distance from last flange to load mass [m]
Distance from last flange to load mass [m]
Distance from last flange to load mass [m]
Gravity acceleration [m/s2]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if axis flange is enabled [:#(type=Boolean)]
= true, if animation shall be enabled (show axis as cylinder) [:#(type=Boolean)]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Length of cylinder representing the joint axis [m]
Diameter of cylinder representing the joint axis [m]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Priority to use joint angle phi and w=der(phi) as states [:#(type=StateSelect)]
Relative rotation angle from frame_a to frame_b [rad|deg]
der(Relative rotation angle from frame_a to frame_b) [rad/s]
First derivative of angle phi (relative angular velocity) [rad/s]
der(First derivative of angle phi (relative angular velocity)) [rad/s2]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Width of visual object [m]
Height of visual object [m]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

x-axis unit vector of shape, resolved in world frame [1]
x-axis unit vector of shape, resolved in world frame [1]
x-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]


Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if axis flange is enabled [:#(type=Boolean)]
= true, if animation shall be enabled (show axis as cylinder) [:#(type=Boolean)]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Length of cylinder representing the joint axis [m]
Diameter of cylinder representing the joint axis [m]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Priority to use joint angle phi and w=der(phi) as states [:#(type=StateSelect)]
Relative rotation angle from frame_a to frame_b [rad|deg]
der(Relative rotation angle from frame_a to frame_b) [rad/s]
First derivative of angle phi (relative angular velocity) [rad/s]
der(First derivative of angle phi (relative angular velocity)) [rad/s2]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Width of visual object [m]
Height of visual object [m]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

x-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]


Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Transformation matrix from world frame to local frame
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Transformation matrix from world frame to local frame
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if axis flange is enabled [:#(type=Boolean)]
= true, if animation shall be enabled (show axis as cylinder) [:#(type=Boolean)]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Length of cylinder representing the joint axis [m]
Diameter of cylinder representing the joint axis [m]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Priority to use joint angle phi and w=der(phi) as states [:#(type=StateSelect)]
Relative rotation angle from frame_a to frame_b [rad|deg]
der(Relative rotation angle from frame_a to frame_b) [rad/s]
First derivative of angle phi (relative angular velocity) [rad/s]
der(First derivative of angle phi (relative angular velocity)) [rad/s2]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Transformation matrix from world frame to local frame
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Width of visual object [m]
Height of visual object [m]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

x-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]


Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Transformation matrix from world frame to local frame
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if axis flange is enabled [:#(type=Boolean)]
= true, if animation shall be enabled (show axis as cylinder) [:#(type=Boolean)]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Length of cylinder representing the joint axis [m]
Diameter of cylinder representing the joint axis [m]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Priority to use joint angle phi and w=der(phi) as states [:#(type=StateSelect)]
Relative rotation angle from frame_a to frame_b [rad|deg]
der(Relative rotation angle from frame_a to frame_b) [rad/s]
First derivative of angle phi (relative angular velocity) [rad/s]
der(First derivative of angle phi (relative angular velocity)) [rad/s2]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Transformation matrix from world frame to local frame
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Width of visual object [m]
Height of visual object [m]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

y-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]


Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if axis flange is enabled [:#(type=Boolean)]
= true, if animation shall be enabled (show axis as cylinder) [:#(type=Boolean)]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Length of cylinder representing the joint axis [m]
Diameter of cylinder representing the joint axis [m]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Priority to use joint angle phi and w=der(phi) as states [:#(type=StateSelect)]
Relative rotation angle from frame_a to frame_b [rad|deg]
der(Relative rotation angle from frame_a to frame_b) [rad/s]
First derivative of angle phi (relative angular velocity) [rad/s]
der(First derivative of angle phi (relative angular velocity)) [rad/s2]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Width of visual object [m]
Height of visual object [m]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]


Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if axis flange is enabled [:#(type=Boolean)]
= true, if animation shall be enabled (show axis as cylinder) [:#(type=Boolean)]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Axis of rotation resolved in frame_a (= same as in frame_b) [1]
Length of cylinder representing the joint axis [m]
Diameter of cylinder representing the joint axis [m]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Color of cylinder representing the joint axis [:#(type=Integer)]
Priority to use joint angle phi and w=der(phi) as states [:#(type=StateSelect)]
Relative rotation angle from frame_a to frame_b [rad|deg]
der(Relative rotation angle from frame_a to frame_b) [rad/s]
First derivative of angle phi (relative angular velocity) [rad/s]
der(First derivative of angle phi (relative angular velocity)) [rad/s2]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Unit vector in direction of rotation axis, resolved in frame_a (= same as in frame_b) [1]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Width of visual object [m]
Height of visual object [m]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]
{length,width,height} of shape [m]


Fixed offset angle of housing [rad|deg]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of frame_a resolved in frame_a [rad/s]
Absolute angular velocity of frame_a resolved in frame_a [rad/s]
Absolute angular velocity of frame_a resolved in frame_a [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Absolute angular acceleration of frame_a resolved in frame_a [rad/s2]
Absolute angular acceleration of frame_a resolved in frame_a [rad/s2]
Absolute angular acceleration of frame_a resolved in frame_a [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b0.dxf]
x-axis unit vector of shape, resolved in world frame [1]
x-axis unit vector of shape, resolved in world frame [1]
x-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]

Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of frame_a resolved in frame_a [rad/s]
Absolute angular velocity of frame_a resolved in frame_a [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Absolute angular acceleration of frame_a resolved in frame_a [rad/s2]
Absolute angular acceleration of frame_a resolved in frame_a [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b1.dxf]
x-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]

Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
der(Position vector from origin of world frame to origin of frame_a) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Transformation matrix from world frame to local frame
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Position vector from world frame to the connector frame origin, resolved in world frame [m]
der(Position vector from world frame to the connector frame origin, resolved in world frame) [m/s]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
der(Absolute velocity of frame_a, resolved in world frame (= der(r_0))) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Transformation matrix from world frame to local frame
Position vector from origin of world frame to origin of object frame, resolved in world frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b2.dxf]
x-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]

Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Transformation matrix from world frame to local frame
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Transformation matrix from world frame to local frame
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b3.dxf]
x-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]

= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b4.dxf]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]

= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b5.dxf]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]

Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Position vector from origin of world frame to origin of frame_a [m]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
Absolute velocity of frame_a, resolved in world frame (= der(r_0)) [m/s]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
der(Absolute angular velocity of frame_a resolved in frame_a) [rad/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
[:modelica://Modelica/Resources/Data/Shapes/RobotR3/b6.dxf]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]

Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled (show shape between frame_a and frame_b and optionally a sphere at the center of mass) [:#(type=Boolean)]
= true, if mass shall be animated as sphere provided animation=true [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Diameter of sphere [m]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
Color of sphere of mass [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-force resolved in connector frame [N]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
Cut-torque resolved in connector frame [N.m]
= true, if animation shall be enabled [:#(type=Boolean)]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to frame_b resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector from frame_a to shape origin, resolved in frame_a [m]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in length direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Vector in width direction of shape, resolved in frame_a [1]
Length of shape [m]
Width of shape [m]
Height of shape [m]
Additional parameter depending on shapeType (see docu of Visualizers.Advanced.Shape)
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Color of shape [:#(type=Integer)]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
= true, if animation shall be enabled (show cylinder and sphere) [:#(type=Boolean)]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Vector from frame_a to center of mass, resolved in frame_a [m]
Mass of rigid body [kg]
Element (1,1) of inertia tensor [kg.m2]
Element (2,2) of inertia tensor [kg.m2]
Element (3,3) of inertia tensor [kg.m2]
Element (2,1) of inertia tensor [kg.m2]
Element (3,1) of inertia tensor [kg.m2]
Element (3,2) of inertia tensor [kg.m2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
Absolute acceleration of frame_a resolved in world frame (= der(v_0)) [m/s2]
= true, if angles_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Initial values of angles to rotate world frame around 'sequence_start' axes into frame_a [rad|deg]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a at initial time [:#(type=Integer)]
= true, if w_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
Initial or guess values of angular velocity of frame_a resolved in world frame [rad/s]
= true, if z_0_start are used as initial values, else as guess values [:#(type=Boolean)]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Initial values of angular acceleration z_0 = der(w_0) [rad/s2]
Diameter of sphere [m]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Color of sphere [:#(type=Integer)]
Diameter of cylinder [m]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
Color of cylinder [:#(type=Integer)]
= true, if absolute variables of body object shall be used as states (StateSelect.always) [:#(type=Boolean)]
= true, if quaternions shall be used as potential states otherwise use 3 angles as potential states [:#(type=Boolean)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Sequence of rotations to rotate world frame into frame_a around the 3 angles used as potential states [:#(type=Integer)]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Inertia tensor [kg.m2]
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Transformation matrix from world frame to local frame
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Absolute angular velocity of local frame, resolved in local frame [rad/s]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Gravity acceleration resolved in world frame [m/s2]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a at initial time [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Quaternion orientation object from world frame to frame_a (dummy value, if quaternions are not used as states) [1]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Potential angle states at initial time [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
Dummy or 3 angles to rotate world frame into frame_a of body [rad|deg]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi) [rad/s]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
= der(phi_d) [rad/s2]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Length of visual object [m]
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

x-axis unit vector of shape, resolved in world frame [1]
x-axis unit vector of shape, resolved in world frame [1]
x-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
y-axis unit vector of shape, resolved in world frame [1]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
{length,width,height} of shape [m]

Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Position vector from origin of object frame to shape origin, resolved in object frame [m]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in length direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Vector in width direction, resolved in object frame [1]
Additional size data for some of the shape types
Color of shape
Color of shape
Color of shape
[:#(type=Boolean)]
[1]
[1]
[1]
[1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector in lengthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]
Unit vector orthogonal to lengthDirection in the plane of lengthDirection and widthDirection, resolved in object frame [1]

position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]
position vector from world frame to shape frame, resolved in world frame [m]


Number of driven axis [:#(type=Integer)]
Start angles [deg]
Start angles [deg]
Start angles [deg]
Start angles [deg]
Start angles [deg]
Start angles [deg]
End angles [deg]
End angles [deg]
End angles [deg]
End angles [deg]
End angles [deg]
End angles [deg]
Maximum axis speed [rad/s]
Maximum axis speed [rad/s]
Maximum axis speed [rad/s]
Maximum axis speed [rad/s]
Maximum axis speed [rad/s]
Maximum axis speed [rad/s]
Maximum axis acceleration [rad/s2]
Maximum axis acceleration [rad/s2]
Maximum axis acceleration [rad/s2]
Maximum axis acceleration [rad/s2]
Maximum axis acceleration [rad/s2]
Maximum axis acceleration [rad/s2]
Start time of movement [s]
Additional time after reference motion is in rest before simulation is stopped [s]
Start angles [rad|deg]
Start angles [rad|deg]
Start angles [rad|deg]
Start angles [rad|deg]
Start angles [rad|deg]
Start angles [rad|deg]
End angles [rad|deg]
End angles [rad|deg]
End angles [rad|deg]
End angles [rad|deg]
End angles [rad|deg]
End angles [rad|deg]
Start position [rad]
Start position [rad]
Start position [rad]
Start position [rad]
Start position [rad]
Start position [rad]
End position [rad]
End position [rad]
End position [rad]
End position [rad]
End position [rad]
End position [rad]
Maximum velocities der(q) [rad/s]
Maximum velocities der(q) [rad/s]
Maximum velocities der(q) [rad/s]
Maximum velocities der(q) [rad/s]
Maximum velocities der(q) [rad/s]
Maximum velocities der(q) [rad/s]
Maximum accelerations der(qd) [rad/s2]
Maximum accelerations der(qd) [rad/s2]
Maximum accelerations der(qd) [rad/s2]
Maximum accelerations der(qd) [rad/s2]
Maximum accelerations der(qd) [rad/s2]
Maximum accelerations der(qd) [rad/s2]
Time instant at which movement starts [s]
Number of output signals (= dimension of q, qd, qdd, moving) [:#(type=Integer)]
Time instant at which movement stops [s]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad/s]
[rad/s]
[rad/s]
[rad/s]
[rad/s]
[rad/s]
[rad/s2]
[rad/s2]
[rad/s2]
[rad/s2]
[rad/s2]
[rad/s2]
[rad]
[rad]
[rad]
[rad]
[rad]
[rad]

[:#(type=Boolean)]


[s-1]
[s-2]












[s]
[s]
[s]
[s]
[:#(type=Boolean)]
[s]
[s]
[s]
[s-1]
[1]
[1]
[1]
[1]
[s-1]
[s-2]
Number of driven axis [:#(type=Integer)]
Map path planning of axisUsed to axisControlBus [:#(type=Integer)]
Number of driven axis [:#(type=Integer)]
Map path planning of axisUsed to axisControlBus [:#(type=Integer)]
Number of driven axis [:#(type=Integer)]
Map path planning of axisUsed to axisControlBus [:#(type=Integer)]
Number of driven axis [:#(type=Integer)]
Map path planning of axisUsed to axisControlBus [:#(type=Integer)]
Number of driven axis [:#(type=Integer)]
Map path planning of axisUsed to axisControlBus [:#(type=Integer)]
Number of driven axis [:#(type=Integer)]
Map path planning of axisUsed to axisControlBus [:#(type=Integer)]
Terminate simulation when condition becomes true [:#(type=Boolean)]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Moment of inertia of motor [kg.m2]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1)
Cut torque in the flange [N.m]
Gear ratio [1]
Spring constant [N.m/rad]
Damper constant [N.m.s/rad]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient (R=Rv0+Rv1*abs(qd)) [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1)
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
der(Absolute rotation angle of flange2) [rad/s2]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
Spring constant [N.m/rad]
Damping constant [N.m.s/rad]
Unstretched spring angle [rad|deg]
Relative rotation angle (= flange_b.phi - flange_a.phi) [rad|deg]
der(Relative rotation angle (= flange_b.phi - flange_a.phi)) [rad/s]
Relative angular velocity (= der(phi_rel)) [rad/s]
der(Relative angular velocity (= der(phi_rel))) [rad/s2]
Nominal value of phi_rel (used for scaling) [rad|rad]
Priority to use phi_rel and w_rel as states [:#(type=StateSelect)]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Spring torque [N.m]
Damping torque [N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Peak for maximum friction torque at w==0 (tau0_max = peak*tau_pos[1,2]) [1]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Angle between shaft flanges (flange_a, flange_b) and support [rad|deg]
Friction torque [N.m]
Absolute angular velocity of flange_a and flange_b [rad/s]
der(Absolute angular velocity of flange_a and flange_b) [rad/s2]
Moment of inertia of motor [kg.m2]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Maximum speed of motor [rad/s]
Maximum current of motor [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Potential at the pin [V]
Current flowing into the pin [A]
Capacitance [F]
Voltage drop over the left port [V]
Current flowing from pos. to neg. pin of the left port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Gain value multiplied with input signal [V/A]
Gain value multiplied with input signal [V/A]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gear ratio of gearbox [1]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output [A]
Connector of Real input signal
State of block
der(State of block)
[rad]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 1 [rad/s]
Gain value multiplied with input signal [1]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if initial angle is defined by input phi_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial speed is defined by input w_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial angular acceleration is defined by input a_start, otherwise not initialized [:#(type=Boolean)]
Priority to use flange angle and speed as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Constant output value [rad/s2]
Spring constant [N.m/rad]
Damper constant [N.m.s/rad]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Moment of inertia of motor [kg.m2]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1)
Cut torque in the flange [N.m]
Gear ratio [1]
Spring constant [N.m/rad]
Damper constant [N.m.s/rad]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient (R=Rv0+Rv1*abs(qd)) [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1)
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
der(Absolute rotation angle of flange2) [rad/s2]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
Spring constant [N.m/rad]
Damping constant [N.m.s/rad]
Unstretched spring angle [rad|deg]
Relative rotation angle (= flange_b.phi - flange_a.phi) [rad|deg]
der(Relative rotation angle (= flange_b.phi - flange_a.phi)) [rad/s]
Relative angular velocity (= der(phi_rel)) [rad/s]
der(Relative angular velocity (= der(phi_rel))) [rad/s2]
Nominal value of phi_rel (used for scaling) [rad|rad]
Priority to use phi_rel and w_rel as states [:#(type=StateSelect)]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Spring torque [N.m]
Damping torque [N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Peak for maximum friction torque at w==0 (tau0_max = peak*tau_pos[1,2]) [1]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Angle between shaft flanges (flange_a, flange_b) and support [rad|deg]
Friction torque [N.m]
Absolute angular velocity of flange_a and flange_b [rad/s]
der(Absolute angular velocity of flange_a and flange_b) [rad/s2]
Moment of inertia of motor [kg.m2]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Maximum speed of motor [rad/s]
Maximum current of motor [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Potential at the pin [V]
Current flowing into the pin [A]
Capacitance [F]
Voltage drop over the left port [V]
Current flowing from pos. to neg. pin of the left port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Gain value multiplied with input signal [V/A]
Gain value multiplied with input signal [V/A]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gear ratio of gearbox [1]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output [A]
Connector of Real input signal
State of block
der(State of block)
[rad]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 1 [rad/s]
Gain value multiplied with input signal [1]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if initial angle is defined by input phi_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial speed is defined by input w_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial angular acceleration is defined by input a_start, otherwise not initialized [:#(type=Boolean)]
Priority to use flange angle and speed as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Constant output value [rad/s2]
Spring constant [N.m/rad]
Damper constant [N.m.s/rad]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Moment of inertia of motor [kg.m2]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1)
Cut torque in the flange [N.m]
Gear ratio [1]
Spring constant [N.m/rad]
Damper constant [N.m.s/rad]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient (R=Rv0+Rv1*abs(qd)) [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1)
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute rotation angle of flange [rad|deg]
der(Absolute rotation angle of flange) [rad/s]
der(Absolute rotation angle of flange2) [rad/s2]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
Spring constant [N.m/rad]
Damping constant [N.m.s/rad]
Unstretched spring angle [rad|deg]
Relative rotation angle (= flange_b.phi - flange_a.phi) [rad|deg]
der(Relative rotation angle (= flange_b.phi - flange_a.phi)) [rad/s]
Relative angular velocity (= der(phi_rel)) [rad/s]
der(Relative angular velocity (= der(phi_rel))) [rad/s2]
Nominal value of phi_rel (used for scaling) [rad|rad]
Priority to use phi_rel and w_rel as states [:#(type=StateSelect)]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Spring torque [N.m]
Damping torque [N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Peak for maximum friction torque at w==0 (tau0_max = peak*tau_pos[1,2]) [1]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Angle between shaft flanges (flange_a, flange_b) and support [rad|deg]
Friction torque [N.m]
Absolute angular velocity of flange_a and flange_b [rad/s]
der(Absolute angular velocity of flange_a and flange_b) [rad/s2]
Moment of inertia of motor [kg.m2]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Maximum speed of motor [rad/s]
Maximum current of motor [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Potential at the pin [V]
Current flowing into the pin [A]
Capacitance [F]
Voltage drop over the left port [V]
Current flowing from pos. to neg. pin of the left port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Gain value multiplied with input signal [V/A]
Gain value multiplied with input signal [V/A]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gear ratio of gearbox [1]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output [A]
Connector of Real input signal
State of block
der(State of block)
[rad]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 1 [rad/s]
Gain value multiplied with input signal [1]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if initial angle is defined by input phi_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial speed is defined by input w_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial angular acceleration is defined by input a_start, otherwise not initialized [:#(type=Boolean)]
Priority to use flange angle and speed as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Constant output value [rad/s2]
Spring constant [N.m/rad]
Damper constant [N.m.s/rad]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Moment of inertia of motor [kg.m2]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1) [1]
Cut torque in the flange [N.m]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient (R=Rv0+Rv1*abs(qd)) [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1) [1]
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Peak for maximum friction torque at w==0 (tau0_max = peak*tau_pos[1,2]) [1]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Friction torque [N.m]
Moment of inertia of motor [kg.m2]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Maximum speed of motor [rad/s]
Maximum current of motor [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Potential at the pin [V]
Current flowing into the pin [A]
Capacitance [F]
Voltage drop over the left port [V]
Current flowing from pos. to neg. pin of the left port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Gain value multiplied with input signal [V/A]
Gain value multiplied with input signal [V/A]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gear ratio of gearbox [1]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output [A]
Connector of Real input signal
State of block
der(State of block)
[rad]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 1 [rad/s]
Gain value multiplied with input signal [1]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if initial angle is defined by input phi_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial speed is defined by input w_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial angular acceleration is defined by input a_start, otherwise not initialized [:#(type=Boolean)]
Priority to use flange angle and speed as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Constant output value [rad/s2]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Moment of inertia of motor [kg.m2]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1) [1]
Cut torque in the flange [N.m]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient (R=Rv0+Rv1*abs(qd)) [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1) [1]
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Peak for maximum friction torque at w==0 (tau0_max = peak*tau_pos[1,2]) [1]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Friction torque [N.m]
Moment of inertia of motor [kg.m2]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Maximum speed of motor [rad/s]
Maximum current of motor [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Potential at the pin [V]
Current flowing into the pin [A]
Capacitance [F]
Voltage drop over the left port [V]
Current flowing from pos. to neg. pin of the left port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Gain value multiplied with input signal [V/A]
Gain value multiplied with input signal [V/A]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gear ratio of gearbox [1]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output [A]
Connector of Real input signal
State of block
der(State of block)
[rad]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 1 [rad/s]
Gain value multiplied with input signal [1]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if initial angle is defined by input phi_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial speed is defined by input w_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial angular acceleration is defined by input a_start, otherwise not initialized [:#(type=Boolean)]
Priority to use flange angle and speed as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Constant output value [rad/s2]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Moment of inertia of motor [kg.m2]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1) [1]
Cut torque in the flange [N.m]
Gear ratio [1]
Viscous friction torque at zero velocity [N.m]
Viscous friction coefficient (R=Rv0+Rv1*abs(qd)) [N.m.s/rad]
Maximum static friction torque is peak*Rv0 (peak >= 1) [1]
[rad/s]
[N.m]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Cut torque in the flange [N.m]
Absolute angle of support flange [rad|deg]
Transmission ratio (flange_a.phi/flange_b.phi) [1]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Absolute angle of support flange [rad|deg]
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Positive sliding friction characteristic [N.m] as function of w [rad/s] (w>=0)
Peak for maximum friction torque at w==0 (tau0_max = peak*tau_pos[1,2]) [1]
Relative angular velocity near to zero if jumps due to a reinit(..) of the velocity can occur (set to low value only if such impulses can occur) [rad/s]
Friction torque for w_relfric=0 and forward sliding [N.m]
Maximum friction torque for w_relfric=0 and locked [N.m]
= true, if frictional element is not active [:#(type=Boolean)]
Path parameter of friction characteristic tau = f(a_relfric) [1]
= true, if w_relfric=0 and start of forward sliding [:#(type=Boolean)]
= true, if w_relfric=0 and start of backward sliding [:#(type=Boolean)]
= true, if w_rel=0 and not sliding [:#(type=Boolean)]
Value of mode is not known [:#(type=Integer)]
Element is not active [:#(type=Integer)]
w_relfric > 0 (forward sliding) [:#(type=Integer)]
w_relfric = 0 (forward sliding, locked or backward sliding) [:#(type=Integer)]
w_relfric < 0 (backward sliding) [:#(type=Integer)]
Mode of friction (-1: backward sliding, 0: stuck, 1: forward sliding, 2: inactive, 3: unknown) [:#(type=Integer)]
[rad/s2]
[N.m]
= true, if heatPort is enabled [:#(type=Boolean)]
Loss power leaving component via heatPort (> 0, if heat is flowing out of component) [W]
Friction torque [N.m]
Moment of inertia of motor [kg.m2]
Gain of motor [N.m/A]
Time constant of motor
Damping constant of motor
Maximum speed of motor [rad/s]
Maximum current of motor [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
Voltage drop over the left port [V]
Voltage drop over the right port [V]
Current flowing from pos. to neg. pin of the left port [A]
Current flowing from pos. to neg. pin of the right port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if support flange enabled, otherwise implicitly grounded [:#(type=Boolean)]
Transformation coefficient [N.m/A]
Voltage drop between the two pins [V]
Angle of shaft flange with respect to support (= flange.phi - support.phi) [rad|deg]
Torque of flange [N.m]
Potential at the pin [V]
Fixed offset angle of housing [rad|deg]
Voltage drop of the two pins (= p.v - n.v) [V]
Potential at the pin [V]
Current flowing from pin p to pin n [A]
der(Current flowing from pin p to pin n) [A/s]
Inductance [H]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Voltage drop of the two pins (= p.v - n.v) [V]
der(Voltage drop of the two pins (= p.v - n.v)) [V/s]
Potential at the pin [V]
Current flowing into the pin [A]
Capacitance [F]
Voltage drop over the left port [V]
Current flowing from pos. to neg. pin of the left port [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
Current flowing into the pin [A]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Current flowing into the pin [A]
Potential at the pin [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Resistance at temperature T_ref [Ohm]
Reference temperature [K|degC]
Temperature coefficient of resistance (R_actual = R*(1 + alpha*(T_heatPort - T_ref)) [1/K]
Voltage drop of the two pins (= p.v - n.v) [V]
= true, if heatPort is enabled [:#(type=Boolean)]
Fixed device temperature if useHeatPort = false [K|degC]
Loss power leaving component via heatPort [W]
Actual resistance = R*(1 + alpha*(T_heatPort - T_ref)) [Ohm]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Current flowing into the pin [A]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Potential at the pin [V]
Cut torque in the flange [N.m]
Absolute rotation angle of flange [rad|deg]
Cut torque in the flange [N.m]
Moment of inertia [kg.m2]
Priority to use phi and w as states [:#(type=StateSelect)]
Absolute angular velocity of component (= der(phi)) [rad/s]
der(Absolute angular velocity of component (= der(phi))) [rad/s2]
Gain value multiplied with input signal [V/A]
Gain value multiplied with input signal [V/A]
Gain of position controller [1]
Gain of speed controller [1]
Time constant of integrator of speed controller [s]
Gear ratio of gearbox [1]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain [1]
Time Constant (T>0 required) [s]
Type of initialization (1: no init, 2: steady state, 3: initial state, 4: initial output) [:#(type=Modelica.Blocks.Types.Init)]
Initial or guess value of state
Initial value of output [A]
Connector of Real input signal
State of block
der(State of block)
[rad]
Gain value multiplied with input signal [1]
Output signal connector [rad]
Gain of input signal 1
Gain of input signal 2
Gain of input signal 3
Connector of Real input signal 1 [rad/s]
Gain value multiplied with input signal [1]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
= true, if initial angle is defined by input phi_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial speed is defined by input w_start, otherwise not initialized [:#(type=Boolean)]
= true, if initial angular acceleration is defined by input a_start, otherwise not initialized [:#(type=Boolean)]
Priority to use flange angle and speed as states [:#(type=StateSelect)]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Cut torque in the flange [N.m]
Constant output value [rad/s2]
= true, if reference motion is not in rest [:#(type=Boolean)]
Reference angle of axis flange [rad|deg]
Reference speed of axis flange [rad/s]
Reference acceleration of axis flange [rad/s2]
Reference current of motor [A]
= true, if reference motion is not in rest [:#(type=Boolean)]
Reference angle of axis flange [rad|deg]
Reference speed of axis flange [rad/s]
Reference acceleration of axis flange [rad/s2]
Reference current of motor [A]
= true, if reference motion is not in rest [:#(type=Boolean)]
Reference angle of axis flange [rad|deg]
Reference speed of axis flange [rad/s]
Reference acceleration of axis flange [rad/s2]
Reference current of motor [A]
= true, if reference motion is not in rest [:#(type=Boolean)]
Reference angle of axis flange [rad|deg]
Reference speed of axis flange [rad/s]
Reference acceleration of axis flange [rad/s2]
Reference current of motor [A]
= true, if reference motion is not in rest [:#(type=Boolean)]
Reference angle of axis flange [rad|deg]
Reference speed of axis flange [rad/s]
Reference acceleration of axis flange [rad/s2]
Reference current of motor [A]
= true, if reference motion is not in rest [:#(type=Boolean)]
Reference angle of axis flange [rad|deg]
Reference speed of axis flange [rad/s]
Reference acceleration of axis flange [rad/s2]
Reference current of motor [A]

